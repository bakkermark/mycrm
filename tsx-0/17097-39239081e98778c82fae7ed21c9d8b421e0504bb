{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.serializeOuter=exports.serialize=void 0;const html_js_1=require(\"../common/html.js\");const escape_js_1=require(\"entities/lib/escape.js\");const default_js_1=require(\"../tree-adapters/default.js\");const VOID_ELEMENTS=new Set([html_js_1.TAG_NAMES.AREA,html_js_1.TAG_NAMES.BASE,html_js_1.TAG_NAMES.BASEFONT,html_js_1.TAG_NAMES.BGSOUND,html_js_1.TAG_NAMES.BR,html_js_1.TAG_NAMES.COL,html_js_1.TAG_NAMES.EMBED,html_js_1.TAG_NAMES.FRAME,html_js_1.TAG_NAMES.HR,html_js_1.TAG_NAMES.IMG,html_js_1.TAG_NAMES.INPUT,html_js_1.TAG_NAMES.KEYGEN,html_js_1.TAG_NAMES.LINK,html_js_1.TAG_NAMES.META,html_js_1.TAG_NAMES.PARAM,html_js_1.TAG_NAMES.SOURCE,html_js_1.TAG_NAMES.TRACK,html_js_1.TAG_NAMES.WBR]);function isVoidElement(node,options){return options.treeAdapter.isElementNode(node)&&options.treeAdapter.getNamespaceURI(node)===html_js_1.NS.HTML&&VOID_ELEMENTS.has(options.treeAdapter.getTagName(node))}__name(isVoidElement,\"isVoidElement\");const defaultOpts={treeAdapter:default_js_1.defaultTreeAdapter,scriptingEnabled:true};function serialize(node,options){const opts=Object.assign(Object.assign({},defaultOpts),options);if(isVoidElement(node,opts)){return\"\"}return serializeChildNodes(node,opts)}__name(serialize,\"serialize\");exports.serialize=serialize;function serializeOuter(node,options){const opts=Object.assign(Object.assign({},defaultOpts),options);return serializeNode(node,opts)}__name(serializeOuter,\"serializeOuter\");exports.serializeOuter=serializeOuter;function serializeChildNodes(parentNode,options){let html=\"\";const container=options.treeAdapter.isElementNode(parentNode)&&options.treeAdapter.getTagName(parentNode)===html_js_1.TAG_NAMES.TEMPLATE&&options.treeAdapter.getNamespaceURI(parentNode)===html_js_1.NS.HTML?options.treeAdapter.getTemplateContent(parentNode):parentNode;const childNodes=options.treeAdapter.getChildNodes(container);if(childNodes){for(const currentNode of childNodes){html+=serializeNode(currentNode,options)}}return html}__name(serializeChildNodes,\"serializeChildNodes\");function serializeNode(node,options){if(options.treeAdapter.isElementNode(node)){return serializeElement(node,options)}if(options.treeAdapter.isTextNode(node)){return serializeTextNode(node,options)}if(options.treeAdapter.isCommentNode(node)){return serializeCommentNode(node,options)}if(options.treeAdapter.isDocumentTypeNode(node)){return serializeDocumentTypeNode(node,options)}return\"\"}__name(serializeNode,\"serializeNode\");function serializeElement(node,options){const tn=options.treeAdapter.getTagName(node);return`<${tn}${serializeAttributes(node,options)}>${isVoidElement(node,options)?\"\":`${serializeChildNodes(node,options)}</${tn}>`}`}__name(serializeElement,\"serializeElement\");function serializeAttributes(node,{treeAdapter}){let html=\"\";for(const attr of treeAdapter.getAttrList(node)){html+=\" \";if(!attr.namespace){html+=attr.name}else switch(attr.namespace){case html_js_1.NS.XML:{html+=`xml:${attr.name}`;break}case html_js_1.NS.XMLNS:{if(attr.name!==\"xmlns\"){html+=\"xmlns:\"}html+=attr.name;break}case html_js_1.NS.XLINK:{html+=`xlink:${attr.name}`;break}default:{html+=`${attr.prefix}:${attr.name}`}}html+=`=\"${(0,escape_js_1.escapeAttribute)(attr.value)}\"`}return html}__name(serializeAttributes,\"serializeAttributes\");function serializeTextNode(node,options){const{treeAdapter}=options;const content=treeAdapter.getTextNodeContent(node);const parent=treeAdapter.getParentNode(node);const parentTn=parent&&treeAdapter.isElementNode(parent)&&treeAdapter.getTagName(parent);return parentTn&&treeAdapter.getNamespaceURI(parent)===html_js_1.NS.HTML&&(0,html_js_1.hasUnescapedText)(parentTn,options.scriptingEnabled)?content:(0,escape_js_1.escapeText)(content)}__name(serializeTextNode,\"serializeTextNode\");function serializeCommentNode(node,{treeAdapter}){return`<!--${treeAdapter.getCommentNodeContent(node)}-->`}__name(serializeCommentNode,\"serializeCommentNode\");function serializeDocumentTypeNode(node,{treeAdapter}){return`<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`}__name(serializeDocumentTypeNode,\"serializeDocumentTypeNode\");\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/cjs/serializer/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeOuter = exports.serialize = void 0;\nconst html_js_1 = require(\"../common/html.js\");\nconst escape_js_1 = require(\"entities/lib/escape.js\");\nconst default_js_1 = require(\"../tree-adapters/default.js\");\n// Sets\nconst VOID_ELEMENTS = new Set([\n    html_js_1.TAG_NAMES.AREA,\n    html_js_1.TAG_NAMES.BASE,\n    html_js_1.TAG_NAMES.BASEFONT,\n    html_js_1.TAG_NAMES.BGSOUND,\n    html_js_1.TAG_NAMES.BR,\n    html_js_1.TAG_NAMES.COL,\n    html_js_1.TAG_NAMES.EMBED,\n    html_js_1.TAG_NAMES.FRAME,\n    html_js_1.TAG_NAMES.HR,\n    html_js_1.TAG_NAMES.IMG,\n    html_js_1.TAG_NAMES.INPUT,\n    html_js_1.TAG_NAMES.KEYGEN,\n    html_js_1.TAG_NAMES.LINK,\n    html_js_1.TAG_NAMES.META,\n    html_js_1.TAG_NAMES.PARAM,\n    html_js_1.TAG_NAMES.SOURCE,\n    html_js_1.TAG_NAMES.TRACK,\n    html_js_1.TAG_NAMES.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === html_js_1.NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: default_js_1.defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nfunction serialize(node, options) {\n    const opts = Object.assign(Object.assign({}, defaultOpts), options);\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\nexports.serialize = serialize;\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nfunction serializeOuter(node, options) {\n    const opts = Object.assign(Object.assign({}, defaultOpts), options);\n    return serializeNode(node, opts);\n}\nexports.serializeOuter = serializeOuter;\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === html_js_1.TAG_NAMES.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === html_js_1.NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case html_js_1.NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case html_js_1.NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case html_js_1.NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${(0, escape_js_1.escapeAttribute)(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === html_js_1.NS.HTML &&\n        (0, html_js_1.hasUnescapedText)(parentTn, options.scriptingEnabled)\n        ? content\n        : (0, escape_js_1.escapeText)(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map"]}}