{"code":"(()=>{\n\"use strict\";const{elemsGroups,referencesProps}=require(\"./_collections.js\");const{visit,visitSkip,querySelector,detachNodeFromParent}=require(\"../lib/xast.js\");const{collectStylesheet,computeStyle}=require(\"../lib/style.js\");const{parsePathData}=require(\"../lib/path.js\");const nonRendering=elemsGroups.nonRendering;exports.name=\"removeHiddenElems\";exports.description=\"removes hidden elements (zero sized, with absent attributes)\";exports.fn=(root,params)=>{const{isHidden=true,displayNone=true,opacity0=true,circleR0=true,ellipseRX0=true,ellipseRY0=true,rectWidth0=true,rectHeight0=true,patternWidth0=true,patternHeight0=true,imageWidth0=true,imageHeight0=true,pathEmptyD=true,polylineEmptyPoints=true,polygonEmptyPoints=true}=params;const stylesheet=collectStylesheet(root);const nonRenderedNodes=new Map;visit(root,{element:{enter:(node,parentNode)=>{if(nonRendering.includes(node.name)){nonRenderedNodes.set(node,parentNode);return visitSkip}const computedStyle=computeStyle(stylesheet,node);if(opacity0&&computedStyle.opacity&&computedStyle.opacity.type===\"static\"&&computedStyle.opacity.value===\"0\"){detachNodeFromParent(node,parentNode);return}}}});return{element:{enter:(node,parentNode)=>{const computedStyle=computeStyle(stylesheet,node);if(isHidden&&computedStyle.visibility&&computedStyle.visibility.type===\"static\"&&computedStyle.visibility.value===\"hidden\"&&querySelector(node,\"[visibility=visible]\")==null){detachNodeFromParent(node,parentNode);return}if(displayNone&&computedStyle.display&&computedStyle.display.type===\"static\"&&computedStyle.display.value===\"none\"&&node.name!==\"marker\"){detachNodeFromParent(node,parentNode);return}if(circleR0&&node.name===\"circle\"&&node.children.length===0&&node.attributes.r===\"0\"){detachNodeFromParent(node,parentNode);return}if(ellipseRX0&&node.name===\"ellipse\"&&node.children.length===0&&node.attributes.rx===\"0\"){detachNodeFromParent(node,parentNode);return}if(ellipseRY0&&node.name===\"ellipse\"&&node.children.length===0&&node.attributes.ry===\"0\"){detachNodeFromParent(node,parentNode);return}if(rectWidth0&&node.name===\"rect\"&&node.children.length===0&&node.attributes.width===\"0\"){detachNodeFromParent(node,parentNode);return}if(rectHeight0&&rectWidth0&&node.name===\"rect\"&&node.children.length===0&&node.attributes.height===\"0\"){detachNodeFromParent(node,parentNode);return}if(patternWidth0&&node.name===\"pattern\"&&node.attributes.width===\"0\"){detachNodeFromParent(node,parentNode);return}if(patternHeight0&&node.name===\"pattern\"&&node.attributes.height===\"0\"){detachNodeFromParent(node,parentNode);return}if(imageWidth0&&node.name===\"image\"&&node.attributes.width===\"0\"){detachNodeFromParent(node,parentNode);return}if(imageHeight0&&node.name===\"image\"&&node.attributes.height===\"0\"){detachNodeFromParent(node,parentNode);return}if(pathEmptyD&&node.name===\"path\"){if(node.attributes.d==null){detachNodeFromParent(node,parentNode);return}const pathData=parsePathData(node.attributes.d);if(pathData.length===0){detachNodeFromParent(node,parentNode);return}if(pathData.length===1&&computedStyle[\"marker-start\"]==null&&computedStyle[\"marker-end\"]==null){detachNodeFromParent(node,parentNode);return}return}if(polylineEmptyPoints&&node.name===\"polyline\"&&node.attributes.points==null){detachNodeFromParent(node,parentNode);return}if(polygonEmptyPoints&&node.name===\"polygon\"&&node.attributes.points==null){detachNodeFromParent(node,parentNode);return}},exit:(node,parentNode)=>{if(node.name!==\"svg\"||parentNode.type!==\"root\"){return}for(const[nonRenderedNode,nonRenderedParent]of nonRenderedNodes.entries()){if(nonRenderedNode.attributes.id==null){detachNodeFromParent(node,nonRenderedParent);continue}const selector=referencesProps.map(attr=>`[${attr}=\"url(#${nonRenderedNode.attributes.id})\"]`).join(\",\");const element=querySelector(root,selector);if(element==null){detachNodeFromParent(node,nonRenderedParent)}}}}}};\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/svgo@3.0.3/node_modules/svgo/plugins/removeHiddenElems.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n * @typedef {import('../lib/types').XastParent} XastParent\n */\n\nconst { elemsGroups, referencesProps } = require('./_collections.js');\nconst {\n  visit,\n  visitSkip,\n  querySelector,\n  detachNodeFromParent,\n} = require('../lib/xast.js');\nconst { collectStylesheet, computeStyle } = require('../lib/style.js');\nconst { parsePathData } = require('../lib/path.js');\n\nconst nonRendering = elemsGroups.nonRendering;\n\nexports.name = 'removeHiddenElems';\nexports.description =\n  'removes hidden elements (zero sized, with absent attributes)';\n\n/**\n * Remove hidden elements with disabled rendering:\n * - display=\"none\"\n * - opacity=\"0\"\n * - circle with zero radius\n * - ellipse with zero x-axis or y-axis radius\n * - rectangle with zero width or height\n * - pattern with zero width or height\n * - image with zero width or height\n * - path with empty data\n * - polyline with empty points\n * - polygon with empty points\n *\n * @author Kir Belevich\n *\n * @type {import('./plugins-types').Plugin<'removeHiddenElems'>}\n */\nexports.fn = (root, params) => {\n  const {\n    isHidden = true,\n    displayNone = true,\n    opacity0 = true,\n    circleR0 = true,\n    ellipseRX0 = true,\n    ellipseRY0 = true,\n    rectWidth0 = true,\n    rectHeight0 = true,\n    patternWidth0 = true,\n    patternHeight0 = true,\n    imageWidth0 = true,\n    imageHeight0 = true,\n    pathEmptyD = true,\n    polylineEmptyPoints = true,\n    polygonEmptyPoints = true,\n  } = params;\n  const stylesheet = collectStylesheet(root);\n\n  /**\n   * Skip non-rendered nodes initially, and only detach if they have no ID, or\n   * their ID is not referenced by another node.\n   *\n   * @type {Map<XastElement, XastParent>}\n   */\n  const nonRenderedNodes = new Map();\n\n  visit(root, {\n    element: {\n      enter: (node, parentNode) => {\n        // transparent non-rendering elements still apply where referenced\n        if (nonRendering.includes(node.name)) {\n          nonRenderedNodes.set(node, parentNode);\n          return visitSkip;\n        }\n        const computedStyle = computeStyle(stylesheet, node);\n        // opacity=\"0\"\n        //\n        // https://www.w3.org/TR/SVG11/masking.html#ObjectAndGroupOpacityProperties\n        if (\n          opacity0 &&\n          computedStyle.opacity &&\n          computedStyle.opacity.type === 'static' &&\n          computedStyle.opacity.value === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n      },\n    },\n  });\n\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        // Removes hidden elements\n        // https://www.w3schools.com/cssref/pr_class_visibility.asp\n        const computedStyle = computeStyle(stylesheet, node);\n        if (\n          isHidden &&\n          computedStyle.visibility &&\n          computedStyle.visibility.type === 'static' &&\n          computedStyle.visibility.value === 'hidden' &&\n          // keep if any descendant enables visibility\n          querySelector(node, '[visibility=visible]') == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // display=\"none\"\n        //\n        // https://www.w3.org/TR/SVG11/painting.html#DisplayProperty\n        // \"A value of display: none indicates that the given element\n        // and its children shall not be rendered directly\"\n        if (\n          displayNone &&\n          computedStyle.display &&\n          computedStyle.display.type === 'static' &&\n          computedStyle.display.value === 'none' &&\n          // markers with display: none still rendered\n          node.name !== 'marker'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Circles with zero radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#CircleElementRAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <circle r=\"0\">\n        if (\n          circleR0 &&\n          node.name === 'circle' &&\n          node.children.length === 0 &&\n          node.attributes.r === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Ellipse with zero x-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRXAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse rx=\"0\">\n        if (\n          ellipseRX0 &&\n          node.name === 'ellipse' &&\n          node.children.length === 0 &&\n          node.attributes.rx === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Ellipse with zero y-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRYAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse ry=\"0\">\n        if (\n          ellipseRY0 &&\n          node.name === 'ellipse' &&\n          node.children.length === 0 &&\n          node.attributes.ry === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Rectangle with zero width\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect width=\"0\">\n        if (\n          rectWidth0 &&\n          node.name === 'rect' &&\n          node.children.length === 0 &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Rectangle with zero height\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect height=\"0\">\n        if (\n          rectHeight0 &&\n          rectWidth0 &&\n          node.name === 'rect' &&\n          node.children.length === 0 &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Pattern with zero width\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementWidthAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern width=\"0\">\n        if (\n          patternWidth0 &&\n          node.name === 'pattern' &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Pattern with zero height\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementHeightAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern height=\"0\">\n        if (\n          patternHeight0 &&\n          node.name === 'pattern' &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Image with zero width\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image width=\"0\">\n        if (\n          imageWidth0 &&\n          node.name === 'image' &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Image with zero height\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image height=\"0\">\n        if (\n          imageHeight0 &&\n          node.name === 'image' &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Path with empty data\n        //\n        // https://www.w3.org/TR/SVG11/paths.html#DAttribute\n        //\n        // <path d=\"\"/>\n        if (pathEmptyD && node.name === 'path') {\n          if (node.attributes.d == null) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          const pathData = parsePathData(node.attributes.d);\n          if (pathData.length === 0) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          // keep single point paths for markers\n          if (\n            pathData.length === 1 &&\n            computedStyle['marker-start'] == null &&\n            computedStyle['marker-end'] == null\n          ) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          return;\n        }\n\n        // Polyline with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolylineElementPointsAttribute\n        //\n        // <polyline points=\"\">\n        if (\n          polylineEmptyPoints &&\n          node.name === 'polyline' &&\n          node.attributes.points == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Polygon with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolygonElementPointsAttribute\n        //\n        // <polygon points=\"\">\n        if (\n          polygonEmptyPoints &&\n          node.name === 'polygon' &&\n          node.attributes.points == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n      },\n\n      exit: (node, parentNode) => {\n        if (node.name !== 'svg' || parentNode.type !== 'root') {\n          return;\n        }\n        for (const [\n          nonRenderedNode,\n          nonRenderedParent,\n        ] of nonRenderedNodes.entries()) {\n          if (nonRenderedNode.attributes.id == null) {\n            detachNodeFromParent(node, nonRenderedParent);\n            continue;\n          }\n\n          const selector = referencesProps\n            .map((attr) => `[${attr}=\"url(#${nonRenderedNode.attributes.id})\"]`)\n            .join(',');\n\n          const element = querySelector(root, selector);\n          if (element == null) {\n            detachNodeFromParent(node, nonRenderedParent);\n          }\n        }\n      },\n    },\n  };\n};\n"]}}