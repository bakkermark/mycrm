{"code":"(()=>{\n\"use strict\";exports.name=\"addClassesToSVGElement\";exports.description=\"adds classnames to an outer <svg> element\";var ENOCLS=`Error in plugin \"addClassesToSVGElement\": absent parameters.\nIt should have a list of classes in \"classNames\" or one \"className\".\nConfig example:\n\nplugins: [\n  {\n    name: \"addClassesToSVGElement\",\n    params: {\n      className: \"mySvg\"\n    }\n  }\n]\n\nplugins: [\n  {\n    name: \"addClassesToSVGElement\",\n    params: {\n      classNames: [\"mySvg\", \"size-big\"]\n    }\n  }\n]\n`;exports.fn=(root,params)=>{if(!(Array.isArray(params.classNames)&&params.classNames.some(String))&&!params.className){console.error(ENOCLS);return null}const classNames=params.classNames||[params.className];return{element:{enter:(node,parentNode)=>{if(node.name===\"svg\"&&parentNode.type===\"root\"){const classList=new Set(node.attributes.class==null?null:node.attributes.class.split(\" \"));for(const className of classNames){if(className!=null){classList.add(className)}}node.attributes.class=Array.from(classList).join(\" \")}}}}};\n})()\n","warnings":[],"map":{"version":3,"mappings":";aAEA,QAAQ,KAAO,yBACf,QAAQ,YAAc,4CAEtB,IAAI,OAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgDb,QAAQ,GAAK,CAAC,KAAM,SAAW,CAC7B,GACE,EAAE,MAAM,QAAQ,OAAO,UAAU,GAAK,OAAO,WAAW,KAAK,MAAM,IACnE,CAAC,OAAO,UACR,CACA,QAAQ,MAAM,MAAM,EACpB,OAAO,IACT,CACA,MAAM,WAAa,OAAO,YAAc,CAAC,OAAO,SAAS,EACzD,MAAO,CACL,QAAS,CACP,MAAO,CAAC,KAAM,aAAe,CAC3B,GAAI,KAAK,OAAS,OAAS,WAAW,OAAS,OAAQ,CACrD,MAAM,UAAY,IAAI,IACpB,KAAK,WAAW,OAAS,KACrB,KACA,KAAK,WAAW,MAAM,MAAM,GAAG,CACrC,EACA,UAAW,aAAa,WAAY,CAClC,GAAI,WAAa,KAAM,CACrB,UAAU,IAAI,SAAS,CACzB,CACF,CACA,KAAK,WAAW,MAAQ,MAAM,KAAK,SAAS,EAAE,KAAK,GAAG,CACxD,CACF,CACF,CACF,CACF","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/svgo@3.0.3/node_modules/svgo/plugins/addClassesToSVGElement.js"],"sourcesContent":["'use strict';\n\nexports.name = 'addClassesToSVGElement';\nexports.description = 'adds classnames to an outer <svg> element';\n\nvar ENOCLS = `Error in plugin \"addClassesToSVGElement\": absent parameters.\nIt should have a list of classes in \"classNames\" or one \"className\".\nConfig example:\n\nplugins: [\n  {\n    name: \"addClassesToSVGElement\",\n    params: {\n      className: \"mySvg\"\n    }\n  }\n]\n\nplugins: [\n  {\n    name: \"addClassesToSVGElement\",\n    params: {\n      classNames: [\"mySvg\", \"size-big\"]\n    }\n  }\n]\n`;\n\n/**\n * Add classnames to an outer <svg> element. Example config:\n *\n * plugins: [\n *   {\n *     name: \"addClassesToSVGElement\",\n *     params: {\n *       className: \"mySvg\"\n *     }\n *   }\n * ]\n *\n * plugins: [\n *   {\n *     name: \"addClassesToSVGElement\",\n *     params: {\n *       classNames: [\"mySvg\", \"size-big\"]\n *     }\n *   }\n * ]\n *\n * @author April Arcus\n *\n * @type {import('./plugins-types').Plugin<'addClassesToSVGElement'>}\n */\nexports.fn = (root, params) => {\n  if (\n    !(Array.isArray(params.classNames) && params.classNames.some(String)) &&\n    !params.className\n  ) {\n    console.error(ENOCLS);\n    return null;\n  }\n  const classNames = params.classNames || [params.className];\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        if (node.name === 'svg' && parentNode.type === 'root') {\n          const classList = new Set(\n            node.attributes.class == null\n              ? null\n              : node.attributes.class.split(' ')\n          );\n          for (const className of classNames) {\n            if (className != null) {\n              classList.add(className);\n            }\n          }\n          node.attributes.class = Array.from(classList).join(' ');\n        }\n      },\n    },\n  };\n};\n"]}}