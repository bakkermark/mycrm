{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var once=require(\"once\");var eos=require(\"end-of-stream\");var fs=require(\"fs\");var noop=__name(function(){},\"noop\");var ancient=/^v?\\.0/.test(process.version);var isFn=__name(function(fn){return typeof fn===\"function\"},\"isFn\");var isFS=__name(function(stream){if(!ancient)return false;if(!fs)return false;return(stream instanceof(fs.ReadStream||noop)||stream instanceof(fs.WriteStream||noop))&&isFn(stream.close)},\"isFS\");var isRequest=__name(function(stream){return stream.setHeader&&isFn(stream.abort)},\"isRequest\");var destroyer=__name(function(stream,reading,writing,callback){callback=once(callback);var closed=false;stream.on(\"close\",function(){closed=true});eos(stream,{readable:reading,writable:writing},function(err){if(err)return callback(err);closed=true;callback()});var destroyed=false;return function(err){if(closed)return;if(destroyed)return;destroyed=true;if(isFS(stream))return stream.close(noop);if(isRequest(stream))return stream.abort();if(isFn(stream.destroy))return stream.destroy();callback(err||new Error(\"stream was destroyed\"))}},\"destroyer\");var call=__name(function(fn){fn()},\"call\");var pipe=__name(function(from,to){return from.pipe(to)},\"pipe\");var pump=__name(function(){var streams=Array.prototype.slice.call(arguments);var callback=isFn(streams[streams.length-1]||noop)&&streams.pop()||noop;if(Array.isArray(streams[0]))streams=streams[0];if(streams.length<2)throw new Error(\"pump requires two streams per minimum\");var error;var destroys=streams.map(function(stream,i){var reading=i<streams.length-1;var writing=i>0;return destroyer(stream,reading,writing,function(err){if(!error)error=err;if(err)destroys.forEach(call);if(reading)return;destroys.forEach(call);callback(error)})});return streams.reduce(pipe)},\"pump\");module.exports=pump;\n})()\n","warnings":[],"map":{"version":3,"mappings":";kHAAA,IAAI,KAAO,QAAQ,MAAM,EACzB,IAAI,IAAM,QAAQ,eAAe,EACjC,IAAI,GAAK,QAAQ,IAAI,EAErB,IAAI,KAAO,iBAAY,CAAC,EAAb,QACX,IAAI,QAAU,SAAS,KAAK,QAAQ,OAAO,EAE3C,IAAI,KAAO,gBAAU,GAAI,CACvB,OAAO,OAAO,KAAO,UACvB,EAFW,QAIX,IAAI,KAAO,gBAAU,OAAQ,CAC3B,GAAI,CAAC,QAAS,MAAO,OACrB,GAAI,CAAC,GAAI,MAAO,OAChB,OAAQ,kBAAmB,GAAG,YAAc,OAAS,kBAAmB,GAAG,aAAe,QAAU,KAAK,OAAO,KAAK,CACvH,EAJW,QAMX,IAAI,UAAY,gBAAU,OAAQ,CAChC,OAAO,OAAO,WAAa,KAAK,OAAO,KAAK,CAC9C,EAFgB,aAIhB,IAAI,UAAY,gBAAU,OAAQ,QAAS,QAAS,SAAU,CAC5D,SAAW,KAAK,QAAQ,EAExB,IAAI,OAAS,MACb,OAAO,GAAG,QAAS,UAAY,CAC7B,OAAS,IACX,CAAC,EAED,IAAI,OAAQ,CAAC,SAAU,QAAS,SAAU,OAAO,EAAG,SAAU,IAAK,CACjE,GAAI,IAAK,OAAO,SAAS,GAAG,EAC5B,OAAS,KACT,SAAS,CACX,CAAC,EAED,IAAI,UAAY,MAChB,OAAO,SAAU,IAAK,CACpB,GAAI,OAAQ,OACZ,GAAI,UAAW,OACf,UAAY,KAEZ,GAAI,KAAK,MAAM,EAAG,OAAO,OAAO,MAAM,IAAI,EAC1C,GAAI,UAAU,MAAM,EAAG,OAAO,OAAO,MAAM,EAE3C,GAAI,KAAK,OAAO,OAAO,EAAG,OAAO,OAAO,QAAQ,EAEhD,SAAS,KAAO,IAAI,MAAM,sBAAsB,CAAC,CACnD,CACF,EA3BgB,aA6BhB,IAAI,KAAO,gBAAU,GAAI,CACvB,GAAG,CACL,EAFW,QAIX,IAAI,KAAO,gBAAU,KAAM,GAAI,CAC7B,OAAO,KAAK,KAAK,EAAE,CACrB,EAFW,QAIX,IAAI,KAAO,iBAAY,CACrB,IAAI,QAAU,MAAM,UAAU,MAAM,KAAK,SAAS,EAClD,IAAI,SAAW,KAAK,QAAQ,QAAQ,OAAS,CAAC,GAAK,IAAI,GAAK,QAAQ,IAAI,GAAK,KAE7E,GAAI,MAAM,QAAQ,QAAQ,CAAC,CAAC,EAAG,QAAU,QAAQ,CAAC,EAClD,GAAI,QAAQ,OAAS,EAAG,MAAM,IAAI,MAAM,uCAAuC,EAE/E,IAAI,MACJ,IAAI,SAAW,QAAQ,IAAI,SAAU,OAAQ,EAAG,CAC9C,IAAI,QAAU,EAAI,QAAQ,OAAS,EACnC,IAAI,QAAU,EAAI,EAClB,OAAO,UAAU,OAAQ,QAAS,QAAS,SAAU,IAAK,CACxD,GAAI,CAAC,MAAO,MAAQ,IACpB,GAAI,IAAK,SAAS,QAAQ,IAAI,EAC9B,GAAI,QAAS,OACb,SAAS,QAAQ,IAAI,EACrB,SAAS,KAAK,CAChB,CAAC,CACH,CAAC,EAED,OAAO,QAAQ,OAAO,IAAI,CAC5B,EArBW,QAuBX,OAAO,QAAU","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/pump@3.0.0/node_modules/pump/index.js"],"sourcesContent":["var once = require('once')\nvar eos = require('end-of-stream')\nvar fs = require('fs') // we only need fs to get the ReadStream and WriteStream prototypes\n\nvar noop = function () {}\nvar ancient = /^v?\\.0/.test(process.version)\n\nvar isFn = function (fn) {\n  return typeof fn === 'function'\n}\n\nvar isFS = function (stream) {\n  if (!ancient) return false // newer node version do not need to care about fs is a special way\n  if (!fs) return false // browser\n  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)\n}\n\nvar isRequest = function (stream) {\n  return stream.setHeader && isFn(stream.abort)\n}\n\nvar destroyer = function (stream, reading, writing, callback) {\n  callback = once(callback)\n\n  var closed = false\n  stream.on('close', function () {\n    closed = true\n  })\n\n  eos(stream, {readable: reading, writable: writing}, function (err) {\n    if (err) return callback(err)\n    closed = true\n    callback()\n  })\n\n  var destroyed = false\n  return function (err) {\n    if (closed) return\n    if (destroyed) return\n    destroyed = true\n\n    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks\n    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want\n\n    if (isFn(stream.destroy)) return stream.destroy()\n\n    callback(err || new Error('stream was destroyed'))\n  }\n}\n\nvar call = function (fn) {\n  fn()\n}\n\nvar pipe = function (from, to) {\n  return from.pipe(to)\n}\n\nvar pump = function () {\n  var streams = Array.prototype.slice.call(arguments)\n  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop\n\n  if (Array.isArray(streams[0])) streams = streams[0]\n  if (streams.length < 2) throw new Error('pump requires two streams per minimum')\n\n  var error\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1\n    var writing = i > 0\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err\n      if (err) destroys.forEach(call)\n      if (reading) return\n      destroys.forEach(call)\n      callback(error)\n    })\n  })\n\n  return streams.reduce(pipe)\n}\n\nmodule.exports = pump\n"]}}