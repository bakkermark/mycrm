{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const fs=require(\"fs\");const path=require(\"path\");const LCHOWN=fs.lchown?\"lchown\":\"chown\";const LCHOWNSYNC=fs.lchownSync?\"lchownSync\":\"chownSync\";const needEISDIRHandled=fs.lchown&&!process.version.match(/v1[1-9]+\\./)&&!process.version.match(/v10\\.[6-9]/);const lchownSync=__name((path2,uid,gid)=>{try{return fs[LCHOWNSYNC](path2,uid,gid)}catch(er){if(er.code!==\"ENOENT\")throw er}},\"lchownSync\");const chownSync=__name((path2,uid,gid)=>{try{return fs.chownSync(path2,uid,gid)}catch(er){if(er.code!==\"ENOENT\")throw er}},\"chownSync\");const handleEISDIR=needEISDIRHandled?(path2,uid,gid,cb)=>er=>{if(!er||er.code!==\"EISDIR\")cb(er);else fs.chown(path2,uid,gid,cb)}:(_,__,___,cb)=>cb;const handleEISDirSync=needEISDIRHandled?(path2,uid,gid)=>{try{return lchownSync(path2,uid,gid)}catch(er){if(er.code!==\"EISDIR\")throw er;chownSync(path2,uid,gid)}}:(path2,uid,gid)=>lchownSync(path2,uid,gid);const nodeVersion=process.version;let readdir=__name((path2,options,cb)=>fs.readdir(path2,options,cb),\"readdir\");let readdirSync=__name((path2,options)=>fs.readdirSync(path2,options),\"readdirSync\");if(/^v4\\./.test(nodeVersion))readdir=__name((path2,options,cb)=>fs.readdir(path2,cb),\"readdir\");const chown=__name((cpath,uid,gid,cb)=>{fs[LCHOWN](cpath,uid,gid,handleEISDIR(cpath,uid,gid,er=>{cb(er&&er.code!==\"ENOENT\"?er:null)}))},\"chown\");const chownrKid=__name((p,child,uid,gid,cb)=>{if(typeof child===\"string\")return fs.lstat(path.resolve(p,child),(er,stats)=>{if(er)return cb(er.code!==\"ENOENT\"?er:null);stats.name=child;chownrKid(p,stats,uid,gid,cb)});if(child.isDirectory()){chownr(path.resolve(p,child.name),uid,gid,er=>{if(er)return cb(er);const cpath=path.resolve(p,child.name);chown(cpath,uid,gid,cb)})}else{const cpath=path.resolve(p,child.name);chown(cpath,uid,gid,cb)}},\"chownrKid\");const chownr=__name((p,uid,gid,cb)=>{readdir(p,{withFileTypes:true},(er,children)=>{if(er){if(er.code===\"ENOENT\")return cb();else if(er.code!==\"ENOTDIR\"&&er.code!==\"ENOTSUP\")return cb(er)}if(er||!children.length)return chown(p,uid,gid,cb);let len=children.length;let errState=null;const then=__name(er2=>{if(errState)return;if(er2)return cb(errState=er2);if(--len===0)return chown(p,uid,gid,cb)},\"then\");children.forEach(child=>chownrKid(p,child,uid,gid,then))})},\"chownr\");const chownrKidSync=__name((p,child,uid,gid)=>{if(typeof child===\"string\"){try{const stats=fs.lstatSync(path.resolve(p,child));stats.name=child;child=stats}catch(er){if(er.code===\"ENOENT\")return;else throw er}}if(child.isDirectory())chownrSync(path.resolve(p,child.name),uid,gid);handleEISDirSync(path.resolve(p,child.name),uid,gid)},\"chownrKidSync\");const chownrSync=__name((p,uid,gid)=>{let children;try{children=readdirSync(p,{withFileTypes:true})}catch(er){if(er.code===\"ENOENT\")return;else if(er.code===\"ENOTDIR\"||er.code===\"ENOTSUP\")return handleEISDirSync(p,uid,gid);else throw er}if(children&&children.length)children.forEach(child=>chownrKidSync(p,child,uid,gid));return handleEISDirSync(p,uid,gid)},\"chownrSync\");module.exports=chownr;chownr.sync=chownrSync;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["path","er"],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/chownr@2.0.0/node_modules/chownr/chownr.js"],"sourcesContent":["'use strict'\nconst fs = require('fs')\nconst path = require('path')\n\n/* istanbul ignore next */\nconst LCHOWN = fs.lchown ? 'lchown' : 'chown'\n/* istanbul ignore next */\nconst LCHOWNSYNC = fs.lchownSync ? 'lchownSync' : 'chownSync'\n\n/* istanbul ignore next */\nconst needEISDIRHandled = fs.lchown &&\n  !process.version.match(/v1[1-9]+\\./) &&\n  !process.version.match(/v10\\.[6-9]/)\n\nconst lchownSync = (path, uid, gid) => {\n  try {\n    return fs[LCHOWNSYNC](path, uid, gid)\n  } catch (er) {\n    if (er.code !== 'ENOENT')\n      throw er\n  }\n}\n\n/* istanbul ignore next */\nconst chownSync = (path, uid, gid) => {\n  try {\n    return fs.chownSync(path, uid, gid)\n  } catch (er) {\n    if (er.code !== 'ENOENT')\n      throw er\n  }\n}\n\n/* istanbul ignore next */\nconst handleEISDIR =\n  needEISDIRHandled ? (path, uid, gid, cb) => er => {\n    // Node prior to v10 had a very questionable implementation of\n    // fs.lchown, which would always try to call fs.open on a directory\n    // Fall back to fs.chown in those cases.\n    if (!er || er.code !== 'EISDIR')\n      cb(er)\n    else\n      fs.chown(path, uid, gid, cb)\n  }\n  : (_, __, ___, cb) => cb\n\n/* istanbul ignore next */\nconst handleEISDirSync =\n  needEISDIRHandled ? (path, uid, gid) => {\n    try {\n      return lchownSync(path, uid, gid)\n    } catch (er) {\n      if (er.code !== 'EISDIR')\n        throw er\n      chownSync(path, uid, gid)\n    }\n  }\n  : (path, uid, gid) => lchownSync(path, uid, gid)\n\n// fs.readdir could only accept an options object as of node v6\nconst nodeVersion = process.version\nlet readdir = (path, options, cb) => fs.readdir(path, options, cb)\nlet readdirSync = (path, options) => fs.readdirSync(path, options)\n/* istanbul ignore next */\nif (/^v4\\./.test(nodeVersion))\n  readdir = (path, options, cb) => fs.readdir(path, cb)\n\nconst chown = (cpath, uid, gid, cb) => {\n  fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, er => {\n    // Skip ENOENT error\n    cb(er && er.code !== 'ENOENT' ? er : null)\n  }))\n}\n\nconst chownrKid = (p, child, uid, gid, cb) => {\n  if (typeof child === 'string')\n    return fs.lstat(path.resolve(p, child), (er, stats) => {\n      // Skip ENOENT error\n      if (er)\n        return cb(er.code !== 'ENOENT' ? er : null)\n      stats.name = child\n      chownrKid(p, stats, uid, gid, cb)\n    })\n\n  if (child.isDirectory()) {\n    chownr(path.resolve(p, child.name), uid, gid, er => {\n      if (er)\n        return cb(er)\n      const cpath = path.resolve(p, child.name)\n      chown(cpath, uid, gid, cb)\n    })\n  } else {\n    const cpath = path.resolve(p, child.name)\n    chown(cpath, uid, gid, cb)\n  }\n}\n\n\nconst chownr = (p, uid, gid, cb) => {\n  readdir(p, { withFileTypes: true }, (er, children) => {\n    // any error other than ENOTDIR or ENOTSUP means it's not readable,\n    // or doesn't exist.  give up.\n    if (er) {\n      if (er.code === 'ENOENT')\n        return cb()\n      else if (er.code !== 'ENOTDIR' && er.code !== 'ENOTSUP')\n        return cb(er)\n    }\n    if (er || !children.length)\n      return chown(p, uid, gid, cb)\n\n    let len = children.length\n    let errState = null\n    const then = er => {\n      if (errState)\n        return\n      if (er)\n        return cb(errState = er)\n      if (-- len === 0)\n        return chown(p, uid, gid, cb)\n    }\n\n    children.forEach(child => chownrKid(p, child, uid, gid, then))\n  })\n}\n\nconst chownrKidSync = (p, child, uid, gid) => {\n  if (typeof child === 'string') {\n    try {\n      const stats = fs.lstatSync(path.resolve(p, child))\n      stats.name = child\n      child = stats\n    } catch (er) {\n      if (er.code === 'ENOENT')\n        return\n      else\n        throw er\n    }\n  }\n\n  if (child.isDirectory())\n    chownrSync(path.resolve(p, child.name), uid, gid)\n\n  handleEISDirSync(path.resolve(p, child.name), uid, gid)\n}\n\nconst chownrSync = (p, uid, gid) => {\n  let children\n  try {\n    children = readdirSync(p, { withFileTypes: true })\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return\n    else if (er.code === 'ENOTDIR' || er.code === 'ENOTSUP')\n      return handleEISDirSync(p, uid, gid)\n    else\n      throw er\n  }\n\n  if (children && children.length)\n    children.forEach(child => chownrKidSync(p, child, uid, gid))\n\n  return handleEISDirSync(p, uid, gid)\n}\n\nmodule.exports = chownr\nchownr.sync = chownrSync\n"]}}