{"code":"(()=>{\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.aliases=void 0;exports.aliases={\"any-link\":\":is(a, area, link)[href]\",link:\":any-link:not(:visited)\",disabled:\":is(\\n        :is(button, input, select, textarea, optgroup, option)[disabled],\\n        optgroup[disabled] > option,\\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\\n    )\",enabled:\":not(:disabled)\",checked:\":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",required:\":is(input, select, textarea)[required]\",optional:\":is(input, select, textarea):not([required])\",selected:\"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",checkbox:\"[type=checkbox]\",file:\"[type=file]\",password:\"[type=password]\",radio:\"[type=radio]\",reset:\"[type=reset]\",image:\"[type=image]\",submit:\"[type=submit]\",parent:\":not(:empty)\",header:\":is(h1, h2, h3, h4, h5, h6)\",button:\":is(button, input[type=button])\",input:\":is(input, textarea, select, button)\",text:\"input:is(:not([type!='']), [type=text])\"};\n})()\n","warnings":[],"map":{"version":3,"mappings":";aACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,QAAU,OAIlB,QAAQ,QAAU,CAEd,WAAY,2BACZ,KAAM,0BAGN,SAAU,0MACV,QAAS,kBACT,QAAS,8EACT,SAAU,yCACV,SAAU,+CAGV,SAAU,+FACV,SAAU,kBACV,KAAM,cACN,SAAU,kBACV,MAAO,eACP,MAAO,eACP,MAAO,eACP,OAAQ,gBACR,OAAQ,eACR,OAAQ,8BACR,OAAQ,kCACR,MAAO,uCACP,KAAM,yCACV","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/pseudo-selectors/aliases.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.aliases = void 0;\n/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexports.aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: \":is(\\n        :is(button, input, select, textarea, optgroup, option)[disabled],\\n        optgroup[disabled] > option,\\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\\n    )\",\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n//# sourceMappingURL=aliases.js.map"]}}