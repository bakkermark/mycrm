{"code":"(()=>{\n\"use strict\";const argmap=new Map([[\"C\",\"cwd\"],[\"f\",\"file\"],[\"z\",\"gzip\"],[\"P\",\"preservePaths\"],[\"U\",\"unlink\"],[\"strip-components\",\"strip\"],[\"stripComponents\",\"strip\"],[\"keep-newer\",\"newer\"],[\"keepNewer\",\"newer\"],[\"keep-newer-files\",\"newer\"],[\"keepNewerFiles\",\"newer\"],[\"k\",\"keep\"],[\"keep-existing\",\"keep\"],[\"keepExisting\",\"keep\"],[\"m\",\"noMtime\"],[\"no-mtime\",\"noMtime\"],[\"p\",\"preserveOwner\"],[\"L\",\"follow\"],[\"h\",\"follow\"]]);module.exports=opt=>opt?Object.keys(opt).map(k=>[argmap.has(k)?argmap.get(k):k,opt[k]]).reduce((set,kv)=>(set[kv[0]]=kv[1],set),Object.create(null)):{};\n})()\n","warnings":[],"map":{"version":3,"mappings":";aAIA,MAAM,OAAS,IAAI,IAAI,CACrB,CAAC,IAAK,KAAK,EACX,CAAC,IAAK,MAAM,EACZ,CAAC,IAAK,MAAM,EACZ,CAAC,IAAK,eAAe,EACrB,CAAC,IAAK,QAAQ,EACd,CAAC,mBAAoB,OAAO,EAC5B,CAAC,kBAAmB,OAAO,EAC3B,CAAC,aAAc,OAAO,EACtB,CAAC,YAAa,OAAO,EACrB,CAAC,mBAAoB,OAAO,EAC5B,CAAC,iBAAkB,OAAO,EAC1B,CAAC,IAAK,MAAM,EACZ,CAAC,gBAAiB,MAAM,EACxB,CAAC,eAAgB,MAAM,EACvB,CAAC,IAAK,SAAS,EACf,CAAC,WAAY,SAAS,EACtB,CAAC,IAAK,eAAe,EACrB,CAAC,IAAK,QAAQ,EACd,CAAC,IAAK,QAAQ,CAChB,CAAC,EAED,OAAO,QAAU,KAAO,IAAM,OAAO,KAAK,GAAG,EAAE,IAAI,GAAK,CACtD,OAAO,IAAI,CAAC,EAAI,OAAO,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,CAC1C,CAAC,EAAE,OAAO,CAAC,IAAK,MAAQ,IAAI,GAAG,CAAC,CAAC,EAAI,GAAG,CAAC,EAAG,KAAM,OAAO,OAAO,IAAI,CAAC,EAAI,CAAC","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/tar@6.2.0/node_modules/tar/lib/high-level-opt.js"],"sourcesContent":["'use strict'\n\n// turn tar(1) style args like `C` into the more verbose things like `cwd`\n\nconst argmap = new Map([\n  ['C', 'cwd'],\n  ['f', 'file'],\n  ['z', 'gzip'],\n  ['P', 'preservePaths'],\n  ['U', 'unlink'],\n  ['strip-components', 'strip'],\n  ['stripComponents', 'strip'],\n  ['keep-newer', 'newer'],\n  ['keepNewer', 'newer'],\n  ['keep-newer-files', 'newer'],\n  ['keepNewerFiles', 'newer'],\n  ['k', 'keep'],\n  ['keep-existing', 'keep'],\n  ['keepExisting', 'keep'],\n  ['m', 'noMtime'],\n  ['no-mtime', 'noMtime'],\n  ['p', 'preserveOwner'],\n  ['L', 'follow'],\n  ['h', 'follow'],\n])\n\nmodule.exports = opt => opt ? Object.keys(opt).map(k => [\n  argmap.has(k) ? argmap.get(k) : k, opt[k],\n]).reduce((set, kv) => (set[kv[0]] = kv[1], set), Object.create(null)) : {}\n"]}}