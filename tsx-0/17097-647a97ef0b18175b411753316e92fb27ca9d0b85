{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.escapeText=exports.escapeAttribute=exports.escapeUTF8=exports.escape=exports.encodeXML=exports.getCodePoint=exports.xmlReplacer=void 0;exports.xmlReplacer=/[\"&'<>$\\x80-\\uFFFF]/g;var xmlCodeMap=new Map([[34,\"&quot;\"],[38,\"&amp;\"],[39,\"&apos;\"],[60,\"&lt;\"],[62,\"&gt;\"]]);exports.getCodePoint=String.prototype.codePointAt!=null?function(str,index){return str.codePointAt(index)}:function(c,index){return(c.charCodeAt(index)&64512)===55296?(c.charCodeAt(index)-55296)*1024+c.charCodeAt(index+1)-56320+65536:c.charCodeAt(index)};function encodeXML(str){var ret=\"\";var lastIdx=0;var match;while((match=exports.xmlReplacer.exec(str))!==null){var i=match.index;var char=str.charCodeAt(i);var next=xmlCodeMap.get(char);if(next!==void 0){ret+=str.substring(lastIdx,i)+next;lastIdx=i+1}else{ret+=\"\".concat(str.substring(lastIdx,i),\"&#x\").concat((0,exports.getCodePoint)(str,i).toString(16),\";\");lastIdx=exports.xmlReplacer.lastIndex+=Number((char&64512)===55296)}}return ret+str.substr(lastIdx)}__name(encodeXML,\"encodeXML\");exports.encodeXML=encodeXML;exports.escape=encodeXML;function getEscaper(regex,map){return __name(function escape(data){var match;var lastIdx=0;var result=\"\";while(match=regex.exec(data)){if(lastIdx!==match.index){result+=data.substring(lastIdx,match.index)}result+=map.get(match[0].charCodeAt(0));lastIdx=match.index+1}return result+data.substring(lastIdx)},\"escape\")}__name(getEscaper,\"getEscaper\");exports.escapeUTF8=getEscaper(/[&<>'\"]/g,xmlCodeMap);exports.escapeAttribute=getEscaper(/[\"&\\u00A0]/g,new Map([[34,\"&quot;\"],[38,\"&amp;\"],[160,\"&nbsp;\"]]));exports.escapeText=getEscaper(/[&<>\\u00A0]/g,new Map([[38,\"&amp;\"],[60,\"&lt;\"],[62,\"&gt;\"],[160,\"&nbsp;\"]]));\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,WAAa,QAAQ,gBAAkB,QAAQ,WAAa,QAAQ,OAAS,QAAQ,UAAY,QAAQ,aAAe,QAAQ,YAAc,OACtJ,QAAQ,YAAc,uBACtB,IAAI,WAAa,IAAI,IAAI,CACrB,CAAC,GAAI,QAAQ,EACb,CAAC,GAAI,OAAO,EACZ,CAAC,GAAI,QAAQ,EACb,CAAC,GAAI,MAAM,EACX,CAAC,GAAI,MAAM,CACf,CAAC,EAED,QAAQ,aAER,OAAO,UAAU,aAAe,KAC1B,SAAU,IAAK,MAAO,CAAE,OAAO,IAAI,YAAY,KAAK,CAAG,EAErD,SAAU,EAAG,MAAO,CAChB,OAAQ,EAAE,WAAW,KAAK,EAAI,SAAY,OACnC,EAAE,WAAW,KAAK,EAAI,OAAU,KAC/B,EAAE,WAAW,MAAQ,CAAC,EACtB,MACA,MACF,EAAE,WAAW,KAAK,CAC5B,EAQR,SAAS,UAAU,IAAK,CACpB,IAAI,IAAM,GACV,IAAI,QAAU,EACd,IAAI,MACJ,OAAQ,MAAQ,QAAQ,YAAY,KAAK,GAAG,KAAO,KAAM,CACrD,IAAI,EAAI,MAAM,MACd,IAAI,KAAO,IAAI,WAAW,CAAC,EAC3B,IAAI,KAAO,WAAW,IAAI,IAAI,EAC9B,GAAI,OAAS,OAAW,CACpB,KAAO,IAAI,UAAU,QAAS,CAAC,EAAI,KACnC,QAAU,EAAI,CAClB,KACK,CACD,KAAO,GAAG,OAAO,IAAI,UAAU,QAAS,CAAC,EAAG,KAAK,EAAE,QAAQ,EAAG,QAAQ,cAAc,IAAK,CAAC,EAAE,SAAS,EAAE,EAAG,GAAG,EAE7G,QAAU,QAAQ,YAAY,WAAa,QAAQ,KAAO,SAAY,KAAM,CAChF,CACJ,CACA,OAAO,IAAM,IAAI,OAAO,OAAO,CACnC,CAnBS,8BAoBT,QAAQ,UAAY,UAUpB,QAAQ,OAAS,UAWjB,SAAS,WAAW,MAAO,IAAK,CAC5B,OAAO,gBAAS,OAAO,KAAM,CACzB,IAAI,MACJ,IAAI,QAAU,EACd,IAAI,OAAS,GACb,MAAQ,MAAQ,MAAM,KAAK,IAAI,EAAI,CAC/B,GAAI,UAAY,MAAM,MAAO,CACzB,QAAU,KAAK,UAAU,QAAS,MAAM,KAAK,CACjD,CAEA,QAAU,IAAI,IAAI,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC,EAExC,QAAU,MAAM,MAAQ,CAC5B,CACA,OAAO,OAAS,KAAK,UAAU,OAAO,CAC1C,EAdO,SAeX,CAhBS,gCAwBT,QAAQ,WAAa,WAAW,WAAY,UAAU,EAOtD,QAAQ,gBAAkB,WAAW,cAAe,IAAI,IAAI,CACxD,CAAC,GAAI,QAAQ,EACb,CAAC,GAAI,OAAO,EACZ,CAAC,IAAK,QAAQ,CAClB,CAAC,CAAC,EAOF,QAAQ,WAAa,WAAW,eAAgB,IAAI,IAAI,CACpD,CAAC,GAAI,OAAO,EACZ,CAAC,GAAI,MAAM,EACX,CAAC,GAAI,MAAM,EACX,CAAC,IAAK,QAAQ,CAClB,CAAC,CAAC","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/escape.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeText = exports.escapeAttribute = exports.escapeUTF8 = exports.escape = exports.encodeXML = exports.getCodePoint = exports.xmlReplacer = void 0;\nexports.xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nvar xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexports.getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? function (str, index) { return str.codePointAt(index); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c, index) {\n            return (c.charCodeAt(index) & 0xfc00) === 0xd800\n                ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                    c.charCodeAt(index + 1) -\n                    0xdc00 +\n                    0x10000\n                : c.charCodeAt(index);\n        };\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nfunction encodeXML(str) {\n    var ret = \"\";\n    var lastIdx = 0;\n    var match;\n    while ((match = exports.xmlReplacer.exec(str)) !== null) {\n        var i = match.index;\n        var char = str.charCodeAt(i);\n        var next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += \"\".concat(str.substring(lastIdx, i), \"&#x\").concat((0, exports.getCodePoint)(str, i).toString(16), \";\");\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = exports.xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\nexports.encodeXML = encodeXML;\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexports.escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        var match;\n        var lastIdx = 0;\n        var result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexports.escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexports.escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexports.escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map"]}}