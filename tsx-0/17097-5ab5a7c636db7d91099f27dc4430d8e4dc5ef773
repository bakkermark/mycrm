{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.Preprocessor=void 0;const unicode_js_1=require(\"../common/unicode.js\");const error_codes_js_1=require(\"../common/error-codes.js\");const DEFAULT_BUFFER_WATERLINE=1<<16;class Preprocessor{static{__name(this,\"Preprocessor\")}constructor(handler){this.handler=handler;this.html=\"\";this.pos=-1;this.lastGapPos=-2;this.gapStack=[];this.skipNextNewLine=false;this.lastChunkWritten=false;this.endOfChunkHit=false;this.bufferWaterline=DEFAULT_BUFFER_WATERLINE;this.isEol=false;this.lineStartPos=0;this.droppedBufferSize=0;this.line=1;this.lastErrOffset=-1}get col(){return this.pos-this.lineStartPos+Number(this.lastGapPos!==this.pos)}get offset(){return this.droppedBufferSize+this.pos}getError(code){const{line,col,offset}=this;return{code,startLine:line,endLine:line,startCol:col,endCol:col,startOffset:offset,endOffset:offset}}_err(code){if(this.handler.onParseError&&this.lastErrOffset!==this.offset){this.lastErrOffset=this.offset;this.handler.onParseError(this.getError(code))}}_addGap(){this.gapStack.push(this.lastGapPos);this.lastGapPos=this.pos}_processSurrogate(cp){if(this.pos!==this.html.length-1){const nextCp=this.html.charCodeAt(this.pos+1);if((0,unicode_js_1.isSurrogatePair)(nextCp)){this.pos++;this._addGap();return(0,unicode_js_1.getSurrogatePairCodePoint)(cp,nextCp)}}else if(!this.lastChunkWritten){this.endOfChunkHit=true;return unicode_js_1.CODE_POINTS.EOF}this._err(error_codes_js_1.ERR.surrogateInInputStream);return cp}willDropParsedChunk(){return this.pos>this.bufferWaterline}dropParsedChunk(){if(this.willDropParsedChunk()){this.html=this.html.substring(this.pos);this.lineStartPos-=this.pos;this.droppedBufferSize+=this.pos;this.pos=0;this.lastGapPos=-2;this.gapStack.length=0}}write(chunk,isLastChunk){if(this.html.length>0){this.html+=chunk}else{this.html=chunk}this.endOfChunkHit=false;this.lastChunkWritten=isLastChunk}insertHtmlAtCurrentPos(chunk){this.html=this.html.substring(0,this.pos+1)+chunk+this.html.substring(this.pos+1);this.endOfChunkHit=false}startsWith(pattern,caseSensitive){if(this.pos+pattern.length>this.html.length){this.endOfChunkHit=!this.lastChunkWritten;return false}if(caseSensitive){return this.html.startsWith(pattern,this.pos)}for(let i=0;i<pattern.length;i++){const cp=this.html.charCodeAt(this.pos+i)|32;if(cp!==pattern.charCodeAt(i)){return false}}return true}peek(offset){const pos=this.pos+offset;if(pos>=this.html.length){this.endOfChunkHit=!this.lastChunkWritten;return unicode_js_1.CODE_POINTS.EOF}const code=this.html.charCodeAt(pos);return code===unicode_js_1.CODE_POINTS.CARRIAGE_RETURN?unicode_js_1.CODE_POINTS.LINE_FEED:code}advance(){this.pos++;if(this.isEol){this.isEol=false;this.line++;this.lineStartPos=this.pos}if(this.pos>=this.html.length){this.endOfChunkHit=!this.lastChunkWritten;return unicode_js_1.CODE_POINTS.EOF}let cp=this.html.charCodeAt(this.pos);if(cp===unicode_js_1.CODE_POINTS.CARRIAGE_RETURN){this.isEol=true;this.skipNextNewLine=true;return unicode_js_1.CODE_POINTS.LINE_FEED}if(cp===unicode_js_1.CODE_POINTS.LINE_FEED){this.isEol=true;if(this.skipNextNewLine){this.line--;this.skipNextNewLine=false;this._addGap();return this.advance()}}this.skipNextNewLine=false;if((0,unicode_js_1.isSurrogate)(cp)){cp=this._processSurrogate(cp)}const isCommonValidRange=this.handler.onParseError===null||cp>31&&cp<127||cp===unicode_js_1.CODE_POINTS.LINE_FEED||cp===unicode_js_1.CODE_POINTS.CARRIAGE_RETURN||cp>159&&cp<64976;if(!isCommonValidRange){this._checkForProblematicCharacters(cp)}return cp}_checkForProblematicCharacters(cp){if((0,unicode_js_1.isControlCodePoint)(cp)){this._err(error_codes_js_1.ERR.controlCharacterInInputStream)}else if((0,unicode_js_1.isUndefinedCodePoint)(cp)){this._err(error_codes_js_1.ERR.noncharacterInInputStream)}}retreat(count){this.pos-=count;while(this.pos<this.lastGapPos){this.lastGapPos=this.gapStack.pop();this.pos--}this.isEol=false}}exports.Preprocessor=Preprocessor;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/cjs/tokenizer/preprocessor.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Preprocessor = void 0;\nconst unicode_js_1 = require(\"../common/unicode.js\");\nconst error_codes_js_1 = require(\"../common/error-codes.js\");\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if ((0, unicode_js_1.isSurrogatePair)(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return (0, unicode_js_1.getSurrogatePairCodePoint)(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return unicode_js_1.CODE_POINTS.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(error_codes_js_1.ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return unicode_js_1.CODE_POINTS.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === unicode_js_1.CODE_POINTS.CARRIAGE_RETURN ? unicode_js_1.CODE_POINTS.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return unicode_js_1.CODE_POINTS.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === unicode_js_1.CODE_POINTS.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return unicode_js_1.CODE_POINTS.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === unicode_js_1.CODE_POINTS.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if ((0, unicode_js_1.isSurrogate)(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === unicode_js_1.CODE_POINTS.LINE_FEED ||\n            cp === unicode_js_1.CODE_POINTS.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if ((0, unicode_js_1.isControlCodePoint)(cp)) {\n            this._err(error_codes_js_1.ERR.controlCharacterInInputStream);\n        }\n        else if ((0, unicode_js_1.isUndefinedCodePoint)(cp)) {\n            this._err(error_codes_js_1.ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\nexports.Preprocessor = Preprocessor;\n//# sourceMappingURL=preprocessor.js.map"]}}