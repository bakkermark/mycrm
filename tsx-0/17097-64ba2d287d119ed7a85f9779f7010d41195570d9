{"code":"(()=>{\n\"use strict\";const{detachNodeFromParent}=require(\"../lib/xast.js\");const{editorNamespaces}=require(\"./_collections.js\");exports.name=\"removeEditorsNSData\";exports.description=\"removes editors namespaces, elements and attributes\";exports.fn=(_root,params)=>{let namespaces=editorNamespaces;if(Array.isArray(params.additionalNamespaces)){namespaces=[...editorNamespaces,...params.additionalNamespaces]}const prefixes=[];return{element:{enter:(node,parentNode)=>{if(node.name===\"svg\"){for(const[name,value]of Object.entries(node.attributes)){if(name.startsWith(\"xmlns:\")&&namespaces.includes(value)){prefixes.push(name.slice(\"xmlns:\".length));delete node.attributes[name]}}}for(const name of Object.keys(node.attributes)){if(name.includes(\":\")){const[prefix]=name.split(\":\");if(prefixes.includes(prefix)){delete node.attributes[name]}}}if(node.name.includes(\":\")){const[prefix]=node.name.split(\":\");if(prefixes.includes(prefix)){detachNodeFromParent(node,parentNode)}}}}}};\n})()\n","warnings":[],"map":{"version":3,"mappings":";aAEA,KAAM,CAAE,oBAAqB,EAAI,QAAQ,gBAAgB,EACzD,KAAM,CAAE,gBAAiB,EAAI,QAAQ,mBAAmB,EAExD,QAAQ,KAAO,sBACf,QAAQ,YAAc,sDActB,QAAQ,GAAK,CAAC,MAAO,SAAW,CAC9B,IAAI,WAAa,iBACjB,GAAI,MAAM,QAAQ,OAAO,oBAAoB,EAAG,CAC9C,WAAa,CAAC,GAAG,iBAAkB,GAAG,OAAO,oBAAoB,CACnE,CAIA,MAAM,SAAW,CAAC,EAClB,MAAO,CACL,QAAS,CACP,MAAO,CAAC,KAAM,aAAe,CAE3B,GAAI,KAAK,OAAS,MAAO,CACvB,SAAW,CAAC,KAAM,KAAK,IAAK,OAAO,QAAQ,KAAK,UAAU,EAAG,CAC3D,GAAI,KAAK,WAAW,QAAQ,GAAK,WAAW,SAAS,KAAK,EAAG,CAC3D,SAAS,KAAK,KAAK,MAAM,SAAS,MAAM,CAAC,EAEzC,OAAO,KAAK,WAAW,IAAI,CAC7B,CACF,CACF,CAGA,UAAW,QAAQ,OAAO,KAAK,KAAK,UAAU,EAAG,CAC/C,GAAI,KAAK,SAAS,GAAG,EAAG,CACtB,KAAM,CAAC,MAAM,EAAI,KAAK,MAAM,GAAG,EAC/B,GAAI,SAAS,SAAS,MAAM,EAAG,CAC7B,OAAO,KAAK,WAAW,IAAI,CAC7B,CACF,CACF,CAGA,GAAI,KAAK,KAAK,SAAS,GAAG,EAAG,CAC3B,KAAM,CAAC,MAAM,EAAI,KAAK,KAAK,MAAM,GAAG,EACpC,GAAI,SAAS,SAAS,MAAM,EAAG,CAC7B,qBAAqB,KAAM,UAAU,CACvC,CACF,CACF,CACF,CACF,CACF","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/svgo@3.0.3/node_modules/svgo/plugins/removeEditorsNSData.js"],"sourcesContent":["'use strict';\n\nconst { detachNodeFromParent } = require('../lib/xast.js');\nconst { editorNamespaces } = require('./_collections.js');\n\nexports.name = 'removeEditorsNSData';\nexports.description = 'removes editors namespaces, elements and attributes';\n\n/**\n * Remove editors namespaces, elements and attributes.\n *\n * @example\n * <svg xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\">\n * <sodipodi:namedview/>\n * <path sodipodi:nodetypes=\"cccc\"/>\n *\n * @author Kir Belevich\n *\n * @type {import('./plugins-types').Plugin<'removeEditorsNSData'>}\n */\nexports.fn = (_root, params) => {\n  let namespaces = editorNamespaces;\n  if (Array.isArray(params.additionalNamespaces)) {\n    namespaces = [...editorNamespaces, ...params.additionalNamespaces];\n  }\n  /**\n   * @type {Array<string>}\n   */\n  const prefixes = [];\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        // collect namespace aliases from svg element\n        if (node.name === 'svg') {\n          for (const [name, value] of Object.entries(node.attributes)) {\n            if (name.startsWith('xmlns:') && namespaces.includes(value)) {\n              prefixes.push(name.slice('xmlns:'.length));\n              // <svg xmlns:sodipodi=\"\">\n              delete node.attributes[name];\n            }\n          }\n        }\n        // remove editor attributes, for example\n        // <* sodipodi:*=\"\">\n        for (const name of Object.keys(node.attributes)) {\n          if (name.includes(':')) {\n            const [prefix] = name.split(':');\n            if (prefixes.includes(prefix)) {\n              delete node.attributes[name];\n            }\n          }\n        }\n        // remove editor elements, for example\n        // <sodipodi:*>\n        if (node.name.includes(':')) {\n          const [prefix] = node.name.split(':');\n          if (prefixes.includes(prefix)) {\n            detachNodeFromParent(node, parentNode);\n          }\n        }\n      },\n    },\n  };\n};\n"]}}