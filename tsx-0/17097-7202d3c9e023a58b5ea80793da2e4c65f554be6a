{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.prevElementSibling=exports.nextElementSibling=exports.getName=exports.hasAttrib=exports.getAttributeValue=exports.getSiblings=exports.getParent=exports.getChildren=void 0;var domhandler_1=require(\"domhandler\");function getChildren(elem){return(0,domhandler_1.hasChildren)(elem)?elem.children:[]}__name(getChildren,\"getChildren\");exports.getChildren=getChildren;function getParent(elem){return elem.parent||null}__name(getParent,\"getParent\");exports.getParent=getParent;function getSiblings(elem){var _a,_b;var parent=getParent(elem);if(parent!=null)return getChildren(parent);var siblings=[elem];var prev=elem.prev,next=elem.next;while(prev!=null){siblings.unshift(prev);_a=prev,prev=_a.prev}while(next!=null){siblings.push(next);_b=next,next=_b.next}return siblings}__name(getSiblings,\"getSiblings\");exports.getSiblings=getSiblings;function getAttributeValue(elem,name){var _a;return(_a=elem.attribs)===null||_a===void 0?void 0:_a[name]}__name(getAttributeValue,\"getAttributeValue\");exports.getAttributeValue=getAttributeValue;function hasAttrib(elem,name){return elem.attribs!=null&&Object.prototype.hasOwnProperty.call(elem.attribs,name)&&elem.attribs[name]!=null}__name(hasAttrib,\"hasAttrib\");exports.hasAttrib=hasAttrib;function getName(elem){return elem.name}__name(getName,\"getName\");exports.getName=getName;function nextElementSibling(elem){var _a;var next=elem.next;while(next!==null&&!(0,domhandler_1.isTag)(next))_a=next,next=_a.next;return next}__name(nextElementSibling,\"nextElementSibling\");exports.nextElementSibling=nextElementSibling;function prevElementSibling(elem){var _a;var prev=elem.prev;while(prev!==null&&!(0,domhandler_1.isTag)(prev))_a=prev,prev=_a.prev;return prev}__name(prevElementSibling,\"prevElementSibling\");exports.prevElementSibling=prevElementSibling;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,mBAAqB,QAAQ,mBAAqB,QAAQ,QAAU,QAAQ,UAAY,QAAQ,kBAAoB,QAAQ,YAAc,QAAQ,UAAY,QAAQ,YAAc,OAC5L,IAAI,aAAe,QAAQ,YAAY,EAQvC,SAAS,YAAY,KAAM,CACvB,OAAQ,EAAG,aAAa,aAAa,IAAI,EAAI,KAAK,SAAW,CAAC,CAClE,CAFS,kCAGT,QAAQ,YAAc,YAQtB,SAAS,UAAU,KAAM,CACrB,OAAO,KAAK,QAAU,IAC1B,CAFS,8BAGT,QAAQ,UAAY,UAYpB,SAAS,YAAY,KAAM,CACvB,IAAI,GAAI,GACR,IAAI,OAAS,UAAU,IAAI,EAC3B,GAAI,QAAU,KACV,OAAO,YAAY,MAAM,EAC7B,IAAI,SAAW,CAAC,IAAI,EACpB,IAAI,KAAO,KAAK,KAAM,KAAO,KAAK,KAClC,MAAO,MAAQ,KAAM,CACjB,SAAS,QAAQ,IAAI,EACpB,GAAK,KAAM,KAAO,GAAG,IAC1B,CACA,MAAO,MAAQ,KAAM,CACjB,SAAS,KAAK,IAAI,EACjB,GAAK,KAAM,KAAO,GAAG,IAC1B,CACA,OAAO,QACX,CAhBS,kCAiBT,QAAQ,YAAc,YAStB,SAAS,kBAAkB,KAAM,KAAM,CACnC,IAAI,GACJ,OAAQ,GAAK,KAAK,WAAa,MAAQ,KAAO,OAAS,OAAS,GAAG,IAAI,CAC3E,CAHS,8CAIT,QAAQ,kBAAoB,kBAS5B,SAAS,UAAU,KAAM,KAAM,CAC3B,OAAQ,KAAK,SAAW,MACpB,OAAO,UAAU,eAAe,KAAK,KAAK,QAAS,IAAI,GACvD,KAAK,QAAQ,IAAI,GAAK,IAC9B,CAJS,8BAKT,QAAQ,UAAY,UAQpB,SAAS,QAAQ,KAAM,CACnB,OAAO,KAAK,IAChB,CAFS,0BAGT,QAAQ,QAAU,QASlB,SAAS,mBAAmB,KAAM,CAC9B,IAAI,GACJ,IAAI,KAAO,KAAK,KAChB,MAAO,OAAS,MAAQ,EAAE,EAAG,aAAa,OAAO,IAAI,EAChD,GAAK,KAAM,KAAO,GAAG,KAC1B,OAAO,IACX,CANS,gDAOT,QAAQ,mBAAqB,mBAS7B,SAAS,mBAAmB,KAAM,CAC9B,IAAI,GACJ,IAAI,KAAO,KAAK,KAChB,MAAO,OAAS,MAAQ,EAAE,EAAG,aAAa,OAAO,IAAI,EAChD,GAAK,KAAM,KAAO,GAAG,KAC1B,OAAO,IACX,CANS,gDAOT,QAAQ,mBAAqB","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/traversal.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n    return (0, domhandler_1.hasChildren)(elem) ? elem.children : [];\n}\nexports.getChildren = getChildren;\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nfunction getParent(elem) {\n    return elem.parent || null;\n}\nexports.getParent = getParent;\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nfunction getSiblings(elem) {\n    var _a, _b;\n    var parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    var siblings = [elem];\n    var prev = elem.prev, next = elem.next;\n    while (prev != null) {\n        siblings.unshift(prev);\n        (_a = prev, prev = _a.prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        (_b = next, next = _b.next);\n    }\n    return siblings;\n}\nexports.getSiblings = getSiblings;\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\nexports.getAttributeValue = getAttributeValue;\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\nexports.hasAttrib = hasAttrib;\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n    return elem.name;\n}\nexports.getName = getName;\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nfunction nextElementSibling(elem) {\n    var _a;\n    var next = elem.next;\n    while (next !== null && !(0, domhandler_1.isTag)(next))\n        (_a = next, next = _a.next);\n    return next;\n}\nexports.nextElementSibling = nextElementSibling;\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nfunction prevElementSibling(elem) {\n    var _a;\n    var prev = elem.prev;\n    while (prev !== null && !(0, domhandler_1.isTag)(prev))\n        (_a = prev, prev = _a.prev);\n    return prev;\n}\nexports.prevElementSibling = prevElementSibling;\n//# sourceMappingURL=traversal.js.map"]}}