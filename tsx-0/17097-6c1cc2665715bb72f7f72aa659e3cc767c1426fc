{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.adapter=exports.serializeDoctypeContent=void 0;const parse5_1=require(\"parse5\");const domhandler_1=require(\"domhandler\");function createTextNode(value){return new domhandler_1.Text(value)}__name(createTextNode,\"createTextNode\");function enquoteDoctypeId(id){const quote=id.includes('\"')?\"'\":'\"';return quote+id+quote}__name(enquoteDoctypeId,\"enquoteDoctypeId\");function serializeDoctypeContent(name,publicId,systemId){let str=\"!DOCTYPE \";if(name){str+=name}if(publicId){str+=` PUBLIC ${enquoteDoctypeId(publicId)}`}else if(systemId){str+=\" SYSTEM\"}if(systemId){str+=` ${enquoteDoctypeId(systemId)}`}return str}__name(serializeDoctypeContent,\"serializeDoctypeContent\");exports.serializeDoctypeContent=serializeDoctypeContent;exports.adapter={isCommentNode:domhandler_1.isComment,isElementNode:domhandler_1.isTag,isTextNode:domhandler_1.isText,createDocument(){const node=new domhandler_1.Document([]);node[\"x-mode\"]=parse5_1.html.DOCUMENT_MODE.NO_QUIRKS;return node},createDocumentFragment(){return new domhandler_1.Document([])},createElement(tagName,namespaceURI,attrs){const attribs=Object.create(null);const attribsNamespace=Object.create(null);const attribsPrefix=Object.create(null);for(let i=0;i<attrs.length;i++){const attrName=attrs[i].name;attribs[attrName]=attrs[i].value;attribsNamespace[attrName]=attrs[i].namespace;attribsPrefix[attrName]=attrs[i].prefix}const node=new domhandler_1.Element(tagName,attribs,[]);node.namespace=namespaceURI;node[\"x-attribsNamespace\"]=attribsNamespace;node[\"x-attribsPrefix\"]=attribsPrefix;return node},createCommentNode(data){return new domhandler_1.Comment(data)},appendChild(parentNode,newNode){const prev=parentNode.children[parentNode.children.length-1];if(prev){prev.next=newNode;newNode.prev=prev}parentNode.children.push(newNode);newNode.parent=parentNode},insertBefore(parentNode,newNode,referenceNode){const insertionIdx=parentNode.children.indexOf(referenceNode);const{prev}=referenceNode;if(prev){prev.next=newNode;newNode.prev=prev}referenceNode.prev=newNode;newNode.next=referenceNode;parentNode.children.splice(insertionIdx,0,newNode);newNode.parent=parentNode},setTemplateContent(templateElement,contentElement){exports.adapter.appendChild(templateElement,contentElement)},getTemplateContent(templateElement){return templateElement.children[0]},setDocumentType(document,name,publicId,systemId){const data=serializeDoctypeContent(name,publicId,systemId);let doctypeNode=document.children.find(node=>(0,domhandler_1.isDirective)(node)&&node.name===\"!doctype\");if(doctypeNode){doctypeNode.data=data!==null&&data!==void 0?data:null}else{doctypeNode=new domhandler_1.ProcessingInstruction(\"!doctype\",data);exports.adapter.appendChild(document,doctypeNode)}doctypeNode[\"x-name\"]=name!==null&&name!==void 0?name:void 0;doctypeNode[\"x-publicId\"]=publicId!==null&&publicId!==void 0?publicId:void 0;doctypeNode[\"x-systemId\"]=systemId!==null&&systemId!==void 0?systemId:void 0},setDocumentMode(document,mode){document[\"x-mode\"]=mode},getDocumentMode(document){return document[\"x-mode\"]},detachNode(node){if(node.parent){const idx=node.parent.children.indexOf(node);const{prev,next}=node;node.prev=null;node.next=null;if(prev){prev.next=next}if(next){next.prev=prev}node.parent.children.splice(idx,1);node.parent=null}},insertText(parentNode,text){const lastChild=parentNode.children[parentNode.children.length-1];if(lastChild&&(0,domhandler_1.isText)(lastChild)){lastChild.data+=text}else{exports.adapter.appendChild(parentNode,createTextNode(text))}},insertTextBefore(parentNode,text,referenceNode){const prevNode=parentNode.children[parentNode.children.indexOf(referenceNode)-1];if(prevNode&&(0,domhandler_1.isText)(prevNode)){prevNode.data+=text}else{exports.adapter.insertBefore(parentNode,createTextNode(text),referenceNode)}},adoptAttributes(recipient,attrs){for(let i=0;i<attrs.length;i++){const attrName=attrs[i].name;if(typeof recipient.attribs[attrName]===\"undefined\"){recipient.attribs[attrName]=attrs[i].value;recipient[\"x-attribsNamespace\"][attrName]=attrs[i].namespace;recipient[\"x-attribsPrefix\"][attrName]=attrs[i].prefix}}},getFirstChild(node){return node.children[0]},getChildNodes(node){return node.children},getParentNode(node){return node.parent},getAttrList(element){return element.attributes},getTagName(element){return element.name},getNamespaceURI(element){return element.namespace},getTextNodeContent(textNode){return textNode.data},getCommentNodeContent(commentNode){return commentNode.data},getDocumentTypeNodeName(doctypeNode){var _a;return(_a=doctypeNode[\"x-name\"])!==null&&_a!==void 0?_a:\"\"},getDocumentTypeNodePublicId(doctypeNode){var _a;return(_a=doctypeNode[\"x-publicId\"])!==null&&_a!==void 0?_a:\"\"},getDocumentTypeNodeSystemId(doctypeNode){var _a;return(_a=doctypeNode[\"x-systemId\"])!==null&&_a!==void 0?_a:\"\"},isDocumentTypeNode(node){return(0,domhandler_1.isDirective)(node)&&node.name===\"!doctype\"},setNodeSourceCodeLocation(node,location){if(location){node.startIndex=location.startOffset;node.endIndex=location.endOffset}node.sourceCodeLocation=location},getNodeSourceCodeLocation(node){return node.sourceCodeLocation},updateNodeSourceCodeLocation(node,endLocation){if(endLocation.endOffset!=null)node.endIndex=endLocation.endOffset;node.sourceCodeLocation=Object.assign(Object.assign({},node.sourceCodeLocation),endLocation)}};\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/parse5-htmlparser2-tree-adapter@7.0.0/node_modules/parse5-htmlparser2-tree-adapter/dist/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adapter = exports.serializeDoctypeContent = void 0;\nconst parse5_1 = require(\"parse5\");\nconst domhandler_1 = require(\"domhandler\");\nfunction createTextNode(value) {\n    return new domhandler_1.Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nfunction serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexports.serializeDoctypeContent = serializeDoctypeContent;\nexports.adapter = {\n    // Re-exports from domhandler\n    isCommentNode: domhandler_1.isComment,\n    isElementNode: domhandler_1.isTag,\n    isTextNode: domhandler_1.isText,\n    //Node construction\n    createDocument() {\n        const node = new domhandler_1.Document([]);\n        node['x-mode'] = parse5_1.html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new domhandler_1.Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new domhandler_1.Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new domhandler_1.Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        exports.adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => (0, domhandler_1.isDirective)(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new domhandler_1.ProcessingInstruction('!doctype', data);\n            exports.adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && (0, domhandler_1.isText)(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            exports.adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && (0, domhandler_1.isText)(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            exports.adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return (0, domhandler_1.isDirective)(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = Object.assign(Object.assign({}, node.sourceCodeLocation), endLocation);\n    },\n};\n//# sourceMappingURL=index.js.map"]}}