{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.isHtml=exports.cloneDom=exports.domEach=exports.cssCase=exports.camelCase=exports.isCheerio=exports.isTag=void 0;var domhandler_1=require(\"domhandler\");var domhandler_2=require(\"domhandler\");Object.defineProperty(exports,\"isTag\",{enumerable:true,get:function(){return domhandler_2.isTag}});function isCheerio(maybeCheerio){return maybeCheerio.cheerio!=null}__name(isCheerio,\"isCheerio\");exports.isCheerio=isCheerio;function camelCase(str){return str.replace(/[_.-](\\w|$)/g,function(_,x){return x.toUpperCase()})}__name(camelCase,\"camelCase\");exports.camelCase=camelCase;function cssCase(str){return str.replace(/[A-Z]/g,\"-$&\").toLowerCase()}__name(cssCase,\"cssCase\");exports.cssCase=cssCase;function domEach(array,fn){var len=array.length;for(var i=0;i<len;i++)fn(array[i],i);return array}__name(domEach,\"domEach\");exports.domEach=domEach;function cloneDom(dom){var clone=\"length\"in dom?Array.prototype.map.call(dom,function(el){return(0,domhandler_1.cloneNode)(el,true)}):[(0,domhandler_1.cloneNode)(dom,true)];var root=new domhandler_1.Document(clone);clone.forEach(function(node){node.parent=root});return clone}__name(cloneDom,\"cloneDom\");exports.cloneDom=cloneDom;var CharacterCodes;(function(CharacterCodes2){CharacterCodes2[CharacterCodes2[\"LowerA\"]=97]=\"LowerA\";CharacterCodes2[CharacterCodes2[\"LowerZ\"]=122]=\"LowerZ\";CharacterCodes2[CharacterCodes2[\"UpperA\"]=65]=\"UpperA\";CharacterCodes2[CharacterCodes2[\"UpperZ\"]=90]=\"UpperZ\";CharacterCodes2[CharacterCodes2[\"Exclamation\"]=33]=\"Exclamation\"})(CharacterCodes||(CharacterCodes={}));function isHtml(str){var tagStart=str.indexOf(\"<\");if(tagStart<0||tagStart>str.length-3)return false;var tagChar=str.charCodeAt(tagStart+1);return(tagChar>=CharacterCodes.LowerA&&tagChar<=CharacterCodes.LowerZ||tagChar>=CharacterCodes.UpperA&&tagChar<=CharacterCodes.UpperZ||tagChar===CharacterCodes.Exclamation)&&str.includes(\">\",tagStart+2)}__name(isHtml,\"isHtml\");exports.isHtml=isHtml;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,OAAS,QAAQ,SAAW,QAAQ,QAAU,QAAQ,QAAU,QAAQ,UAAY,QAAQ,UAAY,QAAQ,MAAQ,OAChI,IAAI,aAAe,QAAQ,YAAY,EAWvC,IAAI,aAAe,QAAQ,YAAY,EACvC,OAAO,eAAe,QAAS,QAAS,CAAE,WAAY,KAAM,IAAK,UAAY,CAAE,OAAO,aAAa,KAAO,CAAE,CAAC,EAQ7G,SAAS,UAAU,aAAc,CAC7B,OAAO,aAAa,SAAW,IACnC,CAFS,8BAGT,QAAQ,UAAY,UASpB,SAAS,UAAU,IAAK,CACpB,OAAO,IAAI,QAAQ,eAAgB,SAAU,EAAG,EAAG,CAAE,OAAO,EAAE,YAAY,CAAG,CAAC,CAClF,CAFS,8BAGT,QAAQ,UAAY,UAUpB,SAAS,QAAQ,IAAK,CAClB,OAAO,IAAI,QAAQ,SAAU,KAAK,EAAE,YAAY,CACpD,CAFS,0BAGT,QAAQ,QAAU,QAYlB,SAAS,QAAQ,MAAO,GAAI,CACxB,IAAI,IAAM,MAAM,OAChB,QAAS,EAAI,EAAG,EAAI,IAAK,IACrB,GAAG,MAAM,CAAC,EAAG,CAAC,EAClB,OAAO,KACX,CALS,0BAMT,QAAQ,QAAU,QAUlB,SAAS,SAAS,IAAK,CACnB,IAAI,MAAQ,WAAY,IAClB,MAAM,UAAU,IAAI,KAAK,IAAK,SAAU,GAAI,CAAE,OAAQ,EAAG,aAAa,WAAW,GAAI,IAAI,CAAG,CAAC,EAC7F,EAAE,EAAG,aAAa,WAAW,IAAK,IAAI,CAAC,EAE7C,IAAI,KAAO,IAAI,aAAa,SAAS,KAAK,EAC1C,MAAM,QAAQ,SAAU,KAAM,CAC1B,KAAK,OAAS,IAClB,CAAC,EACD,OAAO,KACX,CAVS,4BAWT,QAAQ,SAAW,SACnB,IAAI,gBACH,SAAUA,gBAAgB,CACvBA,gBAAeA,gBAAe,QAAQ,EAAI,EAAE,EAAI,SAChDA,gBAAeA,gBAAe,QAAQ,EAAI,GAAG,EAAI,SACjDA,gBAAeA,gBAAe,QAAQ,EAAI,EAAE,EAAI,SAChDA,gBAAeA,gBAAe,QAAQ,EAAI,EAAE,EAAI,SAChDA,gBAAeA,gBAAe,aAAa,EAAI,EAAE,EAAI,aACzD,GAAG,iBAAmB,eAAiB,CAAC,EAAE,EAY1C,SAAS,OAAO,IAAK,CACjB,IAAI,SAAW,IAAI,QAAQ,GAAG,EAC9B,GAAI,SAAW,GAAK,SAAW,IAAI,OAAS,EACxC,MAAO,OACX,IAAI,QAAU,IAAI,WAAW,SAAW,CAAC,EACzC,OAAU,SAAW,eAAe,QAAU,SAAW,eAAe,QACnE,SAAW,eAAe,QAAU,SAAW,eAAe,QAC/D,UAAY,eAAe,cAC3B,IAAI,SAAS,IAAK,SAAW,CAAC,CACtC,CATS,wBAUT,QAAQ,OAAS","names":["CharacterCodes"],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isHtml = exports.cloneDom = exports.domEach = exports.cssCase = exports.camelCase = exports.isCheerio = exports.isTag = void 0;\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Check if the DOM element is a tag.\n *\n * `isTag(type)` includes `<script>` and `<style>` tags.\n *\n * @private\n * @category Utils\n * @param type - The DOM node to check.\n * @returns Whether the node is a tag.\n */\nvar domhandler_2 = require(\"domhandler\");\nObject.defineProperty(exports, \"isTag\", { enumerable: true, get: function () { return domhandler_2.isTag; } });\n/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nfunction isCheerio(maybeCheerio) {\n    return maybeCheerio.cheerio != null;\n}\nexports.isCheerio = isCheerio;\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nfunction camelCase(str) {\n    return str.replace(/[_.-](\\w|$)/g, function (_, x) { return x.toUpperCase(); });\n}\nexports.camelCase = camelCase;\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nfunction cssCase(str) {\n    return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\nexports.cssCase = cssCase;\n/**\n * Iterate over each DOM element without creating intermediary Cheerio instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nfunction domEach(array, fn) {\n    var len = array.length;\n    for (var i = 0; i < len; i++)\n        fn(array[i], i);\n    return array;\n}\nexports.domEach = domEach;\n/**\n * Create a deep copy of the given DOM structure. Sets the parents of the copies\n * of the passed nodes to `null`.\n *\n * @private\n * @category Utils\n * @param dom - The domhandler-compliant DOM structure.\n * @returns - The cloned DOM.\n */\nfunction cloneDom(dom) {\n    var clone = 'length' in dom\n        ? Array.prototype.map.call(dom, function (el) { return (0, domhandler_1.cloneNode)(el, true); })\n        : [(0, domhandler_1.cloneNode)(dom, true)];\n    // Add a root node around the cloned nodes\n    var root = new domhandler_1.Document(clone);\n    clone.forEach(function (node) {\n        node.parent = root;\n    });\n    return clone;\n}\nexports.cloneDom = cloneDom;\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharacterCodes[CharacterCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharacterCodes[CharacterCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharacterCodes[CharacterCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharacterCodes[CharacterCodes[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCodes || (CharacterCodes = {}));\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nfunction isHtml(str) {\n    var tagStart = str.indexOf('<');\n    if (tagStart < 0 || tagStart > str.length - 3)\n        return false;\n    var tagChar = str.charCodeAt(tagStart + 1);\n    return (((tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ) ||\n        (tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ) ||\n        tagChar === CharacterCodes.Exclamation) &&\n        str.includes('>', tagStart + 2));\n}\nexports.isHtml = isHtml;\n//# sourceMappingURL=utils.js.map"]}}