{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.getElementsByTagType=exports.getElementsByTagName=exports.getElementById=exports.getElements=exports.testElement=void 0;var domhandler_1=require(\"domhandler\");var querying_js_1=require(\"./querying.js\");var Checks={tag_name:function(name){if(typeof name===\"function\"){return function(elem){return(0,domhandler_1.isTag)(elem)&&name(elem.name)}}else if(name===\"*\"){return domhandler_1.isTag}return function(elem){return(0,domhandler_1.isTag)(elem)&&elem.name===name}},tag_type:function(type){if(typeof type===\"function\"){return function(elem){return type(elem.type)}}return function(elem){return elem.type===type}},tag_contains:function(data){if(typeof data===\"function\"){return function(elem){return(0,domhandler_1.isText)(elem)&&data(elem.data)}}return function(elem){return(0,domhandler_1.isText)(elem)&&elem.data===data}}};function getAttribCheck(attrib,value){if(typeof value===\"function\"){return function(elem){return(0,domhandler_1.isTag)(elem)&&value(elem.attribs[attrib])}}return function(elem){return(0,domhandler_1.isTag)(elem)&&elem.attribs[attrib]===value}}__name(getAttribCheck,\"getAttribCheck\");function combineFuncs(a,b){return function(elem){return a(elem)||b(elem)}}__name(combineFuncs,\"combineFuncs\");function compileTest(options){var funcs=Object.keys(options).map(function(key){var value=options[key];return Object.prototype.hasOwnProperty.call(Checks,key)?Checks[key](value):getAttribCheck(key,value)});return funcs.length===0?null:funcs.reduce(combineFuncs)}__name(compileTest,\"compileTest\");function testElement(options,node){var test=compileTest(options);return test?test(node):true}__name(testElement,\"testElement\");exports.testElement=testElement;function getElements(options,nodes,recurse,limit){if(limit===void 0){limit=Infinity}var test=compileTest(options);return test?(0,querying_js_1.filter)(test,nodes,recurse,limit):[]}__name(getElements,\"getElements\");exports.getElements=getElements;function getElementById(id,nodes,recurse){if(recurse===void 0){recurse=true}if(!Array.isArray(nodes))nodes=[nodes];return(0,querying_js_1.findOne)(getAttribCheck(\"id\",id),nodes,recurse)}__name(getElementById,\"getElementById\");exports.getElementById=getElementById;function getElementsByTagName(tagName,nodes,recurse,limit){if(recurse===void 0){recurse=true}if(limit===void 0){limit=Infinity}return(0,querying_js_1.filter)(Checks[\"tag_name\"](tagName),nodes,recurse,limit)}__name(getElementsByTagName,\"getElementsByTagName\");exports.getElementsByTagName=getElementsByTagName;function getElementsByTagType(type,nodes,recurse,limit){if(recurse===void 0){recurse=true}if(limit===void 0){limit=Infinity}return(0,querying_js_1.filter)(Checks[\"tag_type\"](type),nodes,recurse,limit)}__name(getElementsByTagType,\"getElementsByTagType\");exports.getElementsByTagType=getElementsByTagType;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/legacy.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElementsByTagType = exports.getElementsByTagName = exports.getElementById = exports.getElements = exports.testElement = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar querying_js_1 = require(\"./querying.js\");\n/**\n * A map of functions to check nodes against.\n */\nvar Checks = {\n    tag_name: function (name) {\n        if (typeof name === \"function\") {\n            return function (elem) { return (0, domhandler_1.isTag)(elem) && name(elem.name); };\n        }\n        else if (name === \"*\") {\n            return domhandler_1.isTag;\n        }\n        return function (elem) { return (0, domhandler_1.isTag)(elem) && elem.name === name; };\n    },\n    tag_type: function (type) {\n        if (typeof type === \"function\") {\n            return function (elem) { return type(elem.type); };\n        }\n        return function (elem) { return elem.type === type; };\n    },\n    tag_contains: function (data) {\n        if (typeof data === \"function\") {\n            return function (elem) { return (0, domhandler_1.isText)(elem) && data(elem.data); };\n        }\n        return function (elem) { return (0, domhandler_1.isText)(elem) && elem.data === data; };\n    },\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return function (elem) { return (0, domhandler_1.isTag)(elem) && value(elem.attribs[attrib]); };\n    }\n    return function (elem) { return (0, domhandler_1.isTag)(elem) && elem.attribs[attrib] === value; };\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return function (elem) { return a(elem) || b(elem); };\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n    var funcs = Object.keys(options).map(function (key) {\n        var value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nfunction testElement(options, node) {\n    var test = compileTest(options);\n    return test ? test(node) : true;\n}\nexports.testElement = testElement;\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nfunction getElements(options, nodes, recurse, limit) {\n    if (limit === void 0) { limit = Infinity; }\n    var test = compileTest(options);\n    return test ? (0, querying_js_1.filter)(test, nodes, recurse, limit) : [];\n}\nexports.getElements = getElements;\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nfunction getElementById(id, nodes, recurse) {\n    if (recurse === void 0) { recurse = true; }\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return (0, querying_js_1.findOne)(getAttribCheck(\"id\", id), nodes, recurse);\n}\nexports.getElementById = getElementById;\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nfunction getElementsByTagName(tagName, nodes, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    return (0, querying_js_1.filter)(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\nexports.getElementsByTagName = getElementsByTagName;\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nfunction getElementsByTagType(type, nodes, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    return (0, querying_js_1.filter)(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\nexports.getElementsByTagType = getElementsByTagType;\n//# sourceMappingURL=legacy.js.map"]}}