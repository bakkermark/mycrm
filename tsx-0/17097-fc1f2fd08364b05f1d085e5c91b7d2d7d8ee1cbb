{"code":"(()=>{\n\"use strict\";exports.name=\"removeDimensions\";exports.description=\"removes width and height in presence of viewBox (opposite to removeViewBox, disable it first)\";exports.fn=()=>{return{element:{enter:node=>{if(node.name===\"svg\"){if(node.attributes.viewBox!=null){delete node.attributes.width;delete node.attributes.height}else if(node.attributes.width!=null&&node.attributes.height!=null&&Number.isNaN(Number(node.attributes.width))===false&&Number.isNaN(Number(node.attributes.height))===false){const width=Number(node.attributes.width);const height=Number(node.attributes.height);node.attributes.viewBox=`0 0 ${width} ${height}`;delete node.attributes.width;delete node.attributes.height}}}}}};\n})()\n","warnings":[],"map":{"version":3,"mappings":";aAEA,QAAQ,KAAO,mBACf,QAAQ,YACN,gGAcF,QAAQ,GAAK,IAAM,CACjB,MAAO,CACL,QAAS,CACP,MAAQ,MAAS,CACf,GAAI,KAAK,OAAS,MAAO,CACvB,GAAI,KAAK,WAAW,SAAW,KAAM,CACnC,OAAO,KAAK,WAAW,MACvB,OAAO,KAAK,WAAW,MACzB,SACE,KAAK,WAAW,OAAS,MACzB,KAAK,WAAW,QAAU,MAC1B,OAAO,MAAM,OAAO,KAAK,WAAW,KAAK,CAAC,IAAM,OAChD,OAAO,MAAM,OAAO,KAAK,WAAW,MAAM,CAAC,IAAM,MACjD,CACA,MAAM,MAAQ,OAAO,KAAK,WAAW,KAAK,EAC1C,MAAM,OAAS,OAAO,KAAK,WAAW,MAAM,EAC5C,KAAK,WAAW,QAAU,OAAO,KAAK,IAAI,MAAM,GAChD,OAAO,KAAK,WAAW,MACvB,OAAO,KAAK,WAAW,MACzB,CACF,CACF,CACF,CACF,CACF","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/svgo@3.0.3/node_modules/svgo/plugins/removeDimensions.js"],"sourcesContent":["'use strict';\n\nexports.name = 'removeDimensions';\nexports.description =\n  'removes width and height in presence of viewBox (opposite to removeViewBox, disable it first)';\n\n/**\n * Remove width/height attributes and add the viewBox attribute if it's missing\n *\n * @example\n * <svg width=\"100\" height=\"50\" />\n *   â†“\n * <svg viewBox=\"0 0 100 50\" />\n *\n * @author Benny Schudel\n *\n * @type {import('./plugins-types').Plugin<'removeDimensions'>}\n */\nexports.fn = () => {\n  return {\n    element: {\n      enter: (node) => {\n        if (node.name === 'svg') {\n          if (node.attributes.viewBox != null) {\n            delete node.attributes.width;\n            delete node.attributes.height;\n          } else if (\n            node.attributes.width != null &&\n            node.attributes.height != null &&\n            Number.isNaN(Number(node.attributes.width)) === false &&\n            Number.isNaN(Number(node.attributes.height)) === false\n          ) {\n            const width = Number(node.attributes.width);\n            const height = Number(node.attributes.height);\n            node.attributes.viewBox = `0 0 ${width} ${height}`;\n            delete node.attributes.width;\n            delete node.attributes.height;\n          }\n        }\n      },\n    },\n  };\n};\n"]}}