{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const{dirname}=require(\"path\");const{findMade,findMadeSync}=require(\"./find-made.js\");const{mkdirpManual,mkdirpManualSync}=require(\"./mkdirp-manual.js\");const mkdirpNative=__name((path,opts)=>{opts.recursive=true;const parent=dirname(path);if(parent===path)return opts.mkdirAsync(path,opts);return findMade(opts,path).then(made=>opts.mkdirAsync(path,opts).then(()=>made).catch(er=>{if(er.code===\"ENOENT\")return mkdirpManual(path,opts);else throw er}))},\"mkdirpNative\");const mkdirpNativeSync=__name((path,opts)=>{opts.recursive=true;const parent=dirname(path);if(parent===path)return opts.mkdirSync(path,opts);const made=findMadeSync(opts,path);try{opts.mkdirSync(path,opts);return made}catch(er){if(er.code===\"ENOENT\")return mkdirpManualSync(path,opts);else throw er}},\"mkdirpNativeSync\");module.exports={mkdirpNative,mkdirpNativeSync};\n})()\n","warnings":[],"map":{"version":3,"mappings":";kHAAA,KAAM,CAAC,OAAO,EAAI,QAAQ,MAAM,EAChC,KAAM,CAAC,SAAU,YAAY,EAAI,QAAQ,gBAAgB,EACzD,KAAM,CAAC,aAAc,gBAAgB,EAAI,QAAQ,oBAAoB,EAErE,MAAM,aAAe,QAAC,KAAM,OAAS,CACnC,KAAK,UAAY,KACjB,MAAM,OAAS,QAAQ,IAAI,EAC3B,GAAI,SAAW,KACb,OAAO,KAAK,WAAW,KAAM,IAAI,EAEnC,OAAO,SAAS,KAAM,IAAI,EAAE,KAAK,MAC/B,KAAK,WAAW,KAAM,IAAI,EAAE,KAAK,IAAM,IAAI,EAC1C,MAAM,IAAM,CACX,GAAI,GAAG,OAAS,SACd,OAAO,aAAa,KAAM,IAAI,MAE9B,OAAM,EACV,CAAC,CAAC,CACN,EAdqB,gBAgBrB,MAAM,iBAAmB,QAAC,KAAM,OAAS,CACvC,KAAK,UAAY,KACjB,MAAM,OAAS,QAAQ,IAAI,EAC3B,GAAI,SAAW,KACb,OAAO,KAAK,UAAU,KAAM,IAAI,EAElC,MAAM,KAAO,aAAa,KAAM,IAAI,EACpC,GAAI,CACF,KAAK,UAAU,KAAM,IAAI,EACzB,OAAO,IACT,OAAS,GAAI,CACX,GAAI,GAAG,OAAS,SACd,OAAO,iBAAiB,KAAM,IAAI,MAElC,OAAM,EACV,CACF,EAhByB,oBAkBzB,OAAO,QAAU,CAAC,aAAc,gBAAgB","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/mkdirp-native.js"],"sourcesContent":["const {dirname} = require('path')\nconst {findMade, findMadeSync} = require('./find-made.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./mkdirp-manual.js')\n\nconst mkdirpNative = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirAsync(path, opts)\n\n  return findMade(opts, path).then(made =>\n    opts.mkdirAsync(path, opts).then(() => made)\n    .catch(er => {\n      if (er.code === 'ENOENT')\n        return mkdirpManual(path, opts)\n      else\n        throw er\n    }))\n}\n\nconst mkdirpNativeSync = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirSync(path, opts)\n\n  const made = findMadeSync(opts, path)\n  try {\n    opts.mkdirSync(path, opts)\n    return made\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts)\n    else\n      throw er\n  }\n}\n\nmodule.exports = {mkdirpNative, mkdirpNativeSync}\n"]}}