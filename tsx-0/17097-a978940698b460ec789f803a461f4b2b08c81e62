{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.Doctype=exports.CDATA=exports.Tag=exports.Style=exports.Script=exports.Comment=exports.Directive=exports.Text=exports.Root=exports.isTag=exports.ElementType=void 0;var ElementType;(function(ElementType2){ElementType2[\"Root\"]=\"root\";ElementType2[\"Text\"]=\"text\";ElementType2[\"Directive\"]=\"directive\";ElementType2[\"Comment\"]=\"comment\";ElementType2[\"Script\"]=\"script\";ElementType2[\"Style\"]=\"style\";ElementType2[\"Tag\"]=\"tag\";ElementType2[\"CDATA\"]=\"cdata\";ElementType2[\"Doctype\"]=\"doctype\"})(ElementType=exports.ElementType||(exports.ElementType={}));function isTag(elem){return elem.type===ElementType.Tag||elem.type===ElementType.Script||elem.type===ElementType.Style}__name(isTag,\"isTag\");exports.isTag=isTag;exports.Root=ElementType.Root;exports.Text=ElementType.Text;exports.Directive=ElementType.Directive;exports.Comment=ElementType.Comment;exports.Script=ElementType.Script;exports.Style=ElementType.Style;exports.Tag=ElementType.Tag;exports.CDATA=ElementType.CDATA;exports.Doctype=ElementType.Doctype;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,QAAU,QAAQ,MAAQ,QAAQ,IAAM,QAAQ,MAAQ,QAAQ,OAAS,QAAQ,QAAU,QAAQ,UAAY,QAAQ,KAAO,QAAQ,KAAO,QAAQ,MAAQ,QAAQ,YAAc,OAE3L,IAAI,aACH,SAAUA,aAAa,CAEpBA,aAAY,MAAM,EAAI,OAEtBA,aAAY,MAAM,EAAI,OAEtBA,aAAY,WAAW,EAAI,YAE3BA,aAAY,SAAS,EAAI,UAEzBA,aAAY,QAAQ,EAAI,SAExBA,aAAY,OAAO,EAAI,QAEvBA,aAAY,KAAK,EAAI,MAErBA,aAAY,OAAO,EAAI,QAEvBA,aAAY,SAAS,EAAI,SAC7B,GAAG,YAAc,QAAQ,cAAgB,QAAQ,YAAc,CAAC,EAAE,EAMlE,SAAS,MAAM,KAAM,CACjB,OAAQ,KAAK,OAAS,YAAY,KAC9B,KAAK,OAAS,YAAY,QAC1B,KAAK,OAAS,YAAY,KAClC,CAJS,sBAKT,QAAQ,MAAQ,MAGhB,QAAQ,KAAO,YAAY,KAE3B,QAAQ,KAAO,YAAY,KAE3B,QAAQ,UAAY,YAAY,UAEhC,QAAQ,QAAU,YAAY,QAE9B,QAAQ,OAAS,YAAY,OAE7B,QAAQ,MAAQ,YAAY,MAE5B,QAAQ,IAAM,YAAY,IAE1B,QAAQ,MAAQ,YAAY,MAE5B,QAAQ,QAAU,YAAY","names":["ElementType"],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/domelementtype@2.3.0/node_modules/domelementtype/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = void 0;\n/** Types of elements found in htmlparser2's DOM */\nvar ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType = exports.ElementType || (exports.ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\nexports.isTag = isTag;\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexports.Root = ElementType.Root;\n/** Type for Text */\nexports.Text = ElementType.Text;\n/** Type for <? ... ?> */\nexports.Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexports.Comment = ElementType.Comment;\n/** Type for <script> tags */\nexports.Script = ElementType.Script;\n/** Type for <style> tags */\nexports.Style = ElementType.Style;\n/** Type for Any tag */\nexports.Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexports.CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexports.Doctype = ElementType.Doctype;\n"]}}