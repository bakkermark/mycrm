{"code":"(()=>{\n\"use strict\";exports.name=\"addAttributesToSVGElement\";exports.description=\"adds attributes to an outer <svg> element\";var ENOCLS=`Error in plugin \"addAttributesToSVGElement\": absent parameters.\nIt should have a list of \"attributes\" or one \"attribute\".\nConfig example:\n\nplugins: [\n  {\n    name: 'addAttributesToSVGElement',\n    params: {\n      attribute: \"mySvg\"\n    }\n  }\n]\n\nplugins: [\n  {\n    name: 'addAttributesToSVGElement',\n    params: {\n      attributes: [\"mySvg\", \"size-big\"]\n    }\n  }\n]\n\nplugins: [\n  {\n    name: 'addAttributesToSVGElement',\n    params: {\n      attributes: [\n        {\n          focusable: false\n        },\n        {\n          'data-image': icon\n        }\n      ]\n    }\n  }\n]\n`;exports.fn=(root,params)=>{if(!Array.isArray(params.attributes)&&!params.attribute){console.error(ENOCLS);return null}const attributes=params.attributes||[params.attribute];return{element:{enter:(node,parentNode)=>{if(node.name===\"svg\"&&parentNode.type===\"root\"){for(const attribute of attributes){if(typeof attribute===\"string\"){if(node.attributes[attribute]==null){node.attributes[attribute]=void 0}}if(typeof attribute===\"object\"){for(const key of Object.keys(attribute)){if(node.attributes[key]==null){node.attributes[key]=attribute[key]}}}}}}}}};\n})()\n","warnings":[],"map":{"version":3,"mappings":";aAEA,QAAQ,KAAO,4BACf,QAAQ,YAAc,4CAEtB,IAAI,OAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8Cb,QAAQ,GAAK,CAAC,KAAM,SAAW,CAC7B,GAAI,CAAC,MAAM,QAAQ,OAAO,UAAU,GAAK,CAAC,OAAO,UAAW,CAC1D,QAAQ,MAAM,MAAM,EACpB,OAAO,IACT,CACA,MAAM,WAAa,OAAO,YAAc,CAAC,OAAO,SAAS,EACzD,MAAO,CACL,QAAS,CACP,MAAO,CAAC,KAAM,aAAe,CAC3B,GAAI,KAAK,OAAS,OAAS,WAAW,OAAS,OAAQ,CACrD,UAAW,aAAa,WAAY,CAClC,GAAI,OAAO,YAAc,SAAU,CACjC,GAAI,KAAK,WAAW,SAAS,GAAK,KAAM,CAEtC,KAAK,WAAW,SAAS,EAAI,MAC/B,CACF,CACA,GAAI,OAAO,YAAc,SAAU,CACjC,UAAW,OAAO,OAAO,KAAK,SAAS,EAAG,CACxC,GAAI,KAAK,WAAW,GAAG,GAAK,KAAM,CAEhC,KAAK,WAAW,GAAG,EAAI,UAAU,GAAG,CACtC,CACF,CACF,CACF,CACF,CACF,CACF,CACF,CACF","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/svgo@3.0.3/node_modules/svgo/plugins/addAttributesToSVGElement.js"],"sourcesContent":["'use strict';\n\nexports.name = 'addAttributesToSVGElement';\nexports.description = 'adds attributes to an outer <svg> element';\n\nvar ENOCLS = `Error in plugin \"addAttributesToSVGElement\": absent parameters.\nIt should have a list of \"attributes\" or one \"attribute\".\nConfig example:\n\nplugins: [\n  {\n    name: 'addAttributesToSVGElement',\n    params: {\n      attribute: \"mySvg\"\n    }\n  }\n]\n\nplugins: [\n  {\n    name: 'addAttributesToSVGElement',\n    params: {\n      attributes: [\"mySvg\", \"size-big\"]\n    }\n  }\n]\n\nplugins: [\n  {\n    name: 'addAttributesToSVGElement',\n    params: {\n      attributes: [\n        {\n          focusable: false\n        },\n        {\n          'data-image': icon\n        }\n      ]\n    }\n  }\n]\n`;\n\n/**\n * Add attributes to an outer <svg> element. Example config:\n *\n * @author April Arcus\n *\n * @type {import('./plugins-types').Plugin<'addAttributesToSVGElement'>}\n */\nexports.fn = (root, params) => {\n  if (!Array.isArray(params.attributes) && !params.attribute) {\n    console.error(ENOCLS);\n    return null;\n  }\n  const attributes = params.attributes || [params.attribute];\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        if (node.name === 'svg' && parentNode.type === 'root') {\n          for (const attribute of attributes) {\n            if (typeof attribute === 'string') {\n              if (node.attributes[attribute] == null) {\n                // @ts-ignore disallow explicit nullable attribute value\n                node.attributes[attribute] = undefined;\n              }\n            }\n            if (typeof attribute === 'object') {\n              for (const key of Object.keys(attribute)) {\n                if (node.attributes[key] == null) {\n                  // @ts-ignore disallow explicit nullable attribute value\n                  node.attributes[key] = attribute[key];\n                }\n              }\n            }\n          }\n        }\n      },\n    },\n  };\n};\n"]}}