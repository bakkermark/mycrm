{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const{dirname}=require(\"path\");const mkdirpManual=__name((path,opts,made)=>{opts.recursive=false;const parent=dirname(path);if(parent===path){return opts.mkdirAsync(path,opts).catch(er=>{if(er.code!==\"EISDIR\")throw er})}return opts.mkdirAsync(path,opts).then(()=>made||path,er=>{if(er.code===\"ENOENT\")return mkdirpManual(parent,opts).then(made2=>mkdirpManual(path,opts,made2));if(er.code!==\"EEXIST\"&&er.code!==\"EROFS\")throw er;return opts.statAsync(path).then(st=>{if(st.isDirectory())return made;else throw er},()=>{throw er})})},\"mkdirpManual\");const mkdirpManualSync=__name((path,opts,made)=>{const parent=dirname(path);opts.recursive=false;if(parent===path){try{return opts.mkdirSync(path,opts)}catch(er){if(er.code!==\"EISDIR\")throw er;else return}}try{opts.mkdirSync(path,opts);return made||path}catch(er){if(er.code===\"ENOENT\")return mkdirpManualSync(path,opts,mkdirpManualSync(parent,opts,made));if(er.code!==\"EEXIST\"&&er.code!==\"EROFS\")throw er;try{if(!opts.statSync(path).isDirectory())throw er}catch(_){throw er}}},\"mkdirpManualSync\");module.exports={mkdirpManual,mkdirpManualSync};\n})()\n","warnings":[],"map":{"version":3,"mappings":";kHAAA,KAAM,CAAC,OAAO,EAAI,QAAQ,MAAM,EAEhC,MAAM,aAAe,QAAC,KAAM,KAAM,OAAS,CACzC,KAAK,UAAY,MACjB,MAAM,OAAS,QAAQ,IAAI,EAC3B,GAAI,SAAW,KAAM,CACnB,OAAO,KAAK,WAAW,KAAM,IAAI,EAAE,MAAM,IAAM,CAG7C,GAAI,GAAG,OAAS,SACd,MAAM,EACV,CAAC,CACH,CAEA,OAAO,KAAK,WAAW,KAAM,IAAI,EAAE,KAAK,IAAM,MAAQ,KAAM,IAAM,CAChE,GAAI,GAAG,OAAS,SACd,OAAO,aAAa,OAAQ,IAAI,EAC7B,KAAKA,OAAQ,aAAa,KAAM,KAAMA,KAAI,CAAC,EAChD,GAAI,GAAG,OAAS,UAAY,GAAG,OAAS,QACtC,MAAM,GACR,OAAO,KAAK,UAAU,IAAI,EAAE,KAAK,IAAM,CACrC,GAAI,GAAG,YAAY,EACjB,OAAO,SAEP,OAAM,EACV,EAAG,IAAM,CAAE,MAAM,EAAG,CAAC,CACvB,CAAC,CACH,EAzBqB,gBA2BrB,MAAM,iBAAmB,QAAC,KAAM,KAAM,OAAS,CAC7C,MAAM,OAAS,QAAQ,IAAI,EAC3B,KAAK,UAAY,MAEjB,GAAI,SAAW,KAAM,CACnB,GAAI,CACF,OAAO,KAAK,UAAU,KAAM,IAAI,CAClC,OAAS,GAAI,CAGX,GAAI,GAAG,OAAS,SACd,MAAM,OAEN,OACJ,CACF,CAEA,GAAI,CACF,KAAK,UAAU,KAAM,IAAI,EACzB,OAAO,MAAQ,IACjB,OAAS,GAAI,CACX,GAAI,GAAG,OAAS,SACd,OAAO,iBAAiB,KAAM,KAAM,iBAAiB,OAAQ,KAAM,IAAI,CAAC,EAC1E,GAAI,GAAG,OAAS,UAAY,GAAG,OAAS,QACtC,MAAM,GACR,GAAI,CACF,GAAI,CAAC,KAAK,SAAS,IAAI,EAAE,YAAY,EACnC,MAAM,EACV,OAAS,EAAG,CACV,MAAM,EACR,CACF,CACF,EAhCyB,oBAkCzB,OAAO,QAAU,CAAC,aAAc,gBAAgB","names":["made"],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/mkdirp-manual.js"],"sourcesContent":["const {dirname} = require('path')\n\nconst mkdirpManual = (path, opts, made) => {\n  opts.recursive = false\n  const parent = dirname(path)\n  if (parent === path) {\n    return opts.mkdirAsync(path, opts).catch(er => {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n    })\n  }\n\n  return opts.mkdirAsync(path, opts).then(() => made || path, er => {\n    if (er.code === 'ENOENT')\n      return mkdirpManual(parent, opts)\n        .then(made => mkdirpManual(path, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    return opts.statAsync(path).then(st => {\n      if (st.isDirectory())\n        return made\n      else\n        throw er\n    }, () => { throw er })\n  })\n}\n\nconst mkdirpManualSync = (path, opts, made) => {\n  const parent = dirname(path)\n  opts.recursive = false\n\n  if (parent === path) {\n    try {\n      return opts.mkdirSync(path, opts)\n    } catch (er) {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n      else\n        return\n    }\n  }\n\n  try {\n    opts.mkdirSync(path, opts)\n    return made || path\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts, mkdirpManualSync(parent, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    try {\n      if (!opts.statSync(path).isDirectory())\n        throw er\n    } catch (_) {\n      throw er\n    }\n  }\n}\n\nmodule.exports = {mkdirpManual, mkdirpManualSync}\n"]}}