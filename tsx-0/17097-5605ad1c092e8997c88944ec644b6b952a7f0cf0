{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});module.exports=Yallist;Yallist.Node=Node;Yallist.create=Yallist;function Yallist(list){var self=this;if(!(self instanceof Yallist)){self=new Yallist}self.tail=null;self.head=null;self.length=0;if(list&&typeof list.forEach===\"function\"){list.forEach(function(item){self.push(item)})}else if(arguments.length>0){for(var i=0,l=arguments.length;i<l;i++){self.push(arguments[i])}}return self}__name(Yallist,\"Yallist\");Yallist.prototype.removeNode=function(node){if(node.list!==this){throw new Error(\"removing node which does not belong to this list\")}var next=node.next;var prev=node.prev;if(next){next.prev=prev}if(prev){prev.next=next}if(node===this.head){this.head=next}if(node===this.tail){this.tail=prev}node.list.length--;node.next=null;node.prev=null;node.list=null;return next};Yallist.prototype.unshiftNode=function(node){if(node===this.head){return}if(node.list){node.list.removeNode(node)}var head=this.head;node.list=this;node.next=head;if(head){head.prev=node}this.head=node;if(!this.tail){this.tail=node}this.length++};Yallist.prototype.pushNode=function(node){if(node===this.tail){return}if(node.list){node.list.removeNode(node)}var tail=this.tail;node.list=this;node.prev=tail;if(tail){tail.next=node}this.tail=node;if(!this.head){this.head=node}this.length++};Yallist.prototype.push=function(){for(var i=0,l=arguments.length;i<l;i++){push(this,arguments[i])}return this.length};Yallist.prototype.unshift=function(){for(var i=0,l=arguments.length;i<l;i++){unshift(this,arguments[i])}return this.length};Yallist.prototype.pop=function(){if(!this.tail){return void 0}var res=this.tail.value;this.tail=this.tail.prev;if(this.tail){this.tail.next=null}else{this.head=null}this.length--;return res};Yallist.prototype.shift=function(){if(!this.head){return void 0}var res=this.head.value;this.head=this.head.next;if(this.head){this.head.prev=null}else{this.tail=null}this.length--;return res};Yallist.prototype.forEach=function(fn,thisp){thisp=thisp||this;for(var walker=this.head,i=0;walker!==null;i++){fn.call(thisp,walker.value,i,this);walker=walker.next}};Yallist.prototype.forEachReverse=function(fn,thisp){thisp=thisp||this;for(var walker=this.tail,i=this.length-1;walker!==null;i--){fn.call(thisp,walker.value,i,this);walker=walker.prev}};Yallist.prototype.get=function(n){for(var i=0,walker=this.head;walker!==null&&i<n;i++){walker=walker.next}if(i===n&&walker!==null){return walker.value}};Yallist.prototype.getReverse=function(n){for(var i=0,walker=this.tail;walker!==null&&i<n;i++){walker=walker.prev}if(i===n&&walker!==null){return walker.value}};Yallist.prototype.map=function(fn,thisp){thisp=thisp||this;var res=new Yallist;for(var walker=this.head;walker!==null;){res.push(fn.call(thisp,walker.value,this));walker=walker.next}return res};Yallist.prototype.mapReverse=function(fn,thisp){thisp=thisp||this;var res=new Yallist;for(var walker=this.tail;walker!==null;){res.push(fn.call(thisp,walker.value,this));walker=walker.prev}return res};Yallist.prototype.reduce=function(fn,initial){var acc;var walker=this.head;if(arguments.length>1){acc=initial}else if(this.head){walker=this.head.next;acc=this.head.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var i=0;walker!==null;i++){acc=fn(acc,walker.value,i);walker=walker.next}return acc};Yallist.prototype.reduceReverse=function(fn,initial){var acc;var walker=this.tail;if(arguments.length>1){acc=initial}else if(this.tail){walker=this.tail.prev;acc=this.tail.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var i=this.length-1;walker!==null;i--){acc=fn(acc,walker.value,i);walker=walker.prev}return acc};Yallist.prototype.toArray=function(){var arr=new Array(this.length);for(var i=0,walker=this.head;walker!==null;i++){arr[i]=walker.value;walker=walker.next}return arr};Yallist.prototype.toArrayReverse=function(){var arr=new Array(this.length);for(var i=0,walker=this.tail;walker!==null;i++){arr[i]=walker.value;walker=walker.prev}return arr};Yallist.prototype.slice=function(from,to){to=to||this.length;if(to<0){to+=this.length}from=from||0;if(from<0){from+=this.length}var ret=new Yallist;if(to<from||to<0){return ret}if(from<0){from=0}if(to>this.length){to=this.length}for(var i=0,walker=this.head;walker!==null&&i<from;i++){walker=walker.next}for(;walker!==null&&i<to;i++,walker=walker.next){ret.push(walker.value)}return ret};Yallist.prototype.sliceReverse=function(from,to){to=to||this.length;if(to<0){to+=this.length}from=from||0;if(from<0){from+=this.length}var ret=new Yallist;if(to<from||to<0){return ret}if(from<0){from=0}if(to>this.length){to=this.length}for(var i=this.length,walker=this.tail;walker!==null&&i>to;i--){walker=walker.prev}for(;walker!==null&&i>from;i--,walker=walker.prev){ret.push(walker.value)}return ret};Yallist.prototype.splice=function(start,deleteCount,...nodes){if(start>this.length){start=this.length-1}if(start<0){start=this.length+start}for(var i=0,walker=this.head;walker!==null&&i<start;i++){walker=walker.next}var ret=[];for(var i=0;walker&&i<deleteCount;i++){ret.push(walker.value);walker=this.removeNode(walker)}if(walker===null){walker=this.tail}if(walker!==this.head&&walker!==this.tail){walker=walker.prev}for(var i=0;i<nodes.length;i++){walker=insert(this,walker,nodes[i])}return ret};Yallist.prototype.reverse=function(){var head=this.head;var tail=this.tail;for(var walker=head;walker!==null;walker=walker.prev){var p=walker.prev;walker.prev=walker.next;walker.next=p}this.head=tail;this.tail=head;return this};function insert(self,node,value){var inserted=node===self.head?new Node(value,null,node,self):new Node(value,node,node.next,self);if(inserted.next===null){self.tail=inserted}if(inserted.prev===null){self.head=inserted}self.length++;return inserted}__name(insert,\"insert\");function push(self,item){self.tail=new Node(item,self.tail,null,self);if(!self.head){self.head=self.tail}self.length++}__name(push,\"push\");function unshift(self,item){self.head=new Node(item,null,self.head,self);if(!self.tail){self.tail=self.head}self.length++}__name(unshift,\"unshift\");function Node(value,prev,next,list){if(!(this instanceof Node)){return new Node(value,prev,next,list)}this.list=list;this.value=value;if(prev){prev.next=this;this.prev=prev}else{this.prev=null}if(next){next.prev=this;this.next=next}else{this.next=null}}__name(Node,\"Node\");try{require(\"./iterator.js\")(Yallist)}catch(er){}\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,QAAU,QAEjB,QAAQ,KAAO,KACf,QAAQ,OAAS,QAEjB,SAAS,QAAS,KAAM,CACtB,IAAI,KAAO,KACX,GAAI,EAAE,gBAAgB,SAAU,CAC9B,KAAO,IAAI,OACb,CAEA,KAAK,KAAO,KACZ,KAAK,KAAO,KACZ,KAAK,OAAS,EAEd,GAAI,MAAQ,OAAO,KAAK,UAAY,WAAY,CAC9C,KAAK,QAAQ,SAAU,KAAM,CAC3B,KAAK,KAAK,IAAI,CAChB,CAAC,CACH,SAAW,UAAU,OAAS,EAAG,CAC/B,QAAS,EAAI,EAAG,EAAI,UAAU,OAAQ,EAAI,EAAG,IAAK,CAChD,KAAK,KAAK,UAAU,CAAC,CAAC,CACxB,CACF,CAEA,OAAO,IACT,CArBS,0BAuBT,QAAQ,UAAU,WAAa,SAAU,KAAM,CAC7C,GAAI,KAAK,OAAS,KAAM,CACtB,MAAM,IAAI,MAAM,kDAAkD,CACpE,CAEA,IAAI,KAAO,KAAK,KAChB,IAAI,KAAO,KAAK,KAEhB,GAAI,KAAM,CACR,KAAK,KAAO,IACd,CAEA,GAAI,KAAM,CACR,KAAK,KAAO,IACd,CAEA,GAAI,OAAS,KAAK,KAAM,CACtB,KAAK,KAAO,IACd,CACA,GAAI,OAAS,KAAK,KAAM,CACtB,KAAK,KAAO,IACd,CAEA,KAAK,KAAK,SACV,KAAK,KAAO,KACZ,KAAK,KAAO,KACZ,KAAK,KAAO,KAEZ,OAAO,IACT,EAEA,QAAQ,UAAU,YAAc,SAAU,KAAM,CAC9C,GAAI,OAAS,KAAK,KAAM,CACtB,MACF,CAEA,GAAI,KAAK,KAAM,CACb,KAAK,KAAK,WAAW,IAAI,CAC3B,CAEA,IAAI,KAAO,KAAK,KAChB,KAAK,KAAO,KACZ,KAAK,KAAO,KACZ,GAAI,KAAM,CACR,KAAK,KAAO,IACd,CAEA,KAAK,KAAO,KACZ,GAAI,CAAC,KAAK,KAAM,CACd,KAAK,KAAO,IACd,CACA,KAAK,QACP,EAEA,QAAQ,UAAU,SAAW,SAAU,KAAM,CAC3C,GAAI,OAAS,KAAK,KAAM,CACtB,MACF,CAEA,GAAI,KAAK,KAAM,CACb,KAAK,KAAK,WAAW,IAAI,CAC3B,CAEA,IAAI,KAAO,KAAK,KAChB,KAAK,KAAO,KACZ,KAAK,KAAO,KACZ,GAAI,KAAM,CACR,KAAK,KAAO,IACd,CAEA,KAAK,KAAO,KACZ,GAAI,CAAC,KAAK,KAAM,CACd,KAAK,KAAO,IACd,CACA,KAAK,QACP,EAEA,QAAQ,UAAU,KAAO,UAAY,CACnC,QAAS,EAAI,EAAG,EAAI,UAAU,OAAQ,EAAI,EAAG,IAAK,CAChD,KAAK,KAAM,UAAU,CAAC,CAAC,CACzB,CACA,OAAO,KAAK,MACd,EAEA,QAAQ,UAAU,QAAU,UAAY,CACtC,QAAS,EAAI,EAAG,EAAI,UAAU,OAAQ,EAAI,EAAG,IAAK,CAChD,QAAQ,KAAM,UAAU,CAAC,CAAC,CAC5B,CACA,OAAO,KAAK,MACd,EAEA,QAAQ,UAAU,IAAM,UAAY,CAClC,GAAI,CAAC,KAAK,KAAM,CACd,OAAO,MACT,CAEA,IAAI,IAAM,KAAK,KAAK,MACpB,KAAK,KAAO,KAAK,KAAK,KACtB,GAAI,KAAK,KAAM,CACb,KAAK,KAAK,KAAO,IACnB,KAAO,CACL,KAAK,KAAO,IACd,CACA,KAAK,SACL,OAAO,GACT,EAEA,QAAQ,UAAU,MAAQ,UAAY,CACpC,GAAI,CAAC,KAAK,KAAM,CACd,OAAO,MACT,CAEA,IAAI,IAAM,KAAK,KAAK,MACpB,KAAK,KAAO,KAAK,KAAK,KACtB,GAAI,KAAK,KAAM,CACb,KAAK,KAAK,KAAO,IACnB,KAAO,CACL,KAAK,KAAO,IACd,CACA,KAAK,SACL,OAAO,GACT,EAEA,QAAQ,UAAU,QAAU,SAAU,GAAI,MAAO,CAC/C,MAAQ,OAAS,KACjB,QAAS,OAAS,KAAK,KAAM,EAAI,EAAG,SAAW,KAAM,IAAK,CACxD,GAAG,KAAK,MAAO,OAAO,MAAO,EAAG,IAAI,EACpC,OAAS,OAAO,IAClB,CACF,EAEA,QAAQ,UAAU,eAAiB,SAAU,GAAI,MAAO,CACtD,MAAQ,OAAS,KACjB,QAAS,OAAS,KAAK,KAAM,EAAI,KAAK,OAAS,EAAG,SAAW,KAAM,IAAK,CACtE,GAAG,KAAK,MAAO,OAAO,MAAO,EAAG,IAAI,EACpC,OAAS,OAAO,IAClB,CACF,EAEA,QAAQ,UAAU,IAAM,SAAU,EAAG,CACnC,QAAS,EAAI,EAAG,OAAS,KAAK,KAAM,SAAW,MAAQ,EAAI,EAAG,IAAK,CAEjE,OAAS,OAAO,IAClB,CACA,GAAI,IAAM,GAAK,SAAW,KAAM,CAC9B,OAAO,OAAO,KAChB,CACF,EAEA,QAAQ,UAAU,WAAa,SAAU,EAAG,CAC1C,QAAS,EAAI,EAAG,OAAS,KAAK,KAAM,SAAW,MAAQ,EAAI,EAAG,IAAK,CAEjE,OAAS,OAAO,IAClB,CACA,GAAI,IAAM,GAAK,SAAW,KAAM,CAC9B,OAAO,OAAO,KAChB,CACF,EAEA,QAAQ,UAAU,IAAM,SAAU,GAAI,MAAO,CAC3C,MAAQ,OAAS,KACjB,IAAI,IAAM,IAAI,QACd,QAAS,OAAS,KAAK,KAAM,SAAW,MAAO,CAC7C,IAAI,KAAK,GAAG,KAAK,MAAO,OAAO,MAAO,IAAI,CAAC,EAC3C,OAAS,OAAO,IAClB,CACA,OAAO,GACT,EAEA,QAAQ,UAAU,WAAa,SAAU,GAAI,MAAO,CAClD,MAAQ,OAAS,KACjB,IAAI,IAAM,IAAI,QACd,QAAS,OAAS,KAAK,KAAM,SAAW,MAAO,CAC7C,IAAI,KAAK,GAAG,KAAK,MAAO,OAAO,MAAO,IAAI,CAAC,EAC3C,OAAS,OAAO,IAClB,CACA,OAAO,GACT,EAEA,QAAQ,UAAU,OAAS,SAAU,GAAI,QAAS,CAChD,IAAI,IACJ,IAAI,OAAS,KAAK,KAClB,GAAI,UAAU,OAAS,EAAG,CACxB,IAAM,OACR,SAAW,KAAK,KAAM,CACpB,OAAS,KAAK,KAAK,KACnB,IAAM,KAAK,KAAK,KAClB,KAAO,CACL,MAAM,IAAI,UAAU,4CAA4C,CAClE,CAEA,QAAS,EAAI,EAAG,SAAW,KAAM,IAAK,CACpC,IAAM,GAAG,IAAK,OAAO,MAAO,CAAC,EAC7B,OAAS,OAAO,IAClB,CAEA,OAAO,GACT,EAEA,QAAQ,UAAU,cAAgB,SAAU,GAAI,QAAS,CACvD,IAAI,IACJ,IAAI,OAAS,KAAK,KAClB,GAAI,UAAU,OAAS,EAAG,CACxB,IAAM,OACR,SAAW,KAAK,KAAM,CACpB,OAAS,KAAK,KAAK,KACnB,IAAM,KAAK,KAAK,KAClB,KAAO,CACL,MAAM,IAAI,UAAU,4CAA4C,CAClE,CAEA,QAAS,EAAI,KAAK,OAAS,EAAG,SAAW,KAAM,IAAK,CAClD,IAAM,GAAG,IAAK,OAAO,MAAO,CAAC,EAC7B,OAAS,OAAO,IAClB,CAEA,OAAO,GACT,EAEA,QAAQ,UAAU,QAAU,UAAY,CACtC,IAAI,IAAM,IAAI,MAAM,KAAK,MAAM,EAC/B,QAAS,EAAI,EAAG,OAAS,KAAK,KAAM,SAAW,KAAM,IAAK,CACxD,IAAI,CAAC,EAAI,OAAO,MAChB,OAAS,OAAO,IAClB,CACA,OAAO,GACT,EAEA,QAAQ,UAAU,eAAiB,UAAY,CAC7C,IAAI,IAAM,IAAI,MAAM,KAAK,MAAM,EAC/B,QAAS,EAAI,EAAG,OAAS,KAAK,KAAM,SAAW,KAAM,IAAK,CACxD,IAAI,CAAC,EAAI,OAAO,MAChB,OAAS,OAAO,IAClB,CACA,OAAO,GACT,EAEA,QAAQ,UAAU,MAAQ,SAAU,KAAM,GAAI,CAC5C,GAAK,IAAM,KAAK,OAChB,GAAI,GAAK,EAAG,CACV,IAAM,KAAK,MACb,CACA,KAAO,MAAQ,EACf,GAAI,KAAO,EAAG,CACZ,MAAQ,KAAK,MACf,CACA,IAAI,IAAM,IAAI,QACd,GAAI,GAAK,MAAQ,GAAK,EAAG,CACvB,OAAO,GACT,CACA,GAAI,KAAO,EAAG,CACZ,KAAO,CACT,CACA,GAAI,GAAK,KAAK,OAAQ,CACpB,GAAK,KAAK,MACZ,CACA,QAAS,EAAI,EAAG,OAAS,KAAK,KAAM,SAAW,MAAQ,EAAI,KAAM,IAAK,CACpE,OAAS,OAAO,IAClB,CACA,KAAO,SAAW,MAAQ,EAAI,GAAI,IAAK,OAAS,OAAO,KAAM,CAC3D,IAAI,KAAK,OAAO,KAAK,CACvB,CACA,OAAO,GACT,EAEA,QAAQ,UAAU,aAAe,SAAU,KAAM,GAAI,CACnD,GAAK,IAAM,KAAK,OAChB,GAAI,GAAK,EAAG,CACV,IAAM,KAAK,MACb,CACA,KAAO,MAAQ,EACf,GAAI,KAAO,EAAG,CACZ,MAAQ,KAAK,MACf,CACA,IAAI,IAAM,IAAI,QACd,GAAI,GAAK,MAAQ,GAAK,EAAG,CACvB,OAAO,GACT,CACA,GAAI,KAAO,EAAG,CACZ,KAAO,CACT,CACA,GAAI,GAAK,KAAK,OAAQ,CACpB,GAAK,KAAK,MACZ,CACA,QAAS,EAAI,KAAK,OAAQ,OAAS,KAAK,KAAM,SAAW,MAAQ,EAAI,GAAI,IAAK,CAC5E,OAAS,OAAO,IAClB,CACA,KAAO,SAAW,MAAQ,EAAI,KAAM,IAAK,OAAS,OAAO,KAAM,CAC7D,IAAI,KAAK,OAAO,KAAK,CACvB,CACA,OAAO,GACT,EAEA,QAAQ,UAAU,OAAS,SAAU,MAAO,eAAgB,MAAO,CACjE,GAAI,MAAQ,KAAK,OAAQ,CACvB,MAAQ,KAAK,OAAS,CACxB,CACA,GAAI,MAAQ,EAAG,CACb,MAAQ,KAAK,OAAS,KACxB,CAEA,QAAS,EAAI,EAAG,OAAS,KAAK,KAAM,SAAW,MAAQ,EAAI,MAAO,IAAK,CACrE,OAAS,OAAO,IAClB,CAEA,IAAI,IAAM,CAAC,EACX,QAAS,EAAI,EAAG,QAAU,EAAI,YAAa,IAAK,CAC9C,IAAI,KAAK,OAAO,KAAK,EACrB,OAAS,KAAK,WAAW,MAAM,CACjC,CACA,GAAI,SAAW,KAAM,CACnB,OAAS,KAAK,IAChB,CAEA,GAAI,SAAW,KAAK,MAAQ,SAAW,KAAK,KAAM,CAChD,OAAS,OAAO,IAClB,CAEA,QAAS,EAAI,EAAG,EAAI,MAAM,OAAQ,IAAK,CACrC,OAAS,OAAO,KAAM,OAAQ,MAAM,CAAC,CAAC,CACxC,CACA,OAAO,GACT,EAEA,QAAQ,UAAU,QAAU,UAAY,CACtC,IAAI,KAAO,KAAK,KAChB,IAAI,KAAO,KAAK,KAChB,QAAS,OAAS,KAAM,SAAW,KAAM,OAAS,OAAO,KAAM,CAC7D,IAAI,EAAI,OAAO,KACf,OAAO,KAAO,OAAO,KACrB,OAAO,KAAO,CAChB,CACA,KAAK,KAAO,KACZ,KAAK,KAAO,KACZ,OAAO,IACT,EAEA,SAAS,OAAQ,KAAM,KAAM,MAAO,CAClC,IAAI,SAAW,OAAS,KAAK,KAC3B,IAAI,KAAK,MAAO,KAAM,KAAM,IAAI,EAChC,IAAI,KAAK,MAAO,KAAM,KAAK,KAAM,IAAI,EAEvC,GAAI,SAAS,OAAS,KAAM,CAC1B,KAAK,KAAO,QACd,CACA,GAAI,SAAS,OAAS,KAAM,CAC1B,KAAK,KAAO,QACd,CAEA,KAAK,SAEL,OAAO,QACT,CAfS,wBAiBT,SAAS,KAAM,KAAM,KAAM,CACzB,KAAK,KAAO,IAAI,KAAK,KAAM,KAAK,KAAM,KAAM,IAAI,EAChD,GAAI,CAAC,KAAK,KAAM,CACd,KAAK,KAAO,KAAK,IACnB,CACA,KAAK,QACP,CANS,oBAQT,SAAS,QAAS,KAAM,KAAM,CAC5B,KAAK,KAAO,IAAI,KAAK,KAAM,KAAM,KAAK,KAAM,IAAI,EAChD,GAAI,CAAC,KAAK,KAAM,CACd,KAAK,KAAO,KAAK,IACnB,CACA,KAAK,QACP,CANS,0BAQT,SAAS,KAAM,MAAO,KAAM,KAAM,KAAM,CACtC,GAAI,EAAE,gBAAgB,MAAO,CAC3B,OAAO,IAAI,KAAK,MAAO,KAAM,KAAM,IAAI,CACzC,CAEA,KAAK,KAAO,KACZ,KAAK,MAAQ,MAEb,GAAI,KAAM,CACR,KAAK,KAAO,KACZ,KAAK,KAAO,IACd,KAAO,CACL,KAAK,KAAO,IACd,CAEA,GAAI,KAAM,CACR,KAAK,KAAO,KACZ,KAAK,KAAO,IACd,KAAO,CACL,KAAK,KAAO,IACd,CACF,CArBS,oBAuBT,GAAI,CAEF,QAAQ,eAAe,EAAE,OAAO,CAClC,OAAS,GAAI,CAAC","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js"],"sourcesContent":["'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"]}}