{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.Tokenizer=exports.TokenizerMode=void 0;const preprocessor_js_1=require(\"./preprocessor.js\");const unicode_js_1=require(\"../common/unicode.js\");const token_js_1=require(\"../common/token.js\");const decode_js_1=require(\"entities/lib/decode.js\");const error_codes_js_1=require(\"../common/error-codes.js\");const html_js_1=require(\"../common/html.js\");const C1_CONTROLS_REFERENCE_REPLACEMENTS=new Map([[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);var State;(function(State2){State2[State2[\"DATA\"]=0]=\"DATA\";State2[State2[\"RCDATA\"]=1]=\"RCDATA\";State2[State2[\"RAWTEXT\"]=2]=\"RAWTEXT\";State2[State2[\"SCRIPT_DATA\"]=3]=\"SCRIPT_DATA\";State2[State2[\"PLAINTEXT\"]=4]=\"PLAINTEXT\";State2[State2[\"TAG_OPEN\"]=5]=\"TAG_OPEN\";State2[State2[\"END_TAG_OPEN\"]=6]=\"END_TAG_OPEN\";State2[State2[\"TAG_NAME\"]=7]=\"TAG_NAME\";State2[State2[\"RCDATA_LESS_THAN_SIGN\"]=8]=\"RCDATA_LESS_THAN_SIGN\";State2[State2[\"RCDATA_END_TAG_OPEN\"]=9]=\"RCDATA_END_TAG_OPEN\";State2[State2[\"RCDATA_END_TAG_NAME\"]=10]=\"RCDATA_END_TAG_NAME\";State2[State2[\"RAWTEXT_LESS_THAN_SIGN\"]=11]=\"RAWTEXT_LESS_THAN_SIGN\";State2[State2[\"RAWTEXT_END_TAG_OPEN\"]=12]=\"RAWTEXT_END_TAG_OPEN\";State2[State2[\"RAWTEXT_END_TAG_NAME\"]=13]=\"RAWTEXT_END_TAG_NAME\";State2[State2[\"SCRIPT_DATA_LESS_THAN_SIGN\"]=14]=\"SCRIPT_DATA_LESS_THAN_SIGN\";State2[State2[\"SCRIPT_DATA_END_TAG_OPEN\"]=15]=\"SCRIPT_DATA_END_TAG_OPEN\";State2[State2[\"SCRIPT_DATA_END_TAG_NAME\"]=16]=\"SCRIPT_DATA_END_TAG_NAME\";State2[State2[\"SCRIPT_DATA_ESCAPE_START\"]=17]=\"SCRIPT_DATA_ESCAPE_START\";State2[State2[\"SCRIPT_DATA_ESCAPE_START_DASH\"]=18]=\"SCRIPT_DATA_ESCAPE_START_DASH\";State2[State2[\"SCRIPT_DATA_ESCAPED\"]=19]=\"SCRIPT_DATA_ESCAPED\";State2[State2[\"SCRIPT_DATA_ESCAPED_DASH\"]=20]=\"SCRIPT_DATA_ESCAPED_DASH\";State2[State2[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"]=21]=\"SCRIPT_DATA_ESCAPED_DASH_DASH\";State2[State2[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"]=22]=\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";State2[State2[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"]=23]=\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";State2[State2[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"]=24]=\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";State2[State2[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"]=25]=\"SCRIPT_DATA_DOUBLE_ESCAPE_START\";State2[State2[\"SCRIPT_DATA_DOUBLE_ESCAPED\"]=26]=\"SCRIPT_DATA_DOUBLE_ESCAPED\";State2[State2[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"]=27]=\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";State2[State2[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"]=28]=\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";State2[State2[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"]=29]=\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";State2[State2[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"]=30]=\"SCRIPT_DATA_DOUBLE_ESCAPE_END\";State2[State2[\"BEFORE_ATTRIBUTE_NAME\"]=31]=\"BEFORE_ATTRIBUTE_NAME\";State2[State2[\"ATTRIBUTE_NAME\"]=32]=\"ATTRIBUTE_NAME\";State2[State2[\"AFTER_ATTRIBUTE_NAME\"]=33]=\"AFTER_ATTRIBUTE_NAME\";State2[State2[\"BEFORE_ATTRIBUTE_VALUE\"]=34]=\"BEFORE_ATTRIBUTE_VALUE\";State2[State2[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"]=35]=\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";State2[State2[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"]=36]=\"ATTRIBUTE_VALUE_SINGLE_QUOTED\";State2[State2[\"ATTRIBUTE_VALUE_UNQUOTED\"]=37]=\"ATTRIBUTE_VALUE_UNQUOTED\";State2[State2[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"]=38]=\"AFTER_ATTRIBUTE_VALUE_QUOTED\";State2[State2[\"SELF_CLOSING_START_TAG\"]=39]=\"SELF_CLOSING_START_TAG\";State2[State2[\"BOGUS_COMMENT\"]=40]=\"BOGUS_COMMENT\";State2[State2[\"MARKUP_DECLARATION_OPEN\"]=41]=\"MARKUP_DECLARATION_OPEN\";State2[State2[\"COMMENT_START\"]=42]=\"COMMENT_START\";State2[State2[\"COMMENT_START_DASH\"]=43]=\"COMMENT_START_DASH\";State2[State2[\"COMMENT\"]=44]=\"COMMENT\";State2[State2[\"COMMENT_LESS_THAN_SIGN\"]=45]=\"COMMENT_LESS_THAN_SIGN\";State2[State2[\"COMMENT_LESS_THAN_SIGN_BANG\"]=46]=\"COMMENT_LESS_THAN_SIGN_BANG\";State2[State2[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"]=47]=\"COMMENT_LESS_THAN_SIGN_BANG_DASH\";State2[State2[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"]=48]=\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";State2[State2[\"COMMENT_END_DASH\"]=49]=\"COMMENT_END_DASH\";State2[State2[\"COMMENT_END\"]=50]=\"COMMENT_END\";State2[State2[\"COMMENT_END_BANG\"]=51]=\"COMMENT_END_BANG\";State2[State2[\"DOCTYPE\"]=52]=\"DOCTYPE\";State2[State2[\"BEFORE_DOCTYPE_NAME\"]=53]=\"BEFORE_DOCTYPE_NAME\";State2[State2[\"DOCTYPE_NAME\"]=54]=\"DOCTYPE_NAME\";State2[State2[\"AFTER_DOCTYPE_NAME\"]=55]=\"AFTER_DOCTYPE_NAME\";State2[State2[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"]=56]=\"AFTER_DOCTYPE_PUBLIC_KEYWORD\";State2[State2[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"]=57]=\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";State2[State2[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"]=58]=\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";State2[State2[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"]=59]=\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";State2[State2[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"]=60]=\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";State2[State2[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"]=61]=\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";State2[State2[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"]=62]=\"AFTER_DOCTYPE_SYSTEM_KEYWORD\";State2[State2[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"]=63]=\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";State2[State2[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"]=64]=\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";State2[State2[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"]=65]=\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";State2[State2[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"]=66]=\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";State2[State2[\"BOGUS_DOCTYPE\"]=67]=\"BOGUS_DOCTYPE\";State2[State2[\"CDATA_SECTION\"]=68]=\"CDATA_SECTION\";State2[State2[\"CDATA_SECTION_BRACKET\"]=69]=\"CDATA_SECTION_BRACKET\";State2[State2[\"CDATA_SECTION_END\"]=70]=\"CDATA_SECTION_END\";State2[State2[\"CHARACTER_REFERENCE\"]=71]=\"CHARACTER_REFERENCE\";State2[State2[\"NAMED_CHARACTER_REFERENCE\"]=72]=\"NAMED_CHARACTER_REFERENCE\";State2[State2[\"AMBIGUOUS_AMPERSAND\"]=73]=\"AMBIGUOUS_AMPERSAND\";State2[State2[\"NUMERIC_CHARACTER_REFERENCE\"]=74]=\"NUMERIC_CHARACTER_REFERENCE\";State2[State2[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"]=75]=\"HEXADEMICAL_CHARACTER_REFERENCE_START\";State2[State2[\"HEXADEMICAL_CHARACTER_REFERENCE\"]=76]=\"HEXADEMICAL_CHARACTER_REFERENCE\";State2[State2[\"DECIMAL_CHARACTER_REFERENCE\"]=77]=\"DECIMAL_CHARACTER_REFERENCE\";State2[State2[\"NUMERIC_CHARACTER_REFERENCE_END\"]=78]=\"NUMERIC_CHARACTER_REFERENCE_END\"})(State||(State={}));exports.TokenizerMode={DATA:State.DATA,RCDATA:State.RCDATA,RAWTEXT:State.RAWTEXT,SCRIPT_DATA:State.SCRIPT_DATA,PLAINTEXT:State.PLAINTEXT,CDATA_SECTION:State.CDATA_SECTION};function isAsciiDigit(cp){return cp>=unicode_js_1.CODE_POINTS.DIGIT_0&&cp<=unicode_js_1.CODE_POINTS.DIGIT_9}__name(isAsciiDigit,\"isAsciiDigit\");function isAsciiUpper(cp){return cp>=unicode_js_1.CODE_POINTS.LATIN_CAPITAL_A&&cp<=unicode_js_1.CODE_POINTS.LATIN_CAPITAL_Z}__name(isAsciiUpper,\"isAsciiUpper\");function isAsciiLower(cp){return cp>=unicode_js_1.CODE_POINTS.LATIN_SMALL_A&&cp<=unicode_js_1.CODE_POINTS.LATIN_SMALL_Z}__name(isAsciiLower,\"isAsciiLower\");function isAsciiLetter(cp){return isAsciiLower(cp)||isAsciiUpper(cp)}__name(isAsciiLetter,\"isAsciiLetter\");function isAsciiAlphaNumeric(cp){return isAsciiLetter(cp)||isAsciiDigit(cp)}__name(isAsciiAlphaNumeric,\"isAsciiAlphaNumeric\");function isAsciiUpperHexDigit(cp){return cp>=unicode_js_1.CODE_POINTS.LATIN_CAPITAL_A&&cp<=unicode_js_1.CODE_POINTS.LATIN_CAPITAL_F}__name(isAsciiUpperHexDigit,\"isAsciiUpperHexDigit\");function isAsciiLowerHexDigit(cp){return cp>=unicode_js_1.CODE_POINTS.LATIN_SMALL_A&&cp<=unicode_js_1.CODE_POINTS.LATIN_SMALL_F}__name(isAsciiLowerHexDigit,\"isAsciiLowerHexDigit\");function isAsciiHexDigit(cp){return isAsciiDigit(cp)||isAsciiUpperHexDigit(cp)||isAsciiLowerHexDigit(cp)}__name(isAsciiHexDigit,\"isAsciiHexDigit\");function toAsciiLower(cp){return cp+32}__name(toAsciiLower,\"toAsciiLower\");function isWhitespace(cp){return cp===unicode_js_1.CODE_POINTS.SPACE||cp===unicode_js_1.CODE_POINTS.LINE_FEED||cp===unicode_js_1.CODE_POINTS.TABULATION||cp===unicode_js_1.CODE_POINTS.FORM_FEED}__name(isWhitespace,\"isWhitespace\");function isEntityInAttributeInvalidEnd(nextCp){return nextCp===unicode_js_1.CODE_POINTS.EQUALS_SIGN||isAsciiAlphaNumeric(nextCp)}__name(isEntityInAttributeInvalidEnd,\"isEntityInAttributeInvalidEnd\");function isScriptDataDoubleEscapeSequenceEnd(cp){return isWhitespace(cp)||cp===unicode_js_1.CODE_POINTS.SOLIDUS||cp===unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN}__name(isScriptDataDoubleEscapeSequenceEnd,\"isScriptDataDoubleEscapeSequenceEnd\");class Tokenizer{static{__name(this,\"Tokenizer\")}constructor(options,handler){this.options=options;this.handler=handler;this.paused=false;this.inLoop=false;this.inForeignNode=false;this.lastStartTagName=\"\";this.active=false;this.state=State.DATA;this.returnState=State.DATA;this.charRefCode=-1;this.consumedAfterSnapshot=-1;this.currentCharacterToken=null;this.currentToken=null;this.currentAttr={name:\"\",value:\"\"};this.preprocessor=new preprocessor_js_1.Preprocessor(handler);this.currentLocation=this.getCurrentLocation(-1)}_err(code){var _a,_b;(_b=(_a=this.handler).onParseError)===null||_b===void 0?void 0:_b.call(_a,this.preprocessor.getError(code))}getCurrentLocation(offset){if(!this.options.sourceCodeLocationInfo){return null}return{startLine:this.preprocessor.line,startCol:this.preprocessor.col-offset,startOffset:this.preprocessor.offset-offset,endLine:-1,endCol:-1,endOffset:-1}}_runParsingLoop(){if(this.inLoop)return;this.inLoop=true;while(this.active&&!this.paused){this.consumedAfterSnapshot=0;const cp=this._consume();if(!this._ensureHibernation()){this._callState(cp)}}this.inLoop=false}pause(){this.paused=true}resume(writeCallback){if(!this.paused){throw new Error(\"Parser was already resumed\")}this.paused=false;if(this.inLoop)return;this._runParsingLoop();if(!this.paused){writeCallback===null||writeCallback===void 0?void 0:writeCallback()}}write(chunk,isLastChunk,writeCallback){this.active=true;this.preprocessor.write(chunk,isLastChunk);this._runParsingLoop();if(!this.paused){writeCallback===null||writeCallback===void 0?void 0:writeCallback()}}insertHtmlAtCurrentPos(chunk){this.active=true;this.preprocessor.insertHtmlAtCurrentPos(chunk);this._runParsingLoop()}_ensureHibernation(){if(this.preprocessor.endOfChunkHit){this._unconsume(this.consumedAfterSnapshot);this.active=false;return true}return false}_consume(){this.consumedAfterSnapshot++;return this.preprocessor.advance()}_unconsume(count){this.consumedAfterSnapshot-=count;this.preprocessor.retreat(count)}_reconsumeInState(state,cp){this.state=state;this._callState(cp)}_advanceBy(count){this.consumedAfterSnapshot+=count;for(let i=0;i<count;i++){this.preprocessor.advance()}}_consumeSequenceIfMatch(pattern,caseSensitive){if(this.preprocessor.startsWith(pattern,caseSensitive)){this._advanceBy(pattern.length-1);return true}return false}_createStartTagToken(){this.currentToken={type:token_js_1.TokenType.START_TAG,tagName:\"\",tagID:html_js_1.TAG_ID.UNKNOWN,selfClosing:false,ackSelfClosing:false,attrs:[],location:this.getCurrentLocation(1)}}_createEndTagToken(){this.currentToken={type:token_js_1.TokenType.END_TAG,tagName:\"\",tagID:html_js_1.TAG_ID.UNKNOWN,selfClosing:false,ackSelfClosing:false,attrs:[],location:this.getCurrentLocation(2)}}_createCommentToken(offset){this.currentToken={type:token_js_1.TokenType.COMMENT,data:\"\",location:this.getCurrentLocation(offset)}}_createDoctypeToken(initialName){this.currentToken={type:token_js_1.TokenType.DOCTYPE,name:initialName,forceQuirks:false,publicId:null,systemId:null,location:this.currentLocation}}_createCharacterToken(type,chars){this.currentCharacterToken={type,chars,location:this.currentLocation}}_createAttr(attrNameFirstCh){this.currentAttr={name:attrNameFirstCh,value:\"\"};this.currentLocation=this.getCurrentLocation(0)}_leaveAttrName(){var _a;var _b;const token=this.currentToken;if((0,token_js_1.getTokenAttr)(token,this.currentAttr.name)===null){token.attrs.push(this.currentAttr);if(token.location&&this.currentLocation){const attrLocations=(_a=(_b=token.location).attrs)!==null&&_a!==void 0?_a:_b.attrs=Object.create(null);attrLocations[this.currentAttr.name]=this.currentLocation;this._leaveAttrValue()}}else{this._err(error_codes_js_1.ERR.duplicateAttribute)}}_leaveAttrValue(){if(this.currentLocation){this.currentLocation.endLine=this.preprocessor.line;this.currentLocation.endCol=this.preprocessor.col;this.currentLocation.endOffset=this.preprocessor.offset}}prepareToken(ct){this._emitCurrentCharacterToken(ct.location);this.currentToken=null;if(ct.location){ct.location.endLine=this.preprocessor.line;ct.location.endCol=this.preprocessor.col+1;ct.location.endOffset=this.preprocessor.offset+1}this.currentLocation=this.getCurrentLocation(-1)}emitCurrentTagToken(){const ct=this.currentToken;this.prepareToken(ct);ct.tagID=(0,html_js_1.getTagID)(ct.tagName);if(ct.type===token_js_1.TokenType.START_TAG){this.lastStartTagName=ct.tagName;this.handler.onStartTag(ct)}else{if(ct.attrs.length>0){this._err(error_codes_js_1.ERR.endTagWithAttributes)}if(ct.selfClosing){this._err(error_codes_js_1.ERR.endTagWithTrailingSolidus)}this.handler.onEndTag(ct)}this.preprocessor.dropParsedChunk()}emitCurrentComment(ct){this.prepareToken(ct);this.handler.onComment(ct);this.preprocessor.dropParsedChunk()}emitCurrentDoctype(ct){this.prepareToken(ct);this.handler.onDoctype(ct);this.preprocessor.dropParsedChunk()}_emitCurrentCharacterToken(nextLocation){if(this.currentCharacterToken){if(nextLocation&&this.currentCharacterToken.location){this.currentCharacterToken.location.endLine=nextLocation.startLine;this.currentCharacterToken.location.endCol=nextLocation.startCol;this.currentCharacterToken.location.endOffset=nextLocation.startOffset}switch(this.currentCharacterToken.type){case token_js_1.TokenType.CHARACTER:{this.handler.onCharacter(this.currentCharacterToken);break}case token_js_1.TokenType.NULL_CHARACTER:{this.handler.onNullCharacter(this.currentCharacterToken);break}case token_js_1.TokenType.WHITESPACE_CHARACTER:{this.handler.onWhitespaceCharacter(this.currentCharacterToken);break}}this.currentCharacterToken=null}}_emitEOFToken(){const location=this.getCurrentLocation(0);if(location){location.endLine=location.startLine;location.endCol=location.startCol;location.endOffset=location.startOffset}this._emitCurrentCharacterToken(location);this.handler.onEof({type:token_js_1.TokenType.EOF,location});this.active=false}_appendCharToCurrentCharacterToken(type,ch){if(this.currentCharacterToken){if(this.currentCharacterToken.type!==type){this.currentLocation=this.getCurrentLocation(0);this._emitCurrentCharacterToken(this.currentLocation);this.preprocessor.dropParsedChunk()}else{this.currentCharacterToken.chars+=ch;return}}this._createCharacterToken(type,ch)}_emitCodePoint(cp){const type=isWhitespace(cp)?token_js_1.TokenType.WHITESPACE_CHARACTER:cp===unicode_js_1.CODE_POINTS.NULL?token_js_1.TokenType.NULL_CHARACTER:token_js_1.TokenType.CHARACTER;this._appendCharToCurrentCharacterToken(type,String.fromCodePoint(cp))}_emitChars(ch){this._appendCharToCurrentCharacterToken(token_js_1.TokenType.CHARACTER,ch)}_matchNamedCharacterReference(cp){let result=null;let excess=0;let withoutSemicolon=false;for(let i=0,current=decode_js_1.htmlDecodeTree[0];i>=0;cp=this._consume()){i=(0,decode_js_1.determineBranch)(decode_js_1.htmlDecodeTree,current,i+1,cp);if(i<0)break;excess+=1;current=decode_js_1.htmlDecodeTree[i];const masked=current&decode_js_1.BinTrieFlags.VALUE_LENGTH;if(masked){const valueLength=(masked>>14)-1;if(cp!==unicode_js_1.CODE_POINTS.SEMICOLON&&this._isCharacterReferenceInAttribute()&&isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))){result=[unicode_js_1.CODE_POINTS.AMPERSAND];i+=valueLength}else{result=valueLength===0?[decode_js_1.htmlDecodeTree[i]&~decode_js_1.BinTrieFlags.VALUE_LENGTH]:valueLength===1?[decode_js_1.htmlDecodeTree[++i]]:[decode_js_1.htmlDecodeTree[++i],decode_js_1.htmlDecodeTree[++i]];excess=0;withoutSemicolon=cp!==unicode_js_1.CODE_POINTS.SEMICOLON}if(valueLength===0){this._consume();break}}}this._unconsume(excess);if(withoutSemicolon&&!this.preprocessor.endOfChunkHit){this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference)}this._unconsume(1);return result}_isCharacterReferenceInAttribute(){return this.returnState===State.ATTRIBUTE_VALUE_DOUBLE_QUOTED||this.returnState===State.ATTRIBUTE_VALUE_SINGLE_QUOTED||this.returnState===State.ATTRIBUTE_VALUE_UNQUOTED}_flushCodePointConsumedAsCharacterReference(cp){if(this._isCharacterReferenceInAttribute()){this.currentAttr.value+=String.fromCodePoint(cp)}else{this._emitCodePoint(cp)}}_callState(cp){switch(this.state){case State.DATA:{this._stateData(cp);break}case State.RCDATA:{this._stateRcdata(cp);break}case State.RAWTEXT:{this._stateRawtext(cp);break}case State.SCRIPT_DATA:{this._stateScriptData(cp);break}case State.PLAINTEXT:{this._statePlaintext(cp);break}case State.TAG_OPEN:{this._stateTagOpen(cp);break}case State.END_TAG_OPEN:{this._stateEndTagOpen(cp);break}case State.TAG_NAME:{this._stateTagName(cp);break}case State.RCDATA_LESS_THAN_SIGN:{this._stateRcdataLessThanSign(cp);break}case State.RCDATA_END_TAG_OPEN:{this._stateRcdataEndTagOpen(cp);break}case State.RCDATA_END_TAG_NAME:{this._stateRcdataEndTagName(cp);break}case State.RAWTEXT_LESS_THAN_SIGN:{this._stateRawtextLessThanSign(cp);break}case State.RAWTEXT_END_TAG_OPEN:{this._stateRawtextEndTagOpen(cp);break}case State.RAWTEXT_END_TAG_NAME:{this._stateRawtextEndTagName(cp);break}case State.SCRIPT_DATA_LESS_THAN_SIGN:{this._stateScriptDataLessThanSign(cp);break}case State.SCRIPT_DATA_END_TAG_OPEN:{this._stateScriptDataEndTagOpen(cp);break}case State.SCRIPT_DATA_END_TAG_NAME:{this._stateScriptDataEndTagName(cp);break}case State.SCRIPT_DATA_ESCAPE_START:{this._stateScriptDataEscapeStart(cp);break}case State.SCRIPT_DATA_ESCAPE_START_DASH:{this._stateScriptDataEscapeStartDash(cp);break}case State.SCRIPT_DATA_ESCAPED:{this._stateScriptDataEscaped(cp);break}case State.SCRIPT_DATA_ESCAPED_DASH:{this._stateScriptDataEscapedDash(cp);break}case State.SCRIPT_DATA_ESCAPED_DASH_DASH:{this._stateScriptDataEscapedDashDash(cp);break}case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:{this._stateScriptDataEscapedLessThanSign(cp);break}case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:{this._stateScriptDataEscapedEndTagOpen(cp);break}case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME:{this._stateScriptDataEscapedEndTagName(cp);break}case State.SCRIPT_DATA_DOUBLE_ESCAPE_START:{this._stateScriptDataDoubleEscapeStart(cp);break}case State.SCRIPT_DATA_DOUBLE_ESCAPED:{this._stateScriptDataDoubleEscaped(cp);break}case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:{this._stateScriptDataDoubleEscapedDash(cp);break}case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:{this._stateScriptDataDoubleEscapedDashDash(cp);break}case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:{this._stateScriptDataDoubleEscapedLessThanSign(cp);break}case State.SCRIPT_DATA_DOUBLE_ESCAPE_END:{this._stateScriptDataDoubleEscapeEnd(cp);break}case State.BEFORE_ATTRIBUTE_NAME:{this._stateBeforeAttributeName(cp);break}case State.ATTRIBUTE_NAME:{this._stateAttributeName(cp);break}case State.AFTER_ATTRIBUTE_NAME:{this._stateAfterAttributeName(cp);break}case State.BEFORE_ATTRIBUTE_VALUE:{this._stateBeforeAttributeValue(cp);break}case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED:{this._stateAttributeValueDoubleQuoted(cp);break}case State.ATTRIBUTE_VALUE_SINGLE_QUOTED:{this._stateAttributeValueSingleQuoted(cp);break}case State.ATTRIBUTE_VALUE_UNQUOTED:{this._stateAttributeValueUnquoted(cp);break}case State.AFTER_ATTRIBUTE_VALUE_QUOTED:{this._stateAfterAttributeValueQuoted(cp);break}case State.SELF_CLOSING_START_TAG:{this._stateSelfClosingStartTag(cp);break}case State.BOGUS_COMMENT:{this._stateBogusComment(cp);break}case State.MARKUP_DECLARATION_OPEN:{this._stateMarkupDeclarationOpen(cp);break}case State.COMMENT_START:{this._stateCommentStart(cp);break}case State.COMMENT_START_DASH:{this._stateCommentStartDash(cp);break}case State.COMMENT:{this._stateComment(cp);break}case State.COMMENT_LESS_THAN_SIGN:{this._stateCommentLessThanSign(cp);break}case State.COMMENT_LESS_THAN_SIGN_BANG:{this._stateCommentLessThanSignBang(cp);break}case State.COMMENT_LESS_THAN_SIGN_BANG_DASH:{this._stateCommentLessThanSignBangDash(cp);break}case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:{this._stateCommentLessThanSignBangDashDash(cp);break}case State.COMMENT_END_DASH:{this._stateCommentEndDash(cp);break}case State.COMMENT_END:{this._stateCommentEnd(cp);break}case State.COMMENT_END_BANG:{this._stateCommentEndBang(cp);break}case State.DOCTYPE:{this._stateDoctype(cp);break}case State.BEFORE_DOCTYPE_NAME:{this._stateBeforeDoctypeName(cp);break}case State.DOCTYPE_NAME:{this._stateDoctypeName(cp);break}case State.AFTER_DOCTYPE_NAME:{this._stateAfterDoctypeName(cp);break}case State.AFTER_DOCTYPE_PUBLIC_KEYWORD:{this._stateAfterDoctypePublicKeyword(cp);break}case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:{this._stateBeforeDoctypePublicIdentifier(cp);break}case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:{this._stateDoctypePublicIdentifierDoubleQuoted(cp);break}case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:{this._stateDoctypePublicIdentifierSingleQuoted(cp);break}case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:{this._stateAfterDoctypePublicIdentifier(cp);break}case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:{this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);break}case State.AFTER_DOCTYPE_SYSTEM_KEYWORD:{this._stateAfterDoctypeSystemKeyword(cp);break}case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:{this._stateBeforeDoctypeSystemIdentifier(cp);break}case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:{this._stateDoctypeSystemIdentifierDoubleQuoted(cp);break}case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:{this._stateDoctypeSystemIdentifierSingleQuoted(cp);break}case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:{this._stateAfterDoctypeSystemIdentifier(cp);break}case State.BOGUS_DOCTYPE:{this._stateBogusDoctype(cp);break}case State.CDATA_SECTION:{this._stateCdataSection(cp);break}case State.CDATA_SECTION_BRACKET:{this._stateCdataSectionBracket(cp);break}case State.CDATA_SECTION_END:{this._stateCdataSectionEnd(cp);break}case State.CHARACTER_REFERENCE:{this._stateCharacterReference(cp);break}case State.NAMED_CHARACTER_REFERENCE:{this._stateNamedCharacterReference(cp);break}case State.AMBIGUOUS_AMPERSAND:{this._stateAmbiguousAmpersand(cp);break}case State.NUMERIC_CHARACTER_REFERENCE:{this._stateNumericCharacterReference(cp);break}case State.HEXADEMICAL_CHARACTER_REFERENCE_START:{this._stateHexademicalCharacterReferenceStart(cp);break}case State.HEXADEMICAL_CHARACTER_REFERENCE:{this._stateHexademicalCharacterReference(cp);break}case State.DECIMAL_CHARACTER_REFERENCE:{this._stateDecimalCharacterReference(cp);break}case State.NUMERIC_CHARACTER_REFERENCE_END:{this._stateNumericCharacterReferenceEnd(cp);break}default:{throw new Error(\"Unknown state\")}}}_stateData(cp){switch(cp){case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.TAG_OPEN;break}case unicode_js_1.CODE_POINTS.AMPERSAND:{this.returnState=State.DATA;this.state=State.CHARACTER_REFERENCE;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this._emitCodePoint(cp);break}case unicode_js_1.CODE_POINTS.EOF:{this._emitEOFToken();break}default:{this._emitCodePoint(cp)}}}_stateRcdata(cp){switch(cp){case unicode_js_1.CODE_POINTS.AMPERSAND:{this.returnState=State.RCDATA;this.state=State.CHARACTER_REFERENCE;break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.RCDATA_LESS_THAN_SIGN;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._emitEOFToken();break}default:{this._emitCodePoint(cp)}}}_stateRawtext(cp){switch(cp){case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.RAWTEXT_LESS_THAN_SIGN;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._emitEOFToken();break}default:{this._emitCodePoint(cp)}}}_stateScriptData(cp){switch(cp){case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.SCRIPT_DATA_LESS_THAN_SIGN;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._emitEOFToken();break}default:{this._emitCodePoint(cp)}}}_statePlaintext(cp){switch(cp){case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._emitEOFToken();break}default:{this._emitCodePoint(cp)}}}_stateTagOpen(cp){if(isAsciiLetter(cp)){this._createStartTagToken();this.state=State.TAG_NAME;this._stateTagName(cp)}else switch(cp){case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK:{this.state=State.MARKUP_DECLARATION_OPEN;break}case unicode_js_1.CODE_POINTS.SOLIDUS:{this.state=State.END_TAG_OPEN;break}case unicode_js_1.CODE_POINTS.QUESTION_MARK:{this._err(error_codes_js_1.ERR.unexpectedQuestionMarkInsteadOfTagName);this._createCommentToken(1);this.state=State.BOGUS_COMMENT;this._stateBogusComment(cp);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofBeforeTagName);this._emitChars(\"<\");this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.invalidFirstCharacterOfTagName);this._emitChars(\"<\");this.state=State.DATA;this._stateData(cp)}}}_stateEndTagOpen(cp){if(isAsciiLetter(cp)){this._createEndTagToken();this.state=State.TAG_NAME;this._stateTagName(cp)}else switch(cp){case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.missingEndTagName);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofBeforeTagName);this._emitChars(\"</\");this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.invalidFirstCharacterOfTagName);this._createCommentToken(2);this.state=State.BOGUS_COMMENT;this._stateBogusComment(cp)}}}_stateTagName(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this.state=State.BEFORE_ATTRIBUTE_NAME;break}case unicode_js_1.CODE_POINTS.SOLIDUS:{this.state=State.SELF_CLOSING_START_TAG;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.DATA;this.emitCurrentTagToken();break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);token.tagName+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInTag);this._emitEOFToken();break}default:{token.tagName+=String.fromCodePoint(isAsciiUpper(cp)?toAsciiLower(cp):cp)}}}_stateRcdataLessThanSign(cp){if(cp===unicode_js_1.CODE_POINTS.SOLIDUS){this.state=State.RCDATA_END_TAG_OPEN}else{this._emitChars(\"<\");this.state=State.RCDATA;this._stateRcdata(cp)}}_stateRcdataEndTagOpen(cp){if(isAsciiLetter(cp)){this.state=State.RCDATA_END_TAG_NAME;this._stateRcdataEndTagName(cp)}else{this._emitChars(\"</\");this.state=State.RCDATA;this._stateRcdata(cp)}}handleSpecialEndTag(_cp){if(!this.preprocessor.startsWith(this.lastStartTagName,false)){return!this._ensureHibernation()}this._createEndTagToken();const token=this.currentToken;token.tagName=this.lastStartTagName;const cp=this.preprocessor.peek(this.lastStartTagName.length);switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this._advanceBy(this.lastStartTagName.length);this.state=State.BEFORE_ATTRIBUTE_NAME;return false}case unicode_js_1.CODE_POINTS.SOLIDUS:{this._advanceBy(this.lastStartTagName.length);this.state=State.SELF_CLOSING_START_TAG;return false}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._advanceBy(this.lastStartTagName.length);this.emitCurrentTagToken();this.state=State.DATA;return false}default:{return!this._ensureHibernation()}}}_stateRcdataEndTagName(cp){if(this.handleSpecialEndTag(cp)){this._emitChars(\"</\");this.state=State.RCDATA;this._stateRcdata(cp)}}_stateRawtextLessThanSign(cp){if(cp===unicode_js_1.CODE_POINTS.SOLIDUS){this.state=State.RAWTEXT_END_TAG_OPEN}else{this._emitChars(\"<\");this.state=State.RAWTEXT;this._stateRawtext(cp)}}_stateRawtextEndTagOpen(cp){if(isAsciiLetter(cp)){this.state=State.RAWTEXT_END_TAG_NAME;this._stateRawtextEndTagName(cp)}else{this._emitChars(\"</\");this.state=State.RAWTEXT;this._stateRawtext(cp)}}_stateRawtextEndTagName(cp){if(this.handleSpecialEndTag(cp)){this._emitChars(\"</\");this.state=State.RAWTEXT;this._stateRawtext(cp)}}_stateScriptDataLessThanSign(cp){switch(cp){case unicode_js_1.CODE_POINTS.SOLIDUS:{this.state=State.SCRIPT_DATA_END_TAG_OPEN;break}case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK:{this.state=State.SCRIPT_DATA_ESCAPE_START;this._emitChars(\"<!\");break}default:{this._emitChars(\"<\");this.state=State.SCRIPT_DATA;this._stateScriptData(cp)}}}_stateScriptDataEndTagOpen(cp){if(isAsciiLetter(cp)){this.state=State.SCRIPT_DATA_END_TAG_NAME;this._stateScriptDataEndTagName(cp)}else{this._emitChars(\"</\");this.state=State.SCRIPT_DATA;this._stateScriptData(cp)}}_stateScriptDataEndTagName(cp){if(this.handleSpecialEndTag(cp)){this._emitChars(\"</\");this.state=State.SCRIPT_DATA;this._stateScriptData(cp)}}_stateScriptDataEscapeStart(cp){if(cp===unicode_js_1.CODE_POINTS.HYPHEN_MINUS){this.state=State.SCRIPT_DATA_ESCAPE_START_DASH;this._emitChars(\"-\")}else{this.state=State.SCRIPT_DATA;this._stateScriptData(cp)}}_stateScriptDataEscapeStartDash(cp){if(cp===unicode_js_1.CODE_POINTS.HYPHEN_MINUS){this.state=State.SCRIPT_DATA_ESCAPED_DASH_DASH;this._emitChars(\"-\")}else{this.state=State.SCRIPT_DATA;this._stateScriptData(cp)}}_stateScriptDataEscaped(cp){switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this.state=State.SCRIPT_DATA_ESCAPED_DASH;this._emitChars(\"-\");break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break}default:{this._emitCodePoint(cp)}}}_stateScriptDataEscapedDash(cp){switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this.state=State.SCRIPT_DATA_ESCAPED_DASH_DASH;this._emitChars(\"-\");break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this.state=State.SCRIPT_DATA_ESCAPED;this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break}default:{this.state=State.SCRIPT_DATA_ESCAPED;this._emitCodePoint(cp)}}}_stateScriptDataEscapedDashDash(cp){switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this._emitChars(\"-\");break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.SCRIPT_DATA;this._emitChars(\">\");break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this.state=State.SCRIPT_DATA_ESCAPED;this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break}default:{this.state=State.SCRIPT_DATA_ESCAPED;this._emitCodePoint(cp)}}}_stateScriptDataEscapedLessThanSign(cp){if(cp===unicode_js_1.CODE_POINTS.SOLIDUS){this.state=State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN}else if(isAsciiLetter(cp)){this._emitChars(\"<\");this.state=State.SCRIPT_DATA_DOUBLE_ESCAPE_START;this._stateScriptDataDoubleEscapeStart(cp)}else{this._emitChars(\"<\");this.state=State.SCRIPT_DATA_ESCAPED;this._stateScriptDataEscaped(cp)}}_stateScriptDataEscapedEndTagOpen(cp){if(isAsciiLetter(cp)){this.state=State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;this._stateScriptDataEscapedEndTagName(cp)}else{this._emitChars(\"</\");this.state=State.SCRIPT_DATA_ESCAPED;this._stateScriptDataEscaped(cp)}}_stateScriptDataEscapedEndTagName(cp){if(this.handleSpecialEndTag(cp)){this._emitChars(\"</\");this.state=State.SCRIPT_DATA_ESCAPED;this._stateScriptDataEscaped(cp)}}_stateScriptDataDoubleEscapeStart(cp){if(this.preprocessor.startsWith(unicode_js_1.SEQUENCES.SCRIPT,false)&&isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(unicode_js_1.SEQUENCES.SCRIPT.length))){this._emitCodePoint(cp);for(let i=0;i<unicode_js_1.SEQUENCES.SCRIPT.length;i++){this._emitCodePoint(this._consume())}this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED}else if(!this._ensureHibernation()){this.state=State.SCRIPT_DATA_ESCAPED;this._stateScriptDataEscaped(cp)}}_stateScriptDataDoubleEscaped(cp){switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;this._emitChars(\"-\");break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;this._emitChars(\"<\");break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break}default:{this._emitCodePoint(cp)}}}_stateScriptDataDoubleEscapedDash(cp){switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;this._emitChars(\"-\");break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;this._emitChars(\"<\");break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED;this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break}default:{this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED;this._emitCodePoint(cp)}}}_stateScriptDataDoubleEscapedDashDash(cp){switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this._emitChars(\"-\");break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;this._emitChars(\"<\");break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.SCRIPT_DATA;this._emitChars(\">\");break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED;this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break}default:{this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED;this._emitCodePoint(cp)}}}_stateScriptDataDoubleEscapedLessThanSign(cp){if(cp===unicode_js_1.CODE_POINTS.SOLIDUS){this.state=State.SCRIPT_DATA_DOUBLE_ESCAPE_END;this._emitChars(\"/\")}else{this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED;this._stateScriptDataDoubleEscaped(cp)}}_stateScriptDataDoubleEscapeEnd(cp){if(this.preprocessor.startsWith(unicode_js_1.SEQUENCES.SCRIPT,false)&&isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(unicode_js_1.SEQUENCES.SCRIPT.length))){this._emitCodePoint(cp);for(let i=0;i<unicode_js_1.SEQUENCES.SCRIPT.length;i++){this._emitCodePoint(this._consume())}this.state=State.SCRIPT_DATA_ESCAPED}else if(!this._ensureHibernation()){this.state=State.SCRIPT_DATA_DOUBLE_ESCAPED;this._stateScriptDataDoubleEscaped(cp)}}_stateBeforeAttributeName(cp){switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.SOLIDUS:case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:case unicode_js_1.CODE_POINTS.EOF:{this.state=State.AFTER_ATTRIBUTE_NAME;this._stateAfterAttributeName(cp);break}case unicode_js_1.CODE_POINTS.EQUALS_SIGN:{this._err(error_codes_js_1.ERR.unexpectedEqualsSignBeforeAttributeName);this._createAttr(\"=\");this.state=State.ATTRIBUTE_NAME;break}default:{this._createAttr(\"\");this.state=State.ATTRIBUTE_NAME;this._stateAttributeName(cp)}}}_stateAttributeName(cp){switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:case unicode_js_1.CODE_POINTS.SOLIDUS:case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:case unicode_js_1.CODE_POINTS.EOF:{this._leaveAttrName();this.state=State.AFTER_ATTRIBUTE_NAME;this._stateAfterAttributeName(cp);break}case unicode_js_1.CODE_POINTS.EQUALS_SIGN:{this._leaveAttrName();this.state=State.BEFORE_ATTRIBUTE_VALUE;break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:case unicode_js_1.CODE_POINTS.APOSTROPHE:case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{this._err(error_codes_js_1.ERR.unexpectedCharacterInAttributeName);this.currentAttr.name+=String.fromCodePoint(cp);break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this.currentAttr.name+=unicode_js_1.REPLACEMENT_CHARACTER;break}default:{this.currentAttr.name+=String.fromCodePoint(isAsciiUpper(cp)?toAsciiLower(cp):cp)}}}_stateAfterAttributeName(cp){switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.SOLIDUS:{this.state=State.SELF_CLOSING_START_TAG;break}case unicode_js_1.CODE_POINTS.EQUALS_SIGN:{this.state=State.BEFORE_ATTRIBUTE_VALUE;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.DATA;this.emitCurrentTagToken();break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInTag);this._emitEOFToken();break}default:{this._createAttr(\"\");this.state=State.ATTRIBUTE_NAME;this._stateAttributeName(cp)}}}_stateBeforeAttributeValue(cp){switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{this.state=State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;break}case unicode_js_1.CODE_POINTS.APOSTROPHE:{this.state=State.ATTRIBUTE_VALUE_SINGLE_QUOTED;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.missingAttributeValue);this.state=State.DATA;this.emitCurrentTagToken();break}default:{this.state=State.ATTRIBUTE_VALUE_UNQUOTED;this._stateAttributeValueUnquoted(cp)}}}_stateAttributeValueDoubleQuoted(cp){switch(cp){case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{this.state=State.AFTER_ATTRIBUTE_VALUE_QUOTED;break}case unicode_js_1.CODE_POINTS.AMPERSAND:{this.returnState=State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;this.state=State.CHARACTER_REFERENCE;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this.currentAttr.value+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInTag);this._emitEOFToken();break}default:{this.currentAttr.value+=String.fromCodePoint(cp)}}}_stateAttributeValueSingleQuoted(cp){switch(cp){case unicode_js_1.CODE_POINTS.APOSTROPHE:{this.state=State.AFTER_ATTRIBUTE_VALUE_QUOTED;break}case unicode_js_1.CODE_POINTS.AMPERSAND:{this.returnState=State.ATTRIBUTE_VALUE_SINGLE_QUOTED;this.state=State.CHARACTER_REFERENCE;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this.currentAttr.value+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInTag);this._emitEOFToken();break}default:{this.currentAttr.value+=String.fromCodePoint(cp)}}}_stateAttributeValueUnquoted(cp){switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this._leaveAttrValue();this.state=State.BEFORE_ATTRIBUTE_NAME;break}case unicode_js_1.CODE_POINTS.AMPERSAND:{this.returnState=State.ATTRIBUTE_VALUE_UNQUOTED;this.state=State.CHARACTER_REFERENCE;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._leaveAttrValue();this.state=State.DATA;this.emitCurrentTagToken();break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this.currentAttr.value+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:case unicode_js_1.CODE_POINTS.APOSTROPHE:case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:case unicode_js_1.CODE_POINTS.EQUALS_SIGN:case unicode_js_1.CODE_POINTS.GRAVE_ACCENT:{this._err(error_codes_js_1.ERR.unexpectedCharacterInUnquotedAttributeValue);this.currentAttr.value+=String.fromCodePoint(cp);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInTag);this._emitEOFToken();break}default:{this.currentAttr.value+=String.fromCodePoint(cp)}}}_stateAfterAttributeValueQuoted(cp){switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this._leaveAttrValue();this.state=State.BEFORE_ATTRIBUTE_NAME;break}case unicode_js_1.CODE_POINTS.SOLIDUS:{this._leaveAttrValue();this.state=State.SELF_CLOSING_START_TAG;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._leaveAttrValue();this.state=State.DATA;this.emitCurrentTagToken();break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInTag);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.missingWhitespaceBetweenAttributes);this.state=State.BEFORE_ATTRIBUTE_NAME;this._stateBeforeAttributeName(cp)}}}_stateSelfClosingStartTag(cp){switch(cp){case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{const token=this.currentToken;token.selfClosing=true;this.state=State.DATA;this.emitCurrentTagToken();break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInTag);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.unexpectedSolidusInTag);this.state=State.BEFORE_ATTRIBUTE_NAME;this._stateBeforeAttributeName(cp)}}}_stateBogusComment(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.DATA;this.emitCurrentComment(token);break}case unicode_js_1.CODE_POINTS.EOF:{this.emitCurrentComment(token);this._emitEOFToken();break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);token.data+=unicode_js_1.REPLACEMENT_CHARACTER;break}default:{token.data+=String.fromCodePoint(cp)}}}_stateMarkupDeclarationOpen(cp){if(this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.DASH_DASH,true)){this._createCommentToken(unicode_js_1.SEQUENCES.DASH_DASH.length+1);this.state=State.COMMENT_START}else if(this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.DOCTYPE,false)){this.currentLocation=this.getCurrentLocation(unicode_js_1.SEQUENCES.DOCTYPE.length+1);this.state=State.DOCTYPE}else if(this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.CDATA_START,true)){if(this.inForeignNode){this.state=State.CDATA_SECTION}else{this._err(error_codes_js_1.ERR.cdataInHtmlContent);this._createCommentToken(unicode_js_1.SEQUENCES.CDATA_START.length+1);this.currentToken.data=\"[CDATA[\";this.state=State.BOGUS_COMMENT}}else if(!this._ensureHibernation()){this._err(error_codes_js_1.ERR.incorrectlyOpenedComment);this._createCommentToken(2);this.state=State.BOGUS_COMMENT;this._stateBogusComment(cp)}}_stateCommentStart(cp){switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this.state=State.COMMENT_START_DASH;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.abruptClosingOfEmptyComment);this.state=State.DATA;const token=this.currentToken;this.emitCurrentComment(token);break}default:{this.state=State.COMMENT;this._stateComment(cp)}}}_stateCommentStartDash(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this.state=State.COMMENT_END;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.abruptClosingOfEmptyComment);this.state=State.DATA;this.emitCurrentComment(token);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break}default:{token.data+=\"-\";this.state=State.COMMENT;this._stateComment(cp)}}}_stateComment(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this.state=State.COMMENT_END_DASH;break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{token.data+=\"<\";this.state=State.COMMENT_LESS_THAN_SIGN;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);token.data+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break}default:{token.data+=String.fromCodePoint(cp)}}}_stateCommentLessThanSign(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK:{token.data+=\"!\";this.state=State.COMMENT_LESS_THAN_SIGN_BANG;break}case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:{token.data+=\"<\";break}default:{this.state=State.COMMENT;this._stateComment(cp)}}}_stateCommentLessThanSignBang(cp){if(cp===unicode_js_1.CODE_POINTS.HYPHEN_MINUS){this.state=State.COMMENT_LESS_THAN_SIGN_BANG_DASH}else{this.state=State.COMMENT;this._stateComment(cp)}}_stateCommentLessThanSignBangDash(cp){if(cp===unicode_js_1.CODE_POINTS.HYPHEN_MINUS){this.state=State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH}else{this.state=State.COMMENT_END_DASH;this._stateCommentEndDash(cp)}}_stateCommentLessThanSignBangDashDash(cp){if(cp!==unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN&&cp!==unicode_js_1.CODE_POINTS.EOF){this._err(error_codes_js_1.ERR.nestedComment)}this.state=State.COMMENT_END;this._stateCommentEnd(cp)}_stateCommentEndDash(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{this.state=State.COMMENT_END;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break}default:{token.data+=\"-\";this.state=State.COMMENT;this._stateComment(cp)}}}_stateCommentEnd(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.DATA;this.emitCurrentComment(token);break}case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK:{this.state=State.COMMENT_END_BANG;break}case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{token.data+=\"-\";break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break}default:{token.data+=\"--\";this.state=State.COMMENT;this._stateComment(cp)}}}_stateCommentEndBang(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:{token.data+=\"--!\";this.state=State.COMMENT_END_DASH;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.incorrectlyClosedComment);this.state=State.DATA;this.emitCurrentComment(token);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break}default:{token.data+=\"--!\";this.state=State.COMMENT;this._stateComment(cp)}}}_stateDoctype(cp){switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this.state=State.BEFORE_DOCTYPE_NAME;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.BEFORE_DOCTYPE_NAME;this._stateBeforeDoctypeName(cp);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);this._createDoctypeToken(null);const token=this.currentToken;token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.missingWhitespaceBeforeDoctypeName);this.state=State.BEFORE_DOCTYPE_NAME;this._stateBeforeDoctypeName(cp)}}}_stateBeforeDoctypeName(cp){if(isAsciiUpper(cp)){this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));this.state=State.DOCTYPE_NAME}else switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);this._createDoctypeToken(unicode_js_1.REPLACEMENT_CHARACTER);this.state=State.DOCTYPE_NAME;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.missingDoctypeName);this._createDoctypeToken(null);const token=this.currentToken;token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);this._createDoctypeToken(null);const token=this.currentToken;token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._createDoctypeToken(String.fromCodePoint(cp));this.state=State.DOCTYPE_NAME}}}_stateDoctypeName(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this.state=State.AFTER_DOCTYPE_NAME;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.DATA;this.emitCurrentDoctype(token);break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);token.name+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{token.name+=String.fromCodePoint(isAsciiUpper(cp)?toAsciiLower(cp):cp)}}}_stateAfterDoctypeName(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.DATA;this.emitCurrentDoctype(token);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{if(this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.PUBLIC,false)){this.state=State.AFTER_DOCTYPE_PUBLIC_KEYWORD}else if(this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.SYSTEM,false)){this.state=State.AFTER_DOCTYPE_SYSTEM_KEYWORD}else if(!this._ensureHibernation()){this._err(error_codes_js_1.ERR.invalidCharacterSequenceAfterDoctypeName);token.forceQuirks=true;this.state=State.BOGUS_DOCTYPE;this._stateBogusDoctype(cp)}}}}_stateAfterDoctypePublicKeyword(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this.state=State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypePublicKeyword);token.publicId=\"\";this.state=State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;break}case unicode_js_1.CODE_POINTS.APOSTROPHE:{this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypePublicKeyword);token.publicId=\"\";this.state=State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.missingDoctypePublicIdentifier);token.forceQuirks=true;this.state=State.DATA;this.emitCurrentDoctype(token);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypePublicIdentifier);token.forceQuirks=true;this.state=State.BOGUS_DOCTYPE;this._stateBogusDoctype(cp)}}}_stateBeforeDoctypePublicIdentifier(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{token.publicId=\"\";this.state=State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;break}case unicode_js_1.CODE_POINTS.APOSTROPHE:{token.publicId=\"\";this.state=State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.missingDoctypePublicIdentifier);token.forceQuirks=true;this.state=State.DATA;this.emitCurrentDoctype(token);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypePublicIdentifier);token.forceQuirks=true;this.state=State.BOGUS_DOCTYPE;this._stateBogusDoctype(cp)}}}_stateDoctypePublicIdentifierDoubleQuoted(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{this.state=State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);token.publicId+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.abruptDoctypePublicIdentifier);token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{token.publicId+=String.fromCodePoint(cp)}}}_stateDoctypePublicIdentifierSingleQuoted(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.APOSTROPHE:{this.state=State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);token.publicId+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.abruptDoctypePublicIdentifier);token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{token.publicId+=String.fromCodePoint(cp)}}}_stateAfterDoctypePublicIdentifier(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this.state=State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.DATA;this.emitCurrentDoctype(token);break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{this._err(error_codes_js_1.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);token.systemId=\"\";this.state=State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break}case unicode_js_1.CODE_POINTS.APOSTROPHE:{this._err(error_codes_js_1.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);token.systemId=\"\";this.state=State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State.BOGUS_DOCTYPE;this._stateBogusDoctype(cp)}}}_stateBetweenDoctypePublicAndSystemIdentifiers(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.emitCurrentDoctype(token);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{token.systemId=\"\";this.state=State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break}case unicode_js_1.CODE_POINTS.APOSTROPHE:{token.systemId=\"\";this.state=State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State.BOGUS_DOCTYPE;this._stateBogusDoctype(cp)}}}_stateAfterDoctypeSystemKeyword(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{this.state=State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypeSystemKeyword);token.systemId=\"\";this.state=State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break}case unicode_js_1.CODE_POINTS.APOSTROPHE:{this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypeSystemKeyword);token.systemId=\"\";this.state=State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.missingDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State.DATA;this.emitCurrentDoctype(token);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State.BOGUS_DOCTYPE;this._stateBogusDoctype(cp)}}}_stateBeforeDoctypeSystemIdentifier(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{token.systemId=\"\";this.state=State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break}case unicode_js_1.CODE_POINTS.APOSTROPHE:{token.systemId=\"\";this.state=State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.missingDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State.DATA;this.emitCurrentDoctype(token);break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State.BOGUS_DOCTYPE;this._stateBogusDoctype(cp)}}}_stateDoctypeSystemIdentifierDoubleQuoted(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.QUOTATION_MARK:{this.state=State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);token.systemId+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.abruptDoctypeSystemIdentifier);token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{token.systemId+=String.fromCodePoint(cp)}}}_stateDoctypeSystemIdentifierSingleQuoted(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.APOSTROPHE:{this.state=State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);token.systemId+=unicode_js_1.REPLACEMENT_CHARACTER;break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this._err(error_codes_js_1.ERR.abruptDoctypeSystemIdentifier);token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{token.systemId+=String.fromCodePoint(cp)}}}_stateAfterDoctypeSystemIdentifier(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.SPACE:case unicode_js_1.CODE_POINTS.LINE_FEED:case unicode_js_1.CODE_POINTS.TABULATION:case unicode_js_1.CODE_POINTS.FORM_FEED:{break}case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.emitCurrentDoctype(token);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break}default:{this._err(error_codes_js_1.ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);this.state=State.BOGUS_DOCTYPE;this._stateBogusDoctype(cp)}}}_stateBogusDoctype(cp){const token=this.currentToken;switch(cp){case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.emitCurrentDoctype(token);this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.NULL:{this._err(error_codes_js_1.ERR.unexpectedNullCharacter);break}case unicode_js_1.CODE_POINTS.EOF:{this.emitCurrentDoctype(token);this._emitEOFToken();break}default:}}_stateCdataSection(cp){switch(cp){case unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET:{this.state=State.CDATA_SECTION_BRACKET;break}case unicode_js_1.CODE_POINTS.EOF:{this._err(error_codes_js_1.ERR.eofInCdata);this._emitEOFToken();break}default:{this._emitCodePoint(cp)}}}_stateCdataSectionBracket(cp){if(cp===unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET){this.state=State.CDATA_SECTION_END}else{this._emitChars(\"]\");this.state=State.CDATA_SECTION;this._stateCdataSection(cp)}}_stateCdataSectionEnd(cp){switch(cp){case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:{this.state=State.DATA;break}case unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET:{this._emitChars(\"]\");break}default:{this._emitChars(\"]]\");this.state=State.CDATA_SECTION;this._stateCdataSection(cp)}}}_stateCharacterReference(cp){if(cp===unicode_js_1.CODE_POINTS.NUMBER_SIGN){this.state=State.NUMERIC_CHARACTER_REFERENCE}else if(isAsciiAlphaNumeric(cp)){this.state=State.NAMED_CHARACTER_REFERENCE;this._stateNamedCharacterReference(cp)}else{this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND);this._reconsumeInState(this.returnState,cp)}}_stateNamedCharacterReference(cp){const matchResult=this._matchNamedCharacterReference(cp);if(this._ensureHibernation()){}else if(matchResult){for(let i=0;i<matchResult.length;i++){this._flushCodePointConsumedAsCharacterReference(matchResult[i])}this.state=this.returnState}else{this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND);this.state=State.AMBIGUOUS_AMPERSAND}}_stateAmbiguousAmpersand(cp){if(isAsciiAlphaNumeric(cp)){this._flushCodePointConsumedAsCharacterReference(cp)}else{if(cp===unicode_js_1.CODE_POINTS.SEMICOLON){this._err(error_codes_js_1.ERR.unknownNamedCharacterReference)}this._reconsumeInState(this.returnState,cp)}}_stateNumericCharacterReference(cp){this.charRefCode=0;if(cp===unicode_js_1.CODE_POINTS.LATIN_SMALL_X||cp===unicode_js_1.CODE_POINTS.LATIN_CAPITAL_X){this.state=State.HEXADEMICAL_CHARACTER_REFERENCE_START}else if(isAsciiDigit(cp)){this.state=State.DECIMAL_CHARACTER_REFERENCE;this._stateDecimalCharacterReference(cp)}else{this._err(error_codes_js_1.ERR.absenceOfDigitsInNumericCharacterReference);this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND);this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.NUMBER_SIGN);this._reconsumeInState(this.returnState,cp)}}_stateHexademicalCharacterReferenceStart(cp){if(isAsciiHexDigit(cp)){this.state=State.HEXADEMICAL_CHARACTER_REFERENCE;this._stateHexademicalCharacterReference(cp)}else{this._err(error_codes_js_1.ERR.absenceOfDigitsInNumericCharacterReference);this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND);this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.NUMBER_SIGN);this._unconsume(2);this.state=this.returnState}}_stateHexademicalCharacterReference(cp){if(isAsciiUpperHexDigit(cp)){this.charRefCode=this.charRefCode*16+cp-55}else if(isAsciiLowerHexDigit(cp)){this.charRefCode=this.charRefCode*16+cp-87}else if(isAsciiDigit(cp)){this.charRefCode=this.charRefCode*16+cp-48}else if(cp===unicode_js_1.CODE_POINTS.SEMICOLON){this.state=State.NUMERIC_CHARACTER_REFERENCE_END}else{this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference);this.state=State.NUMERIC_CHARACTER_REFERENCE_END;this._stateNumericCharacterReferenceEnd(cp)}}_stateDecimalCharacterReference(cp){if(isAsciiDigit(cp)){this.charRefCode=this.charRefCode*10+cp-48}else if(cp===unicode_js_1.CODE_POINTS.SEMICOLON){this.state=State.NUMERIC_CHARACTER_REFERENCE_END}else{this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference);this.state=State.NUMERIC_CHARACTER_REFERENCE_END;this._stateNumericCharacterReferenceEnd(cp)}}_stateNumericCharacterReferenceEnd(cp){if(this.charRefCode===unicode_js_1.CODE_POINTS.NULL){this._err(error_codes_js_1.ERR.nullCharacterReference);this.charRefCode=unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER}else if(this.charRefCode>1114111){this._err(error_codes_js_1.ERR.characterReferenceOutsideUnicodeRange);this.charRefCode=unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER}else if((0,unicode_js_1.isSurrogate)(this.charRefCode)){this._err(error_codes_js_1.ERR.surrogateCharacterReference);this.charRefCode=unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER}else if((0,unicode_js_1.isUndefinedCodePoint)(this.charRefCode)){this._err(error_codes_js_1.ERR.noncharacterCharacterReference)}else if((0,unicode_js_1.isControlCodePoint)(this.charRefCode)||this.charRefCode===unicode_js_1.CODE_POINTS.CARRIAGE_RETURN){this._err(error_codes_js_1.ERR.controlCharacterReference);const replacement=C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);if(replacement!==void 0){this.charRefCode=replacement}}this._flushCodePointConsumedAsCharacterReference(this.charRefCode);this._reconsumeInState(this.returnState,cp)}}exports.Tokenizer=Tokenizer;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["State"],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/cjs/tokenizer/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tokenizer = exports.TokenizerMode = void 0;\nconst preprocessor_js_1 = require(\"./preprocessor.js\");\nconst unicode_js_1 = require(\"../common/unicode.js\");\nconst token_js_1 = require(\"../common/token.js\");\nconst decode_js_1 = require(\"entities/lib/decode.js\");\nconst error_codes_js_1 = require(\"../common/error-codes.js\");\nconst html_js_1 = require(\"../common/html.js\");\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexports.TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= unicode_js_1.CODE_POINTS.DIGIT_0 && cp <= unicode_js_1.CODE_POINTS.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= unicode_js_1.CODE_POINTS.LATIN_CAPITAL_A && cp <= unicode_js_1.CODE_POINTS.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= unicode_js_1.CODE_POINTS.LATIN_SMALL_A && cp <= unicode_js_1.CODE_POINTS.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= unicode_js_1.CODE_POINTS.LATIN_CAPITAL_A && cp <= unicode_js_1.CODE_POINTS.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= unicode_js_1.CODE_POINTS.LATIN_SMALL_A && cp <= unicode_js_1.CODE_POINTS.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === unicode_js_1.CODE_POINTS.SPACE || cp === unicode_js_1.CODE_POINTS.LINE_FEED || cp === unicode_js_1.CODE_POINTS.TABULATION || cp === unicode_js_1.CODE_POINTS.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === unicode_js_1.CODE_POINTS.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === unicode_js_1.CODE_POINTS.SOLIDUS || cp === unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN;\n}\n//Tokenizer\nclass Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new preprocessor_js_1.Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: token_js_1.TokenType.START_TAG,\n            tagName: '',\n            tagID: html_js_1.TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: token_js_1.TokenType.END_TAG,\n            tagName: '',\n            tagID: html_js_1.TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: token_js_1.TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: token_js_1.TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if ((0, token_js_1.getTokenAttr)(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(error_codes_js_1.ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = (0, html_js_1.getTagID)(ct.tagName);\n        if (ct.type === token_js_1.TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(error_codes_js_1.ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(error_codes_js_1.ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case token_js_1.TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case token_js_1.TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case token_js_1.TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: token_js_1.TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? token_js_1.TokenType.WHITESPACE_CHARACTER\n            : cp === unicode_js_1.CODE_POINTS.NULL\n                ? token_js_1.TokenType.NULL_CHARACTER\n                : token_js_1.TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(token_js_1.TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = decode_js_1.htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = (0, decode_js_1.determineBranch)(decode_js_1.htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = decode_js_1.htmlDecodeTree[i];\n            const masked = current & decode_js_1.BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== unicode_js_1.CODE_POINTS.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [unicode_js_1.CODE_POINTS.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [decode_js_1.htmlDecodeTree[i] & ~decode_js_1.BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [decode_js_1.htmlDecodeTree[++i]]\n                                : [decode_js_1.htmlDecodeTree[++i], decode_js_1.htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== unicode_js_1.CODE_POINTS.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case unicode_js_1.CODE_POINTS.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case unicode_js_1.CODE_POINTS.QUESTION_MARK: {\n                    this._err(error_codes_js_1.ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case unicode_js_1.CODE_POINTS.EOF: {\n                    this._err(error_codes_js_1.ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(error_codes_js_1.ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                    this._err(error_codes_js_1.ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case unicode_js_1.CODE_POINTS.EOF: {\n                    this._err(error_codes_js_1.ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(error_codes_js_1.ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                token.tagName += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case unicode_js_1.CODE_POINTS.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith(unicode_js_1.SEQUENCES.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(unicode_js_1.SEQUENCES.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < unicode_js_1.SEQUENCES.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith(unicode_js_1.SEQUENCES.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(unicode_js_1.SEQUENCES.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < unicode_js_1.SEQUENCES.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.SOLIDUS:\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EQUALS_SIGN: {\n                this._err(error_codes_js_1.ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED:\n            case unicode_js_1.CODE_POINTS.SOLIDUS:\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK:\n            case unicode_js_1.CODE_POINTS.APOSTROPHE:\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this.currentAttr.name += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this.currentAttr.value += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this.currentAttr.value += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                this.currentAttr.value += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK:\n            case unicode_js_1.CODE_POINTS.APOSTROPHE:\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:\n            case unicode_js_1.CODE_POINTS.EQUALS_SIGN:\n            case unicode_js_1.CODE_POINTS.GRAVE_ACCENT: {\n                this._err(error_codes_js_1.ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                token.data += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.DASH_DASH, true)) {\n            this._createCommentToken(unicode_js_1.SEQUENCES.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation(unicode_js_1.SEQUENCES.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(error_codes_js_1.ERR.cdataInHtmlContent);\n                this._createCommentToken(unicode_js_1.SEQUENCES.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(error_codes_js_1.ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                token.data += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN && cp !== unicode_js_1.CODE_POINTS.EOF) {\n            this._err(error_codes_js_1.ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case unicode_js_1.CODE_POINTS.SPACE:\n                case unicode_js_1.CODE_POINTS.LINE_FEED:\n                case unicode_js_1.CODE_POINTS.TABULATION:\n                case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case unicode_js_1.CODE_POINTS.NULL: {\n                    this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(unicode_js_1.REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                    this._err(error_codes_js_1.ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case unicode_js_1.CODE_POINTS.EOF: {\n                    this._err(error_codes_js_1.ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                token.name += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(error_codes_js_1.ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                token.publicId += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                token.publicId += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                this._err(error_codes_js_1.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                this._err(error_codes_js_1.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                token.systemId += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                token.systemId += unicode_js_1.REPLACEMENT_CHARACTER;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(error_codes_js_1.ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.SPACE:\n            case unicode_js_1.CODE_POINTS.LINE_FEED:\n            case unicode_js_1.CODE_POINTS.TABULATION:\n            case unicode_js_1.CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(error_codes_js_1.ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.NULL: {\n                this._err(error_codes_js_1.ERR.unexpectedNullCharacter);\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.EOF: {\n                this._err(error_codes_js_1.ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === unicode_js_1.CODE_POINTS.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === unicode_js_1.CODE_POINTS.SEMICOLON) {\n                this._err(error_codes_js_1.ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === unicode_js_1.CODE_POINTS.LATIN_SMALL_X || cp === unicode_js_1.CODE_POINTS.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(error_codes_js_1.ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(error_codes_js_1.ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === unicode_js_1.CODE_POINTS.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === unicode_js_1.CODE_POINTS.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === unicode_js_1.CODE_POINTS.NULL) {\n            this._err(error_codes_js_1.ERR.nullCharacterReference);\n            this.charRefCode = unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(error_codes_js_1.ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER;\n        }\n        else if ((0, unicode_js_1.isSurrogate)(this.charRefCode)) {\n            this._err(error_codes_js_1.ERR.surrogateCharacterReference);\n            this.charRefCode = unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER;\n        }\n        else if ((0, unicode_js_1.isUndefinedCodePoint)(this.charRefCode)) {\n            this._err(error_codes_js_1.ERR.noncharacterCharacterReference);\n        }\n        else if ((0, unicode_js_1.isControlCodePoint)(this.charRefCode) || this.charRefCode === unicode_js_1.CODE_POINTS.CARRIAGE_RETURN) {\n            this._err(error_codes_js_1.ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\nexports.Tokenizer = Tokenizer;\n//# sourceMappingURL=index.js.map"]}}