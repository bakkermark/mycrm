{"code":"(()=>{\n\"use strict\";const{detachNodeFromParent}=require(\"../lib/xast.js\");exports.name=\"removeComments\";exports.description=\"removes comments\";const DEFAULT_PRESERVE_PATTERNS=[/^!/];exports.fn=(_root,params)=>{const{preservePatterns=DEFAULT_PRESERVE_PATTERNS}=params;return{comment:{enter:(node,parentNode)=>{if(preservePatterns){if(!Array.isArray(preservePatterns)){throw Error(`Expected array in removeComments preservePatterns parameter but received ${preservePatterns}`)}const matches=preservePatterns.some(pattern=>{return new RegExp(pattern).test(node.value)});if(matches){return}}detachNodeFromParent(node,parentNode)}}}};\n})()\n","warnings":[],"map":{"version":3,"mappings":";aAEA,KAAM,CAAE,oBAAqB,EAAI,QAAQ,gBAAgB,EAEzD,QAAQ,KAAO,iBACf,QAAQ,YAAc,mBAMtB,MAAM,0BAA4B,CAAC,IAAI,EAavC,QAAQ,GAAK,CAAC,MAAO,SAAW,CAC9B,KAAM,CAAE,iBAAmB,yBAA0B,EAAI,OAEzD,MAAO,CACL,QAAS,CACP,MAAO,CAAC,KAAM,aAAe,CAC3B,GAAI,iBAAkB,CACpB,GAAI,CAAC,MAAM,QAAQ,gBAAgB,EAAG,CACpC,MAAM,MACJ,4EAA4E,gBAAgB,EAC9F,CACF,CAEA,MAAM,QAAU,iBAAiB,KAAM,SAAY,CACjD,OAAO,IAAI,OAAO,OAAO,EAAE,KAAK,KAAK,KAAK,CAC5C,CAAC,EAED,GAAI,QAAS,CACX,MACF,CACF,CAEA,qBAAqB,KAAM,UAAU,CACvC,CACF,CACF,CACF","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/svgo@3.0.3/node_modules/svgo/plugins/removeComments.js"],"sourcesContent":["'use strict';\n\nconst { detachNodeFromParent } = require('../lib/xast.js');\n\nexports.name = 'removeComments';\nexports.description = 'removes comments';\n\n/**\n * If a comment matches one of the following patterns, it will be\n * preserved by default. Particularly for copyright/license information.\n */\nconst DEFAULT_PRESERVE_PATTERNS = [/^!/];\n\n/**\n * Remove comments.\n *\n * @example\n * <!-- Generator: Adobe Illustrator 15.0.0, SVG Export\n * Plug-In . SVG Version: 6.00 Build 0)  -->\n *\n * @author Kir Belevich\n *\n * @type {import('./plugins-types').Plugin<'removeComments'>}\n */\nexports.fn = (_root, params) => {\n  const { preservePatterns = DEFAULT_PRESERVE_PATTERNS } = params;\n\n  return {\n    comment: {\n      enter: (node, parentNode) => {\n        if (preservePatterns) {\n          if (!Array.isArray(preservePatterns)) {\n            throw Error(\n              `Expected array in removeComments preservePatterns parameter but received ${preservePatterns}`\n            );\n          }\n\n          const matches = preservePatterns.some((pattern) => {\n            return new RegExp(pattern).test(node.value);\n          });\n\n          if (matches) {\n            return;\n          }\n        }\n\n        detachNodeFromParent(node, parentNode);\n      },\n    },\n  };\n};\n"]}}