{"code":"(()=>{\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.AttributeAction=exports.IgnoreCaseMode=exports.SelectorType=void 0;var SelectorType;(function(SelectorType2){SelectorType2[\"Attribute\"]=\"attribute\";SelectorType2[\"Pseudo\"]=\"pseudo\";SelectorType2[\"PseudoElement\"]=\"pseudo-element\";SelectorType2[\"Tag\"]=\"tag\";SelectorType2[\"Universal\"]=\"universal\";SelectorType2[\"Adjacent\"]=\"adjacent\";SelectorType2[\"Child\"]=\"child\";SelectorType2[\"Descendant\"]=\"descendant\";SelectorType2[\"Parent\"]=\"parent\";SelectorType2[\"Sibling\"]=\"sibling\";SelectorType2[\"ColumnCombinator\"]=\"column-combinator\"})(SelectorType=exports.SelectorType||(exports.SelectorType={}));exports.IgnoreCaseMode={Unknown:null,QuirksMode:\"quirks\",IgnoreCase:true,CaseSensitive:false};var AttributeAction;(function(AttributeAction2){AttributeAction2[\"Any\"]=\"any\";AttributeAction2[\"Element\"]=\"element\";AttributeAction2[\"End\"]=\"end\";AttributeAction2[\"Equals\"]=\"equals\";AttributeAction2[\"Exists\"]=\"exists\";AttributeAction2[\"Hyphen\"]=\"hyphen\";AttributeAction2[\"Not\"]=\"not\";AttributeAction2[\"Start\"]=\"start\"})(AttributeAction=exports.AttributeAction||(exports.AttributeAction={}));\n})()\n","warnings":[],"map":{"version":3,"mappings":";aACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,gBAAkB,QAAQ,eAAiB,QAAQ,aAAe,OAC1E,IAAI,cACH,SAAUA,cAAc,CACrBA,cAAa,WAAW,EAAI,YAC5BA,cAAa,QAAQ,EAAI,SACzBA,cAAa,eAAe,EAAI,iBAChCA,cAAa,KAAK,EAAI,MACtBA,cAAa,WAAW,EAAI,YAE5BA,cAAa,UAAU,EAAI,WAC3BA,cAAa,OAAO,EAAI,QACxBA,cAAa,YAAY,EAAI,aAC7BA,cAAa,QAAQ,EAAI,SACzBA,cAAa,SAAS,EAAI,UAC1BA,cAAa,kBAAkB,EAAI,mBACvC,GAAG,aAAe,QAAQ,eAAiB,QAAQ,aAAe,CAAC,EAAE,EAQrE,QAAQ,eAAiB,CACrB,QAAS,KACT,WAAY,SACZ,WAAY,KACZ,cAAe,KACnB,EACA,IAAI,iBACH,SAAUC,iBAAiB,CACxBA,iBAAgB,KAAK,EAAI,MACzBA,iBAAgB,SAAS,EAAI,UAC7BA,iBAAgB,KAAK,EAAI,MACzBA,iBAAgB,QAAQ,EAAI,SAC5BA,iBAAgB,QAAQ,EAAI,SAC5BA,iBAAgB,QAAQ,EAAI,SAC5BA,iBAAgB,KAAK,EAAI,MACzBA,iBAAgB,OAAO,EAAI,OAC/B,GAAG,gBAAkB,QAAQ,kBAAoB,QAAQ,gBAAkB,CAAC,EAAE","names":["SelectorType","AttributeAction"],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/css-what@6.1.0/node_modules/css-what/lib/commonjs/types.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AttributeAction = exports.IgnoreCaseMode = exports.SelectorType = void 0;\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType = exports.SelectorType || (exports.SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexports.IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nvar AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction = exports.AttributeAction || (exports.AttributeAction = {}));\n"]}}