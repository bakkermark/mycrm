{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const{attrsGroups}=require(\"../../plugins/_collections\");exports.encodeSVGDatauri=(str,type)=>{var prefix=\"data:image/svg+xml\";if(!type||type===\"base64\"){prefix+=\";base64,\";str=prefix+Buffer.from(str).toString(\"base64\")}else if(type===\"enc\"){str=prefix+\",\"+encodeURIComponent(str)}else if(type===\"unenc\"){str=prefix+\",\"+str}return str};exports.decodeSVGDatauri=str=>{var regexp=/data:image\\/svg\\+xml(;charset=[^;,]*)?(;base64)?,(.*)/;var match=regexp.exec(str);if(!match)return str;var data=match[3];if(match[2]){str=Buffer.from(data,\"base64\").toString(\"utf8\")}else if(data.charAt(0)===\"%\"){str=decodeURIComponent(data)}else if(data.charAt(0)===\"<\"){str=data}return str};exports.cleanupOutData=(data,params,command)=>{let str=\"\";let delimiter;let prev;data.forEach((item,i)=>{delimiter=\" \";if(i==0)delimiter=\"\";if(params.noSpaceAfterFlags&&(command==\"A\"||command==\"a\")){var pos=i%7;if(pos==4||pos==5)delimiter=\"\"}const itemStr=params.leadingZero?removeLeadingZero(item):item.toString();if(params.negativeExtraSpace&&delimiter!=\"\"&&(item<0||itemStr.charAt(0)===\".\"&&prev%1!==0)){delimiter=\"\"}prev=item;str+=delimiter+itemStr});return str};const removeLeadingZero=__name(num=>{var strNum=num.toString();if(0<num&&num<1&&strNum.charAt(0)===\"0\"){strNum=strNum.slice(1)}else if(-1<num&&num<0&&strNum.charAt(1)===\"0\"){strNum=strNum.charAt(0)+strNum.slice(2)}return strNum},\"removeLeadingZero\");exports.removeLeadingZero=removeLeadingZero;const hasScripts=__name(node=>{if(node.name===\"script\"&&node.children.length!==0){return true}if(node.name===\"a\"){const hasJsLinks=Object.entries(node.attributes).some(([attrKey,attrValue])=>(attrKey===\"href\"||attrKey.endsWith(\":href\"))&&attrValue!=null&&attrValue.trimStart().startsWith(\"javascript:\"));if(hasJsLinks){return true}}const eventAttrs=[...attrsGroups.animationEvent,...attrsGroups.documentEvent,...attrsGroups.documentElementEvent,...attrsGroups.globalEvent,...attrsGroups.graphicalEvent];return eventAttrs.some(attr=>node.attributes[attr]!=null)},\"hasScripts\");exports.hasScripts=hasScripts;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAQA,KAAM,CAAE,WAAY,EAAI,QAAQ,4BAA4B,EAO5D,QAAQ,iBAAmB,CAAC,IAAK,OAAS,CACxC,IAAI,OAAS,qBACb,GAAI,CAAC,MAAQ,OAAS,SAAU,CAE9B,QAAU,WACV,IAAM,OAAS,OAAO,KAAK,GAAG,EAAE,SAAS,QAAQ,CACnD,SAAW,OAAS,MAAO,CAEzB,IAAM,OAAS,IAAM,mBAAmB,GAAG,CAC7C,SAAW,OAAS,QAAS,CAE3B,IAAM,OAAS,IAAM,GACvB,CACA,OAAO,GACT,EAOA,QAAQ,iBAAoB,KAAQ,CAClC,IAAI,OAAS,wDACb,IAAI,MAAQ,OAAO,KAAK,GAAG,EAG3B,GAAI,CAAC,MAAO,OAAO,IAEnB,IAAI,KAAO,MAAM,CAAC,EAElB,GAAI,MAAM,CAAC,EAAG,CAEZ,IAAM,OAAO,KAAK,KAAM,QAAQ,EAAE,SAAS,MAAM,CACnD,SAAW,KAAK,OAAO,CAAC,IAAM,IAAK,CAEjC,IAAM,mBAAmB,IAAI,CAC/B,SAAW,KAAK,OAAO,CAAC,IAAM,IAAK,CAEjC,IAAM,IACR,CACA,OAAO,GACT,EAkBA,QAAQ,eAAiB,CAAC,KAAM,OAAQ,UAAY,CAClD,IAAI,IAAM,GACV,IAAI,UAIJ,IAAI,KAEJ,KAAK,QAAQ,CAAC,KAAM,IAAM,CAExB,UAAY,IAGZ,GAAI,GAAK,EAAG,UAAY,GAIxB,GAAI,OAAO,oBAAsB,SAAW,KAAO,SAAW,KAAM,CAClE,IAAI,IAAM,EAAI,EACd,GAAI,KAAO,GAAK,KAAO,EAAG,UAAY,EACxC,CAKA,MAAM,QAAU,OAAO,YACnB,kBAAkB,IAAI,EACtB,KAAK,SAAS,EAIlB,GACE,OAAO,oBACP,WAAa,KACZ,KAAO,GAAM,QAAQ,OAAO,CAAC,IAAM,KAAO,KAAO,IAAM,GACxD,CACA,UAAY,EACd,CAEA,KAAO,KACP,KAAO,UAAY,OACrB,CAAC,EACD,OAAO,GACT,EAaA,MAAM,kBAAoB,OAAC,KAAQ,CACjC,IAAI,OAAS,IAAI,SAAS,EAE1B,GAAI,EAAI,KAAO,IAAM,GAAK,OAAO,OAAO,CAAC,IAAM,IAAK,CAClD,OAAS,OAAO,MAAM,CAAC,CACzB,SAAW,GAAK,KAAO,IAAM,GAAK,OAAO,OAAO,CAAC,IAAM,IAAK,CAC1D,OAAS,OAAO,OAAO,CAAC,EAAI,OAAO,MAAM,CAAC,CAC5C,CACA,OAAO,MACT,EAT0B,qBAU1B,QAAQ,kBAAoB,kBAS5B,MAAM,WAAa,OAAC,MAAS,CAC3B,GAAI,KAAK,OAAS,UAAY,KAAK,SAAS,SAAW,EAAG,CACxD,MAAO,KACT,CAEA,GAAI,KAAK,OAAS,IAAK,CACrB,MAAM,WAAa,OAAO,QAAQ,KAAK,UAAU,EAAE,KACjD,CAAC,CAAC,QAAS,SAAS,KACjB,UAAY,QAAU,QAAQ,SAAS,OAAO,IAC/C,WAAa,MACb,UAAU,UAAU,EAAE,WAAW,aAAa,CAClD,EAEA,GAAI,WAAY,CACd,MAAO,KACT,CACF,CAEA,MAAM,WAAa,CACjB,GAAG,YAAY,eACf,GAAG,YAAY,cACf,GAAG,YAAY,qBACf,GAAG,YAAY,YACf,GAAG,YAAY,cACjB,EAEA,OAAO,WAAW,KAAM,MAAS,KAAK,WAAW,IAAI,GAAK,IAAI,CAChE,EA3BmB,cA4BnB,QAAQ,WAAa","names":[],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/svgo@3.0.3/node_modules/svgo/lib/svgo/tools.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {import('../../lib/types').XastElement} XastElement\n * @typedef {import('../types').PathDataCommand} PathDataCommand\n * @typedef {import('../types').DataUri} DataUri\n */\n\nconst { attrsGroups } = require('../../plugins/_collections');\n\n/**\n * Encode plain SVG data string into Data URI string.\n *\n * @type {(str: string, type?: DataUri) => string}\n */\nexports.encodeSVGDatauri = (str, type) => {\n  var prefix = 'data:image/svg+xml';\n  if (!type || type === 'base64') {\n    // base64\n    prefix += ';base64,';\n    str = prefix + Buffer.from(str).toString('base64');\n  } else if (type === 'enc') {\n    // URI encoded\n    str = prefix + ',' + encodeURIComponent(str);\n  } else if (type === 'unenc') {\n    // unencoded\n    str = prefix + ',' + str;\n  }\n  return str;\n};\n\n/**\n * Decode SVG Data URI string into plain SVG string.\n *\n * @type {(str: string) => string}\n */\nexports.decodeSVGDatauri = (str) => {\n  var regexp = /data:image\\/svg\\+xml(;charset=[^;,]*)?(;base64)?,(.*)/;\n  var match = regexp.exec(str);\n\n  // plain string\n  if (!match) return str;\n\n  var data = match[3];\n\n  if (match[2]) {\n    // base64\n    str = Buffer.from(data, 'base64').toString('utf8');\n  } else if (data.charAt(0) === '%') {\n    // URI encoded\n    str = decodeURIComponent(data);\n  } else if (data.charAt(0) === '<') {\n    // unencoded\n    str = data;\n  }\n  return str;\n};\n\n/**\n * @typedef {{\n *   noSpaceAfterFlags?: boolean,\n *   leadingZero?: boolean,\n *   negativeExtraSpace?: boolean\n * }} CleanupOutDataParams\n */\n\n/**\n * Convert a row of numbers to an optimized string view.\n *\n * @example\n * [0, -1, .5, .5] → \"0-1 .5.5\"\n *\n * @type {(data: Array<number>, params: CleanupOutDataParams, command?: PathDataCommand) => string}\n */\nexports.cleanupOutData = (data, params, command) => {\n  let str = '';\n  let delimiter;\n  /**\n   * @type {number}\n   */\n  let prev;\n\n  data.forEach((item, i) => {\n    // space delimiter by default\n    delimiter = ' ';\n\n    // no extra space in front of first number\n    if (i == 0) delimiter = '';\n\n    // no extra space after 'arcto' command flags(large-arc and sweep flags)\n    // a20 60 45 0 1 30 20 → a20 60 45 0130 20\n    if (params.noSpaceAfterFlags && (command == 'A' || command == 'a')) {\n      var pos = i % 7;\n      if (pos == 4 || pos == 5) delimiter = '';\n    }\n\n    // remove floating-point numbers leading zeros\n    // 0.5 → .5\n    // -0.5 → -.5\n    const itemStr = params.leadingZero\n      ? removeLeadingZero(item)\n      : item.toString();\n\n    // no extra space in front of negative number or\n    // in front of a floating number if a previous number is floating too\n    if (\n      params.negativeExtraSpace &&\n      delimiter != '' &&\n      (item < 0 || (itemStr.charAt(0) === '.' && prev % 1 !== 0))\n    ) {\n      delimiter = '';\n    }\n    // save prev item value\n    prev = item;\n    str += delimiter + itemStr;\n  });\n  return str;\n};\n\n/**\n * Remove floating-point numbers leading zero.\n *\n * @example\n * 0.5 → .5\n *\n * @example\n * -0.5 → -.5\n *\n * @type {(num: number) => string}\n */\nconst removeLeadingZero = (num) => {\n  var strNum = num.toString();\n\n  if (0 < num && num < 1 && strNum.charAt(0) === '0') {\n    strNum = strNum.slice(1);\n  } else if (-1 < num && num < 0 && strNum.charAt(1) === '0') {\n    strNum = strNum.charAt(0) + strNum.slice(2);\n  }\n  return strNum;\n};\nexports.removeLeadingZero = removeLeadingZero;\n\n/**\n * If the current node contains any scripts. This does not check parents or\n * children of the node, only the properties and attributes of the node itself.\n *\n * @param {XastElement} node Current node to check against.\n * @returns {boolean} If the current node contains scripts.\n */\nconst hasScripts = (node) => {\n  if (node.name === 'script' && node.children.length !== 0) {\n    return true;\n  }\n\n  if (node.name === 'a') {\n    const hasJsLinks = Object.entries(node.attributes).some(\n      ([attrKey, attrValue]) =>\n        (attrKey === 'href' || attrKey.endsWith(':href')) &&\n        attrValue != null &&\n        attrValue.trimStart().startsWith('javascript:')\n    );\n\n    if (hasJsLinks) {\n      return true;\n    }\n  }\n\n  const eventAttrs = [\n    ...attrsGroups.animationEvent,\n    ...attrsGroups.documentEvent,\n    ...attrsGroups.documentElementEvent,\n    ...attrsGroups.globalEvent,\n    ...attrsGroups.graphicalEvent,\n  ];\n\n  return eventAttrs.some((attr) => node.attributes[attr] != null);\n};\nexports.hasScripts = hasScripts;\n"]}}