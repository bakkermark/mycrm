{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const{collectStylesheet,computeStyle}=require(\"../lib/style.js\");const{visit}=require(\"../lib/xast.js\");const{pathElems}=require(\"./_collections.js\");const{path2js,js2path}=require(\"./_path.js\");const{applyTransforms}=require(\"./applyTransforms.js\");const{cleanupOutData}=require(\"../lib/svgo/tools\");exports.name=\"convertPathData\";exports.description=\"optimizes path data: writes in shorter form, applies transformations\";let roundData;let precision;let error;let arcThreshold;let arcTolerance;exports.fn=(root,params)=>{const{applyTransforms:_applyTransforms=true,applyTransformsStroked=true,makeArcs={threshold:2.5,tolerance:.5},straightCurves=true,lineShorthands=true,curveSmoothShorthands=true,floatPrecision=3,transformPrecision=5,removeUseless=true,collapseRepeated=true,utilizeAbsolute=true,leadingZero=true,negativeExtraSpace=true,noSpaceAfterFlags=false,forceAbsolutePath=false}=params;const newParams={applyTransforms:_applyTransforms,applyTransformsStroked,makeArcs,straightCurves,lineShorthands,curveSmoothShorthands,floatPrecision,transformPrecision,removeUseless,collapseRepeated,utilizeAbsolute,leadingZero,negativeExtraSpace,noSpaceAfterFlags,forceAbsolutePath};if(_applyTransforms){visit(root,applyTransforms(root,{transformPrecision,applyTransformsStroked}))}const stylesheet=collectStylesheet(root);return{element:{enter:node=>{if(pathElems.includes(node.name)&&node.attributes.d!=null){const computedStyle=computeStyle(stylesheet,node);precision=floatPrecision;error=precision!==false?+Math.pow(.1,precision).toFixed(precision):.01;roundData=precision>0&&precision<20?strongRound:round;if(makeArcs){arcThreshold=makeArcs.threshold;arcTolerance=makeArcs.tolerance}const hasMarkerMid=computedStyle[\"marker-mid\"]!=null;const maybeHasStroke=computedStyle.stroke&&(computedStyle.stroke.type===\"dynamic\"||computedStyle.stroke.value!==\"none\");const maybeHasLinecap=computedStyle[\"stroke-linecap\"]&&(computedStyle[\"stroke-linecap\"].type===\"dynamic\"||computedStyle[\"stroke-linecap\"].value!==\"butt\");const maybeHasStrokeAndLinecap=maybeHasStroke&&maybeHasLinecap;var data=path2js(node);if(data.length){convertToRelative(data);data=filters(data,newParams,{maybeHasStrokeAndLinecap,hasMarkerMid});if(utilizeAbsolute){data=convertToMixed(data,newParams)}js2path(node,data,newParams)}}}}}};const convertToRelative=__name(pathData=>{let start=[0,0];let cursor=[0,0];let prevCoords=[0,0];for(let i=0;i<pathData.length;i+=1){const pathItem=pathData[i];let{command,args}=pathItem;if(command===\"m\"){cursor[0]+=args[0];cursor[1]+=args[1];start[0]=cursor[0];start[1]=cursor[1]}if(command===\"M\"){if(i!==0){command=\"m\"}args[0]-=cursor[0];args[1]-=cursor[1];cursor[0]+=args[0];cursor[1]+=args[1];start[0]=cursor[0];start[1]=cursor[1]}if(command===\"l\"){cursor[0]+=args[0];cursor[1]+=args[1]}if(command===\"L\"){command=\"l\";args[0]-=cursor[0];args[1]-=cursor[1];cursor[0]+=args[0];cursor[1]+=args[1]}if(command===\"h\"){cursor[0]+=args[0]}if(command===\"H\"){command=\"h\";args[0]-=cursor[0];cursor[0]+=args[0]}if(command===\"v\"){cursor[1]+=args[0]}if(command===\"V\"){command=\"v\";args[0]-=cursor[1];cursor[1]+=args[0]}if(command===\"c\"){cursor[0]+=args[4];cursor[1]+=args[5]}if(command===\"C\"){command=\"c\";args[0]-=cursor[0];args[1]-=cursor[1];args[2]-=cursor[0];args[3]-=cursor[1];args[4]-=cursor[0];args[5]-=cursor[1];cursor[0]+=args[4];cursor[1]+=args[5]}if(command===\"s\"){cursor[0]+=args[2];cursor[1]+=args[3]}if(command===\"S\"){command=\"s\";args[0]-=cursor[0];args[1]-=cursor[1];args[2]-=cursor[0];args[3]-=cursor[1];cursor[0]+=args[2];cursor[1]+=args[3]}if(command===\"q\"){cursor[0]+=args[2];cursor[1]+=args[3]}if(command===\"Q\"){command=\"q\";args[0]-=cursor[0];args[1]-=cursor[1];args[2]-=cursor[0];args[3]-=cursor[1];cursor[0]+=args[2];cursor[1]+=args[3]}if(command===\"t\"){cursor[0]+=args[0];cursor[1]+=args[1]}if(command===\"T\"){command=\"t\";args[0]-=cursor[0];args[1]-=cursor[1];cursor[0]+=args[0];cursor[1]+=args[1]}if(command===\"a\"){cursor[0]+=args[5];cursor[1]+=args[6]}if(command===\"A\"){command=\"a\";args[5]-=cursor[0];args[6]-=cursor[1];cursor[0]+=args[5];cursor[1]+=args[6]}if(command===\"Z\"||command===\"z\"){cursor[0]=start[0];cursor[1]=start[1]}pathItem.command=command;pathItem.args=args;pathItem.base=prevCoords;pathItem.coords=[cursor[0],cursor[1]];prevCoords=pathItem.coords}return pathData},\"convertToRelative\");function filters(path,params,{maybeHasStrokeAndLinecap,hasMarkerMid}){var stringify=data2Path.bind(null,params),relSubpoint=[0,0],pathBase=[0,0],prev={};path=path.filter(function(item,index,path2){let command=item.command;let data=item.args;let next=path2[index+1];if(command!==\"Z\"&&command!==\"z\"){var sdata=data,circle;if(command===\"s\"){sdata=[0,0].concat(data);var pdata=prev.args,n=pdata.length;sdata[0]=pdata[n-2]-pdata[n-4];sdata[1]=pdata[n-1]-pdata[n-3]}if(params.makeArcs&&(command==\"c\"||command==\"s\")&&isConvex(sdata)&&(circle=findCircle(sdata))){var r=roundData([circle.radius])[0],angle=findArcAngle(sdata,circle),sweep=sdata[5]*sdata[0]-sdata[4]*sdata[1]>0?1:0,arc={command:\"a\",args:[r,r,0,0,sweep,sdata[4],sdata[5]],coords:item.coords.slice(),base:item.base},output=[arc],relCenter=[circle.center[0]-sdata[4],circle.center[1]-sdata[5]],relCircle={center:relCenter,radius:circle.radius},arcCurves=[item],hasPrev=0,suffix=\"\",nextLonghand;if(prev.command==\"c\"&&isConvex(prev.args)&&isArcPrev(prev.args,circle)||prev.command==\"a\"&&prev.sdata&&isArcPrev(prev.sdata,circle)){arcCurves.unshift(prev);arc.base=prev.base;arc.args[5]=arc.coords[0]-arc.base[0];arc.args[6]=arc.coords[1]-arc.base[1];var prevData=prev.command==\"a\"?prev.sdata:prev.args;var prevAngle=findArcAngle(prevData,{center:[prevData[4]+circle.center[0],prevData[5]+circle.center[1]],radius:circle.radius});angle+=prevAngle;if(angle>Math.PI)arc.args[3]=1;hasPrev=1}for(var j=index;(next=path2[++j])&&~\"cs\".indexOf(next.command);){var nextData=next.args;if(next.command==\"s\"){nextLonghand=makeLonghand({command:\"s\",args:next.args.slice()},path2[j-1].args);nextData=nextLonghand.args;nextLonghand.args=nextData.slice(0,2);suffix=stringify([nextLonghand])}if(isConvex(nextData)&&isArc(nextData,relCircle)){angle+=findArcAngle(nextData,relCircle);if(angle-2*Math.PI>.001)break;if(angle>Math.PI)arc.args[3]=1;arcCurves.push(next);if(2*Math.PI-angle>.001){arc.coords=next.coords;arc.args[5]=arc.coords[0]-arc.base[0];arc.args[6]=arc.coords[1]-arc.base[1]}else{arc.args[5]=2*(relCircle.center[0]-nextData[4]);arc.args[6]=2*(relCircle.center[1]-nextData[5]);arc.coords=[arc.base[0]+arc.args[5],arc.base[1]+arc.args[6]];arc={command:\"a\",args:[r,r,0,0,sweep,next.coords[0]-arc.coords[0],next.coords[1]-arc.coords[1]],coords:next.coords,base:arc.coords};output.push(arc);j++;break}relCenter[0]-=nextData[4];relCenter[1]-=nextData[5]}else break}if((stringify(output)+suffix).length<stringify(arcCurves).length){if(path2[j]&&path2[j].command==\"s\"){makeLonghand(path2[j],path2[j-1].args)}if(hasPrev){var prevArc=output.shift();roundData(prevArc.args);relSubpoint[0]+=prevArc.args[5]-prev.args[prev.args.length-2];relSubpoint[1]+=prevArc.args[6]-prev.args[prev.args.length-1];prev.command=\"a\";prev.args=prevArc.args;item.base=prev.coords=prevArc.coords}arc=output.shift();if(arcCurves.length==1){item.sdata=sdata.slice()}else if(arcCurves.length-1-hasPrev>0){path2.splice.apply(path2,[index+1,arcCurves.length-1-hasPrev].concat(output))}if(!arc)return false;command=\"a\";data=arc.args;item.coords=arc.coords}}if(precision!==false){if(command===\"m\"||command===\"l\"||command===\"t\"||command===\"q\"||command===\"s\"||command===\"c\"){for(var i=data.length;i--;){data[i]+=item.base[i%2]-relSubpoint[i%2]}}else if(command==\"h\"){data[0]+=item.base[0]-relSubpoint[0]}else if(command==\"v\"){data[0]+=item.base[1]-relSubpoint[1]}else if(command==\"a\"){data[5]+=item.base[0]-relSubpoint[0];data[6]+=item.base[1]-relSubpoint[1]}roundData(data);if(command==\"h\")relSubpoint[0]+=data[0];else if(command==\"v\")relSubpoint[1]+=data[0];else{relSubpoint[0]+=data[data.length-2];relSubpoint[1]+=data[data.length-1]}roundData(relSubpoint);if(command===\"M\"||command===\"m\"){pathBase[0]=relSubpoint[0];pathBase[1]=relSubpoint[1]}}if(params.straightCurves){if(command===\"c\"&&isCurveStraightLine(data)||command===\"s\"&&isCurveStraightLine(sdata)){if(next&&next.command==\"s\")makeLonghand(next,data);command=\"l\";data=data.slice(-2)}else if(command===\"q\"&&isCurveStraightLine(data)){if(next&&next.command==\"t\")makeLonghand(next,data);command=\"l\";data=data.slice(-2)}else if(command===\"t\"&&prev.command!==\"q\"&&prev.command!==\"t\"){command=\"l\";data=data.slice(-2)}else if(command===\"a\"&&(data[0]===0||data[1]===0)){command=\"l\";data=data.slice(-2)}}if(params.lineShorthands&&command===\"l\"){if(data[1]===0){command=\"h\";data.pop()}else if(data[0]===0){command=\"v\";data.shift()}}if(params.collapseRepeated&&hasMarkerMid===false&&(command===\"m\"||command===\"h\"||command===\"v\")&&prev.command&&command==prev.command.toLowerCase()&&(command!=\"h\"&&command!=\"v\"||prev.args[0]>=0==data[0]>=0)){prev.args[0]+=data[0];if(command!=\"h\"&&command!=\"v\"){prev.args[1]+=data[1]}prev.coords=item.coords;path2[index]=prev;return false}if(params.curveSmoothShorthands&&prev.command){if(command===\"c\"){if(prev.command===\"c\"&&data[0]===-(prev.args[2]-prev.args[4])&&data[1]===-(prev.args[3]-prev.args[5])){command=\"s\";data=data.slice(2)}else if(prev.command===\"s\"&&data[0]===-(prev.args[0]-prev.args[2])&&data[1]===-(prev.args[1]-prev.args[3])){command=\"s\";data=data.slice(2)}else if(prev.command!==\"c\"&&prev.command!==\"s\"&&data[0]===0&&data[1]===0){command=\"s\";data=data.slice(2)}}else if(command===\"q\"){if(prev.command===\"q\"&&data[0]===prev.args[2]-prev.args[0]&&data[1]===prev.args[3]-prev.args[1]){command=\"t\";data=data.slice(2)}else if(prev.command===\"t\"&&data[2]===prev.args[0]&&data[3]===prev.args[1]){command=\"t\";data=data.slice(2)}}}if(params.removeUseless&&!maybeHasStrokeAndLinecap){if((command===\"l\"||command===\"h\"||command===\"v\"||command===\"q\"||command===\"t\"||command===\"c\"||command===\"s\")&&data.every(function(i2){return i2===0})){path2[index]=prev;return false}if(command===\"a\"&&data[5]===0&&data[6]===0){path2[index]=prev;return false}}item.command=command;item.args=data;prev=item}else{relSubpoint[0]=pathBase[0];relSubpoint[1]=pathBase[1];if(prev.command===\"Z\"||prev.command===\"z\")return false;prev=item}return true});return path}__name(filters,\"filters\");function convertToMixed(path,params){var prev=path[0];path=path.filter(function(item,index){if(index==0)return true;if(item.command===\"Z\"||item.command===\"z\"){prev=item;return true}var command=item.command,data=item.args,adata=data.slice();if(command===\"m\"||command===\"l\"||command===\"t\"||command===\"q\"||command===\"s\"||command===\"c\"){for(var i=adata.length;i--;){adata[i]+=item.base[i%2]}}else if(command==\"h\"){adata[0]+=item.base[0]}else if(command==\"v\"){adata[0]+=item.base[1]}else if(command==\"a\"){adata[5]+=item.base[0];adata[6]+=item.base[1]}roundData(adata);var absoluteDataStr=cleanupOutData(adata,params),relativeDataStr=cleanupOutData(data,params);if(params.forceAbsolutePath||absoluteDataStr.length<relativeDataStr.length&&!(params.negativeExtraSpace&&command==prev.command&&prev.command.charCodeAt(0)>96&&absoluteDataStr.length==relativeDataStr.length-1&&(data[0]<0||/^0\\./.test(data[0])&&prev.args[prev.args.length-1]%1))){item.command=command.toUpperCase();item.args=adata}prev=item;return true});return path}__name(convertToMixed,\"convertToMixed\");function isConvex(data){var center=getIntersection([0,0,data[2],data[3],data[0],data[1],data[4],data[5]]);return center!=null&&data[2]<center[0]==center[0]<0&&data[3]<center[1]==center[1]<0&&data[4]<center[0]==center[0]<data[0]&&data[5]<center[1]==center[1]<data[1]}__name(isConvex,\"isConvex\");function getIntersection(coords){var a1=coords[1]-coords[3],b1=coords[2]-coords[0],c1=coords[0]*coords[3]-coords[2]*coords[1],a2=coords[5]-coords[7],b2=coords[6]-coords[4],c2=coords[4]*coords[7]-coords[5]*coords[6],denom=a1*b2-a2*b1;if(!denom)return;var cross=[(b1*c2-b2*c1)/denom,(a1*c2-a2*c1)/-denom];if(!isNaN(cross[0])&&!isNaN(cross[1])&&isFinite(cross[0])&&isFinite(cross[1])){return cross}}__name(getIntersection,\"getIntersection\");function toFixed(num,precision2){const pow=10**precision2;return Math.round(num*pow)/pow}__name(toFixed,\"toFixed\");function strongRound(data){const precisionNum=precision||0;for(let i=data.length;i-- >0;){const fixed=toFixed(data[i],precisionNum);if(fixed!==data[i]){const rounded=toFixed(data[i],precisionNum-1);data[i]=toFixed(Math.abs(rounded-data[i]),precisionNum+1)>=error?fixed:rounded}}return data}__name(strongRound,\"strongRound\");function round(data){for(var i=data.length;i-- >0;){data[i]=Math.round(data[i])}return data}__name(round,\"round\");function isCurveStraightLine(data){var i=data.length-2,a=-data[i+1],b=data[i],d=1/(a*a+b*b);if(i<=1||!isFinite(d))return false;while((i-=2)>=0){if(Math.sqrt(Math.pow(a*data[i]+b*data[i+1],2)*d)>error)return false}return true}__name(isCurveStraightLine,\"isCurveStraightLine\");function makeLonghand(item,data){switch(item.command){case\"s\":item.command=\"c\";break;case\"t\":item.command=\"q\";break}item.args.unshift(data[data.length-2]-data[data.length-4],data[data.length-1]-data[data.length-3]);return item}__name(makeLonghand,\"makeLonghand\");function getDistance(point1,point2){return Math.hypot(point1[0]-point2[0],point1[1]-point2[1])}__name(getDistance,\"getDistance\");function getCubicBezierPoint(curve,t){var sqrT=t*t,cubT=sqrT*t,mt=1-t,sqrMt=mt*mt;return[3*sqrMt*t*curve[0]+3*mt*sqrT*curve[2]+cubT*curve[4],3*sqrMt*t*curve[1]+3*mt*sqrT*curve[3]+cubT*curve[5]]}__name(getCubicBezierPoint,\"getCubicBezierPoint\");function findCircle(curve){var midPoint=getCubicBezierPoint(curve,1/2),m1=[midPoint[0]/2,midPoint[1]/2],m2=[(midPoint[0]+curve[4])/2,(midPoint[1]+curve[5])/2],center=getIntersection([m1[0],m1[1],m1[0]+m1[1],m1[1]-m1[0],m2[0],m2[1],m2[0]+(m2[1]-midPoint[1]),m2[1]-(m2[0]-midPoint[0])]),radius=center&&getDistance([0,0],center),tolerance=Math.min(arcThreshold*error,arcTolerance*radius/100);if(center&&radius<1e15&&[1/4,3/4].every(function(point){return Math.abs(getDistance(getCubicBezierPoint(curve,point),center)-radius)<=tolerance}))return{center,radius}}__name(findCircle,\"findCircle\");function isArc(curve,circle){var tolerance=Math.min(arcThreshold*error,arcTolerance*circle.radius/100);return[0,1/4,1/2,3/4,1].every(function(point){return Math.abs(getDistance(getCubicBezierPoint(curve,point),circle.center)-circle.radius)<=tolerance})}__name(isArc,\"isArc\");function isArcPrev(curve,circle){return isArc(curve,{center:[circle.center[0]+curve[4],circle.center[1]+curve[5]],radius:circle.radius})}__name(isArcPrev,\"isArcPrev\");function findArcAngle(curve,relCircle){var x1=-relCircle.center[0],y1=-relCircle.center[1],x2=curve[4]-relCircle.center[0],y2=curve[5]-relCircle.center[1];return Math.acos((x1*x2+y1*y2)/Math.sqrt((x1*x1+y1*y1)*(x2*x2+y2*y2)))}__name(findArcAngle,\"findArcAngle\");function data2Path(params,pathData){return pathData.reduce(function(pathString,item){var strData=\"\";if(item.args){strData=cleanupOutData(roundData(item.args.slice()),params)}return pathString+item.command+strData},\"\")}__name(data2Path,\"data2Path\");\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["path","i","precision"],"sources":["/Users/markbakker/RiderProjects/mycrm/node_modules/.pnpm/svgo@3.0.3/node_modules/svgo/plugins/convertPathData.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {import('../lib//types').PathDataItem} PathDataItem\n */\n\nconst { collectStylesheet, computeStyle } = require('../lib/style.js');\nconst { visit } = require('../lib/xast.js');\nconst { pathElems } = require('./_collections.js');\nconst { path2js, js2path } = require('./_path.js');\nconst { applyTransforms } = require('./applyTransforms.js');\nconst { cleanupOutData } = require('../lib/svgo/tools');\n\nexports.name = 'convertPathData';\nexports.description =\n  'optimizes path data: writes in shorter form, applies transformations';\n\n/**\n * @type {(data: number[]) => number[]}\n */\nlet roundData;\n/**\n * @type {number | false}\n */\nlet precision;\n/**\n * @type {number}\n */\nlet error;\n/**\n * @type {number}\n */\nlet arcThreshold;\n/**\n * @type {number}\n */\nlet arcTolerance;\n\n/**\n * @typedef {{\n *   applyTransforms: boolean,\n *   applyTransformsStroked: boolean,\n *   makeArcs: {\n *     threshold: number,\n *     tolerance: number,\n *   },\n *   straightCurves: boolean,\n *   lineShorthands: boolean,\n *   curveSmoothShorthands: boolean,\n *   floatPrecision: number | false,\n *   transformPrecision: number,\n *   removeUseless: boolean,\n *   collapseRepeated: boolean,\n *   utilizeAbsolute: boolean,\n *   leadingZero: boolean,\n *   negativeExtraSpace: boolean,\n *   noSpaceAfterFlags: boolean,\n *   forceAbsolutePath: boolean,\n * }} InternalParams\n */\n\n/**\n * @typedef {[number, number]} Point\n */\n\n/**\n * @typedef {{\n *   center: Point,\n *   radius: number\n * }} Circle\n */\n\n/**\n * Convert absolute Path to relative,\n * collapse repeated instructions,\n * detect and convert Lineto shorthands,\n * remove useless instructions like \"l0,0\",\n * trim useless delimiters and leading zeros,\n * decrease accuracy of floating-point numbers.\n *\n * @see https://www.w3.org/TR/SVG11/paths.html#PathData\n *\n * @author Kir Belevich\n *\n * @type {import('./plugins-types').Plugin<'convertPathData'>}\n */\nexports.fn = (root, params) => {\n  const {\n    // TODO convert to separate plugin in v3\n    applyTransforms: _applyTransforms = true,\n    applyTransformsStroked = true,\n    makeArcs = {\n      threshold: 2.5, // coefficient of rounding error\n      tolerance: 0.5, // percentage of radius\n    },\n    straightCurves = true,\n    lineShorthands = true,\n    curveSmoothShorthands = true,\n    floatPrecision = 3,\n    transformPrecision = 5,\n    removeUseless = true,\n    collapseRepeated = true,\n    utilizeAbsolute = true,\n    leadingZero = true,\n    negativeExtraSpace = true,\n    noSpaceAfterFlags = false, // a20 60 45 0 1 30 20 → a20 60 45 0130 20\n    forceAbsolutePath = false,\n  } = params;\n\n  /**\n   * @type {InternalParams}\n   */\n  const newParams = {\n    applyTransforms: _applyTransforms,\n    applyTransformsStroked,\n    makeArcs,\n    straightCurves,\n    lineShorthands,\n    curveSmoothShorthands,\n    floatPrecision,\n    transformPrecision,\n    removeUseless,\n    collapseRepeated,\n    utilizeAbsolute,\n    leadingZero,\n    negativeExtraSpace,\n    noSpaceAfterFlags,\n    forceAbsolutePath,\n  };\n\n  // invoke applyTransforms plugin\n  if (_applyTransforms) {\n    visit(\n      root,\n      // @ts-ignore\n      applyTransforms(root, {\n        transformPrecision,\n        applyTransformsStroked,\n      })\n    );\n  }\n\n  const stylesheet = collectStylesheet(root);\n  return {\n    element: {\n      enter: (node) => {\n        if (pathElems.includes(node.name) && node.attributes.d != null) {\n          const computedStyle = computeStyle(stylesheet, node);\n          precision = floatPrecision;\n          error =\n            precision !== false\n              ? +Math.pow(0.1, precision).toFixed(precision)\n              : 1e-2;\n          roundData = precision > 0 && precision < 20 ? strongRound : round;\n          if (makeArcs) {\n            arcThreshold = makeArcs.threshold;\n            arcTolerance = makeArcs.tolerance;\n          }\n          const hasMarkerMid = computedStyle['marker-mid'] != null;\n\n          const maybeHasStroke =\n            computedStyle.stroke &&\n            (computedStyle.stroke.type === 'dynamic' ||\n              computedStyle.stroke.value !== 'none');\n          const maybeHasLinecap =\n            computedStyle['stroke-linecap'] &&\n            (computedStyle['stroke-linecap'].type === 'dynamic' ||\n              computedStyle['stroke-linecap'].value !== 'butt');\n          const maybeHasStrokeAndLinecap = maybeHasStroke && maybeHasLinecap;\n\n          var data = path2js(node);\n\n          // TODO: get rid of functions returns\n          if (data.length) {\n            convertToRelative(data);\n\n            data = filters(data, newParams, {\n              maybeHasStrokeAndLinecap,\n              hasMarkerMid,\n            });\n\n            if (utilizeAbsolute) {\n              data = convertToMixed(data, newParams);\n            }\n\n            // @ts-ignore\n            js2path(node, data, newParams);\n          }\n        }\n      },\n    },\n  };\n};\n\n/**\n * Convert absolute path data coordinates to relative.\n *\n * @type {(pathData: PathDataItem[]) => PathDataItem[]}\n */\nconst convertToRelative = (pathData) => {\n  let start = [0, 0];\n  let cursor = [0, 0];\n  let prevCoords = [0, 0];\n\n  for (let i = 0; i < pathData.length; i += 1) {\n    const pathItem = pathData[i];\n    let { command, args } = pathItem;\n\n    // moveto (x y)\n    if (command === 'm') {\n      // update start and cursor\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n      start[0] = cursor[0];\n      start[1] = cursor[1];\n    }\n    if (command === 'M') {\n      // M → m\n      // skip first moveto\n      if (i !== 0) {\n        command = 'm';\n      }\n      args[0] -= cursor[0];\n      args[1] -= cursor[1];\n      // update start and cursor\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n      start[0] = cursor[0];\n      start[1] = cursor[1];\n    }\n\n    // lineto (x y)\n    if (command === 'l') {\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n    }\n    if (command === 'L') {\n      // L → l\n      command = 'l';\n      args[0] -= cursor[0];\n      args[1] -= cursor[1];\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n    }\n\n    // horizontal lineto (x)\n    if (command === 'h') {\n      cursor[0] += args[0];\n    }\n    if (command === 'H') {\n      // H → h\n      command = 'h';\n      args[0] -= cursor[0];\n      cursor[0] += args[0];\n    }\n\n    // vertical lineto (y)\n    if (command === 'v') {\n      cursor[1] += args[0];\n    }\n    if (command === 'V') {\n      // V → v\n      command = 'v';\n      args[0] -= cursor[1];\n      cursor[1] += args[0];\n    }\n\n    // curveto (x1 y1 x2 y2 x y)\n    if (command === 'c') {\n      cursor[0] += args[4];\n      cursor[1] += args[5];\n    }\n    if (command === 'C') {\n      // C → c\n      command = 'c';\n      args[0] -= cursor[0];\n      args[1] -= cursor[1];\n      args[2] -= cursor[0];\n      args[3] -= cursor[1];\n      args[4] -= cursor[0];\n      args[5] -= cursor[1];\n      cursor[0] += args[4];\n      cursor[1] += args[5];\n    }\n\n    // smooth curveto (x2 y2 x y)\n    if (command === 's') {\n      cursor[0] += args[2];\n      cursor[1] += args[3];\n    }\n    if (command === 'S') {\n      // S → s\n      command = 's';\n      args[0] -= cursor[0];\n      args[1] -= cursor[1];\n      args[2] -= cursor[0];\n      args[3] -= cursor[1];\n      cursor[0] += args[2];\n      cursor[1] += args[3];\n    }\n\n    // quadratic Bézier curveto (x1 y1 x y)\n    if (command === 'q') {\n      cursor[0] += args[2];\n      cursor[1] += args[3];\n    }\n    if (command === 'Q') {\n      // Q → q\n      command = 'q';\n      args[0] -= cursor[0];\n      args[1] -= cursor[1];\n      args[2] -= cursor[0];\n      args[3] -= cursor[1];\n      cursor[0] += args[2];\n      cursor[1] += args[3];\n    }\n\n    // smooth quadratic Bézier curveto (x y)\n    if (command === 't') {\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n    }\n    if (command === 'T') {\n      // T → t\n      command = 't';\n      args[0] -= cursor[0];\n      args[1] -= cursor[1];\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n    }\n\n    // elliptical arc (rx ry x-axis-rotation large-arc-flag sweep-flag x y)\n    if (command === 'a') {\n      cursor[0] += args[5];\n      cursor[1] += args[6];\n    }\n    if (command === 'A') {\n      // A → a\n      command = 'a';\n      args[5] -= cursor[0];\n      args[6] -= cursor[1];\n      cursor[0] += args[5];\n      cursor[1] += args[6];\n    }\n\n    // closepath\n    if (command === 'Z' || command === 'z') {\n      // reset cursor\n      cursor[0] = start[0];\n      cursor[1] = start[1];\n    }\n\n    pathItem.command = command;\n    pathItem.args = args;\n    // store absolute coordinates for later use\n    // base should preserve reference from other element\n    // @ts-ignore\n    pathItem.base = prevCoords;\n    // @ts-ignore\n    pathItem.coords = [cursor[0], cursor[1]];\n    // @ts-ignore\n    prevCoords = pathItem.coords;\n  }\n\n  return pathData;\n};\n\n/**\n * Main filters loop.\n *\n * @type {(\n *   path: PathDataItem[],\n *   params: InternalParams,\n *   aux: { maybeHasStrokeAndLinecap: boolean, hasMarkerMid: boolean }\n * ) => PathDataItem[]}\n */\nfunction filters(path, params, { maybeHasStrokeAndLinecap, hasMarkerMid }) {\n  var stringify = data2Path.bind(null, params),\n    relSubpoint = [0, 0],\n    pathBase = [0, 0],\n    prev = {};\n\n  path = path.filter(function (item, index, path) {\n    let command = item.command;\n    let data = item.args;\n    let next = path[index + 1];\n\n    if (command !== 'Z' && command !== 'z') {\n      var sdata = data,\n        circle;\n\n      if (command === 's') {\n        sdata = [0, 0].concat(data);\n\n        // @ts-ignore\n        var pdata = prev.args,\n          n = pdata.length;\n\n        // (-x, -y) of the prev tangent point relative to the current point\n        sdata[0] = pdata[n - 2] - pdata[n - 4];\n        sdata[1] = pdata[n - 1] - pdata[n - 3];\n      }\n\n      // convert curves to arcs if possible\n      if (\n        params.makeArcs &&\n        (command == 'c' || command == 's') &&\n        isConvex(sdata) &&\n        (circle = findCircle(sdata))\n      ) {\n        var r = roundData([circle.radius])[0],\n          angle = findArcAngle(sdata, circle),\n          sweep = sdata[5] * sdata[0] - sdata[4] * sdata[1] > 0 ? 1 : 0,\n          /**\n           * @type {PathDataItem}\n           */\n          arc = {\n            command: 'a',\n            args: [r, r, 0, 0, sweep, sdata[4], sdata[5]],\n            // @ts-ignore\n            coords: item.coords.slice(),\n            // @ts-ignore\n            base: item.base,\n          },\n          /**\n           * @type {PathDataItem[]}\n           */\n          output = [arc],\n          // relative coordinates to adjust the found circle\n          /**\n           * @type {Point}\n           */\n          relCenter = [\n            circle.center[0] - sdata[4],\n            circle.center[1] - sdata[5],\n          ],\n          relCircle = { center: relCenter, radius: circle.radius },\n          arcCurves = [item],\n          hasPrev = 0,\n          suffix = '',\n          nextLonghand;\n\n        if (\n          // @ts-ignore\n          (prev.command == 'c' &&\n            // @ts-ignore\n            isConvex(prev.args) &&\n            // @ts-ignore\n            isArcPrev(prev.args, circle)) ||\n          // @ts-ignore\n          (prev.command == 'a' && prev.sdata && isArcPrev(prev.sdata, circle))\n        ) {\n          // @ts-ignore\n          arcCurves.unshift(prev);\n          // @ts-ignore\n          arc.base = prev.base;\n          // @ts-ignore\n          arc.args[5] = arc.coords[0] - arc.base[0];\n          // @ts-ignore\n          arc.args[6] = arc.coords[1] - arc.base[1];\n          // @ts-ignore\n          var prevData = prev.command == 'a' ? prev.sdata : prev.args;\n          var prevAngle = findArcAngle(prevData, {\n            center: [\n              prevData[4] + circle.center[0],\n              prevData[5] + circle.center[1],\n            ],\n            radius: circle.radius,\n          });\n          angle += prevAngle;\n          if (angle > Math.PI) arc.args[3] = 1;\n          hasPrev = 1;\n        }\n\n        // check if next curves are fitting the arc\n        for (\n          var j = index;\n          (next = path[++j]) && ~'cs'.indexOf(next.command);\n\n        ) {\n          var nextData = next.args;\n          if (next.command == 's') {\n            nextLonghand = makeLonghand(\n              { command: 's', args: next.args.slice() },\n              path[j - 1].args\n            );\n            nextData = nextLonghand.args;\n            nextLonghand.args = nextData.slice(0, 2);\n            suffix = stringify([nextLonghand]);\n          }\n          if (isConvex(nextData) && isArc(nextData, relCircle)) {\n            angle += findArcAngle(nextData, relCircle);\n            if (angle - 2 * Math.PI > 1e-3) break; // more than 360°\n            if (angle > Math.PI) arc.args[3] = 1;\n            arcCurves.push(next);\n            if (2 * Math.PI - angle > 1e-3) {\n              // less than 360°\n              // @ts-ignore\n              arc.coords = next.coords;\n              // @ts-ignore\n              arc.args[5] = arc.coords[0] - arc.base[0];\n              // @ts-ignore\n              arc.args[6] = arc.coords[1] - arc.base[1];\n            } else {\n              // full circle, make a half-circle arc and add a second one\n              arc.args[5] = 2 * (relCircle.center[0] - nextData[4]);\n              arc.args[6] = 2 * (relCircle.center[1] - nextData[5]);\n              // @ts-ignore\n              arc.coords = [\n                // @ts-ignore\n                arc.base[0] + arc.args[5],\n                // @ts-ignore\n                arc.base[1] + arc.args[6],\n              ];\n              arc = {\n                command: 'a',\n                args: [\n                  r,\n                  r,\n                  0,\n                  0,\n                  sweep,\n                  // @ts-ignore\n                  next.coords[0] - arc.coords[0],\n                  // @ts-ignore\n                  next.coords[1] - arc.coords[1],\n                ],\n                // @ts-ignore\n                coords: next.coords,\n                // @ts-ignore\n                base: arc.coords,\n              };\n              output.push(arc);\n              j++;\n              break;\n            }\n            relCenter[0] -= nextData[4];\n            relCenter[1] -= nextData[5];\n          } else break;\n        }\n\n        if ((stringify(output) + suffix).length < stringify(arcCurves).length) {\n          if (path[j] && path[j].command == 's') {\n            makeLonghand(path[j], path[j - 1].args);\n          }\n          if (hasPrev) {\n            var prevArc = output.shift();\n            // @ts-ignore\n            roundData(prevArc.args);\n            // @ts-ignore\n            relSubpoint[0] += prevArc.args[5] - prev.args[prev.args.length - 2];\n            // @ts-ignore\n            relSubpoint[1] += prevArc.args[6] - prev.args[prev.args.length - 1];\n            // @ts-ignore\n            prev.command = 'a';\n            // @ts-ignore\n            prev.args = prevArc.args;\n            // @ts-ignore\n            item.base = prev.coords = prevArc.coords;\n          }\n          // @ts-ignore\n          arc = output.shift();\n          if (arcCurves.length == 1) {\n            // @ts-ignore\n            item.sdata = sdata.slice(); // preserve curve data for future checks\n          } else if (arcCurves.length - 1 - hasPrev > 0) {\n            // filter out consumed next items\n            path.splice.apply(\n              path,\n              // @ts-ignore\n              [index + 1, arcCurves.length - 1 - hasPrev].concat(output)\n            );\n          }\n          if (!arc) return false;\n          command = 'a';\n          data = arc.args;\n          // @ts-ignore\n          item.coords = arc.coords;\n        }\n      }\n\n      // Rounding relative coordinates, taking in account accummulating error\n      // to get closer to absolute coordinates. Sum of rounded value remains same:\n      // l .25 3 .25 2 .25 3 .25 2 -> l .3 3 .2 2 .3 3 .2 2\n      if (precision !== false) {\n        if (\n          command === 'm' ||\n          command === 'l' ||\n          command === 't' ||\n          command === 'q' ||\n          command === 's' ||\n          command === 'c'\n        ) {\n          for (var i = data.length; i--; ) {\n            // @ts-ignore\n            data[i] += item.base[i % 2] - relSubpoint[i % 2];\n          }\n        } else if (command == 'h') {\n          // @ts-ignore\n          data[0] += item.base[0] - relSubpoint[0];\n        } else if (command == 'v') {\n          // @ts-ignore\n          data[0] += item.base[1] - relSubpoint[1];\n        } else if (command == 'a') {\n          // @ts-ignore\n          data[5] += item.base[0] - relSubpoint[0];\n          // @ts-ignore\n          data[6] += item.base[1] - relSubpoint[1];\n        }\n        roundData(data);\n\n        if (command == 'h') relSubpoint[0] += data[0];\n        else if (command == 'v') relSubpoint[1] += data[0];\n        else {\n          relSubpoint[0] += data[data.length - 2];\n          relSubpoint[1] += data[data.length - 1];\n        }\n        roundData(relSubpoint);\n\n        if (command === 'M' || command === 'm') {\n          pathBase[0] = relSubpoint[0];\n          pathBase[1] = relSubpoint[1];\n        }\n      }\n\n      // convert straight curves into lines segments\n      if (params.straightCurves) {\n        if (\n          (command === 'c' && isCurveStraightLine(data)) ||\n          (command === 's' && isCurveStraightLine(sdata))\n        ) {\n          if (next && next.command == 's') makeLonghand(next, data); // fix up next curve\n          command = 'l';\n          data = data.slice(-2);\n        } else if (command === 'q' && isCurveStraightLine(data)) {\n          if (next && next.command == 't') makeLonghand(next, data); // fix up next curve\n          command = 'l';\n          data = data.slice(-2);\n        } else if (\n          command === 't' &&\n          // @ts-ignore\n          prev.command !== 'q' &&\n          // @ts-ignore\n          prev.command !== 't'\n        ) {\n          command = 'l';\n          data = data.slice(-2);\n        } else if (command === 'a' && (data[0] === 0 || data[1] === 0)) {\n          command = 'l';\n          data = data.slice(-2);\n        }\n      }\n\n      // horizontal and vertical line shorthands\n      // l 50 0 → h 50\n      // l 0 50 → v 50\n      if (params.lineShorthands && command === 'l') {\n        if (data[1] === 0) {\n          command = 'h';\n          data.pop();\n        } else if (data[0] === 0) {\n          command = 'v';\n          data.shift();\n        }\n      }\n\n      // collapse repeated commands\n      // h 20 h 30 -> h 50\n      if (\n        params.collapseRepeated &&\n        hasMarkerMid === false &&\n        (command === 'm' || command === 'h' || command === 'v') &&\n        // @ts-ignore\n        prev.command &&\n        // @ts-ignore\n        command == prev.command.toLowerCase() &&\n        ((command != 'h' && command != 'v') ||\n          // @ts-ignore\n          prev.args[0] >= 0 == data[0] >= 0)\n      ) {\n        // @ts-ignore\n        prev.args[0] += data[0];\n        if (command != 'h' && command != 'v') {\n          // @ts-ignore\n          prev.args[1] += data[1];\n        }\n        // @ts-ignore\n        prev.coords = item.coords;\n        // @ts-ignore\n        path[index] = prev;\n        return false;\n      }\n\n      // convert curves into smooth shorthands\n      // @ts-ignore\n      if (params.curveSmoothShorthands && prev.command) {\n        // curveto\n        if (command === 'c') {\n          // c + c → c + s\n          if (\n            // @ts-ignore\n            prev.command === 'c' &&\n            // @ts-ignore\n            data[0] === -(prev.args[2] - prev.args[4]) &&\n            // @ts-ignore\n            data[1] === -(prev.args[3] - prev.args[5])\n          ) {\n            command = 's';\n            data = data.slice(2);\n          }\n\n          // s + c → s + s\n          else if (\n            // @ts-ignore\n            prev.command === 's' &&\n            // @ts-ignore\n            data[0] === -(prev.args[0] - prev.args[2]) &&\n            // @ts-ignore\n            data[1] === -(prev.args[1] - prev.args[3])\n          ) {\n            command = 's';\n            data = data.slice(2);\n          }\n\n          // [^cs] + c → [^cs] + s\n          else if (\n            // @ts-ignore\n            prev.command !== 'c' &&\n            // @ts-ignore\n            prev.command !== 's' &&\n            data[0] === 0 &&\n            data[1] === 0\n          ) {\n            command = 's';\n            data = data.slice(2);\n          }\n        }\n\n        // quadratic Bézier curveto\n        else if (command === 'q') {\n          // q + q → q + t\n          if (\n            // @ts-ignore\n            prev.command === 'q' &&\n            // @ts-ignore\n            data[0] === prev.args[2] - prev.args[0] &&\n            // @ts-ignore\n            data[1] === prev.args[3] - prev.args[1]\n          ) {\n            command = 't';\n            data = data.slice(2);\n          }\n\n          // t + q → t + t\n          else if (\n            // @ts-ignore\n            prev.command === 't' &&\n            // @ts-ignore\n            data[2] === prev.args[0] &&\n            // @ts-ignore\n            data[3] === prev.args[1]\n          ) {\n            command = 't';\n            data = data.slice(2);\n          }\n        }\n      }\n\n      // remove useless non-first path segments\n      if (params.removeUseless && !maybeHasStrokeAndLinecap) {\n        // l 0,0 / h 0 / v 0 / q 0,0 0,0 / t 0,0 / c 0,0 0,0 0,0 / s 0,0 0,0\n        if (\n          (command === 'l' ||\n            command === 'h' ||\n            command === 'v' ||\n            command === 'q' ||\n            command === 't' ||\n            command === 'c' ||\n            command === 's') &&\n          data.every(function (i) {\n            return i === 0;\n          })\n        ) {\n          // @ts-ignore\n          path[index] = prev;\n          return false;\n        }\n\n        // a 25,25 -30 0,1 0,0\n        if (command === 'a' && data[5] === 0 && data[6] === 0) {\n          // @ts-ignore\n          path[index] = prev;\n          return false;\n        }\n      }\n\n      item.command = command;\n      item.args = data;\n\n      prev = item;\n    } else {\n      // z resets coordinates\n      relSubpoint[0] = pathBase[0];\n      relSubpoint[1] = pathBase[1];\n      // @ts-ignore\n      if (prev.command === 'Z' || prev.command === 'z') return false;\n      prev = item;\n    }\n\n    return true;\n  });\n\n  return path;\n}\n\n/**\n * Writes data in shortest form using absolute or relative coordinates.\n *\n * @type {(path: PathDataItem[], params: InternalParams) => PathDataItem[]}\n */\nfunction convertToMixed(path, params) {\n  var prev = path[0];\n\n  path = path.filter(function (item, index) {\n    if (index == 0) return true;\n    if (item.command === 'Z' || item.command === 'z') {\n      prev = item;\n      return true;\n    }\n\n    var command = item.command,\n      data = item.args,\n      adata = data.slice();\n\n    if (\n      command === 'm' ||\n      command === 'l' ||\n      command === 't' ||\n      command === 'q' ||\n      command === 's' ||\n      command === 'c'\n    ) {\n      for (var i = adata.length; i--; ) {\n        // @ts-ignore\n        adata[i] += item.base[i % 2];\n      }\n    } else if (command == 'h') {\n      // @ts-ignore\n      adata[0] += item.base[0];\n    } else if (command == 'v') {\n      // @ts-ignore\n      adata[0] += item.base[1];\n    } else if (command == 'a') {\n      // @ts-ignore\n      adata[5] += item.base[0];\n      // @ts-ignore\n      adata[6] += item.base[1];\n    }\n\n    roundData(adata);\n\n    var absoluteDataStr = cleanupOutData(adata, params),\n      relativeDataStr = cleanupOutData(data, params);\n\n    // Convert to absolute coordinates if it's shorter or forceAbsolutePath is true.\n    // v-20 -> V0\n    // Don't convert if it fits following previous command.\n    // l20 30-10-50 instead of l20 30L20 30\n    if (\n      params.forceAbsolutePath ||\n      (absoluteDataStr.length < relativeDataStr.length &&\n        !(\n          params.negativeExtraSpace &&\n          command == prev.command &&\n          prev.command.charCodeAt(0) > 96 &&\n          absoluteDataStr.length == relativeDataStr.length - 1 &&\n          (data[0] < 0 ||\n            // @ts-ignore\n            (/^0\\./.test(data[0]) && prev.args[prev.args.length - 1] % 1))\n        ))\n    ) {\n      // @ts-ignore\n      item.command = command.toUpperCase();\n      item.args = adata;\n    }\n\n    prev = item;\n\n    return true;\n  });\n\n  return path;\n}\n\n/**\n * Checks if curve is convex. Control points of such a curve must form\n * a convex quadrilateral with diagonals crosspoint inside of it.\n *\n * @type {(data: number[]) => boolean}\n */\nfunction isConvex(data) {\n  var center = getIntersection([\n    0,\n    0,\n    data[2],\n    data[3],\n    data[0],\n    data[1],\n    data[4],\n    data[5],\n  ]);\n\n  return (\n    center != null &&\n    data[2] < center[0] == center[0] < 0 &&\n    data[3] < center[1] == center[1] < 0 &&\n    data[4] < center[0] == center[0] < data[0] &&\n    data[5] < center[1] == center[1] < data[1]\n  );\n}\n\n/**\n * Computes lines equations by two points and returns their intersection point.\n *\n * @type {(coords: number[]) => undefined | Point}\n */\nfunction getIntersection(coords) {\n  // Prev line equation parameters.\n  var a1 = coords[1] - coords[3], // y1 - y2\n    b1 = coords[2] - coords[0], // x2 - x1\n    c1 = coords[0] * coords[3] - coords[2] * coords[1], // x1 * y2 - x2 * y1\n    // Next line equation parameters\n    a2 = coords[5] - coords[7], // y1 - y2\n    b2 = coords[6] - coords[4], // x2 - x1\n    c2 = coords[4] * coords[7] - coords[5] * coords[6], // x1 * y2 - x2 * y1\n    denom = a1 * b2 - a2 * b1;\n\n  if (!denom) return; // parallel lines havn't an intersection\n\n  /**\n   * @type {Point}\n   */\n  var cross = [(b1 * c2 - b2 * c1) / denom, (a1 * c2 - a2 * c1) / -denom];\n  if (\n    !isNaN(cross[0]) &&\n    !isNaN(cross[1]) &&\n    isFinite(cross[0]) &&\n    isFinite(cross[1])\n  ) {\n    return cross;\n  }\n}\n\n/**\n * Does the same as `Number.prototype.toFixed` but without casting\n * the return value to a string.\n * @type {(num: number, precision: number) => number}\n */\nfunction toFixed(num, precision) {\n  const pow = 10 ** precision;\n  return Math.round(num * pow) / pow;\n}\n\n/**\n * Decrease accuracy of floating-point numbers\n * in path data keeping a specified number of decimals.\n * Smart rounds values like 2.3491 to 2.35 instead of 2.349.\n * Doesn't apply \"smartness\" if the number precision fits already.\n *\n * @type {(data: number[]) => number[]}\n */\nfunction strongRound(data) {\n  const precisionNum = precision || 0;\n  for (let i = data.length; i-- > 0; ) {\n    const fixed = toFixed(data[i], precisionNum);\n    if (fixed !== data[i]) {\n      const rounded = toFixed(data[i], precisionNum - 1);\n      data[i] =\n        toFixed(Math.abs(rounded - data[i]), precisionNum + 1) >= error\n          ? fixed\n          : rounded;\n    }\n  }\n  return data;\n}\n\n/**\n * Simple rounding function if precision is 0.\n *\n * @type {(data: number[]) => number[]}\n */\nfunction round(data) {\n  for (var i = data.length; i-- > 0; ) {\n    data[i] = Math.round(data[i]);\n  }\n  return data;\n}\n\n/**\n * Checks if a curve is a straight line by measuring distance\n * from middle points to the line formed by end points.\n *\n * @type {(data: number[]) => boolean}\n */\n\nfunction isCurveStraightLine(data) {\n  // Get line equation a·x + b·y + c = 0 coefficients a, b (c = 0) by start and end points.\n  var i = data.length - 2,\n    a = -data[i + 1], // y1 − y2 (y1 = 0)\n    b = data[i], // x2 − x1 (x1 = 0)\n    d = 1 / (a * a + b * b); // same part for all points\n\n  if (i <= 1 || !isFinite(d)) return false; // curve that ends at start point isn't the case\n\n  // Distance from point (x0, y0) to the line is sqrt((c − a·x0 − b·y0)² / (a² + b²))\n  while ((i -= 2) >= 0) {\n    if (Math.sqrt(Math.pow(a * data[i] + b * data[i + 1], 2) * d) > error)\n      return false;\n  }\n\n  return true;\n}\n\n/**\n * Converts next curve from shorthand to full form using the current curve data.\n *\n * @type {(item: PathDataItem, data: number[]) => PathDataItem}\n */\n\nfunction makeLonghand(item, data) {\n  switch (item.command) {\n    case 's':\n      item.command = 'c';\n      break;\n    case 't':\n      item.command = 'q';\n      break;\n  }\n  item.args.unshift(\n    data[data.length - 2] - data[data.length - 4],\n    data[data.length - 1] - data[data.length - 3]\n  );\n  return item;\n}\n\n/**\n * Returns distance between two points\n *\n * @type {(point1: Point, point2: Point) => number}\n */\n\nfunction getDistance(point1, point2) {\n  return Math.hypot(point1[0] - point2[0], point1[1] - point2[1]);\n}\n\n/**\n * Returns coordinates of the curve point corresponding to the certain t\n * a·(1 - t)³·p1 + b·(1 - t)²·t·p2 + c·(1 - t)·t²·p3 + d·t³·p4,\n * where pN are control points and p1 is zero due to relative coordinates.\n *\n * @type {(curve: number[], t: number) => Point}\n */\n\nfunction getCubicBezierPoint(curve, t) {\n  var sqrT = t * t,\n    cubT = sqrT * t,\n    mt = 1 - t,\n    sqrMt = mt * mt;\n\n  return [\n    3 * sqrMt * t * curve[0] + 3 * mt * sqrT * curve[2] + cubT * curve[4],\n    3 * sqrMt * t * curve[1] + 3 * mt * sqrT * curve[3] + cubT * curve[5],\n  ];\n}\n\n/**\n * Finds circle by 3 points of the curve and checks if the curve fits the found circle.\n *\n * @type {(curve: number[]) => undefined | Circle}\n */\n\nfunction findCircle(curve) {\n  var midPoint = getCubicBezierPoint(curve, 1 / 2),\n    m1 = [midPoint[0] / 2, midPoint[1] / 2],\n    m2 = [(midPoint[0] + curve[4]) / 2, (midPoint[1] + curve[5]) / 2],\n    center = getIntersection([\n      m1[0],\n      m1[1],\n      m1[0] + m1[1],\n      m1[1] - m1[0],\n      m2[0],\n      m2[1],\n      m2[0] + (m2[1] - midPoint[1]),\n      m2[1] - (m2[0] - midPoint[0]),\n    ]),\n    radius = center && getDistance([0, 0], center),\n    // @ts-ignore\n    tolerance = Math.min(arcThreshold * error, (arcTolerance * radius) / 100);\n\n  if (\n    center &&\n    // @ts-ignore\n    radius < 1e15 &&\n    [1 / 4, 3 / 4].every(function (point) {\n      return (\n        Math.abs(\n          // @ts-ignore\n          getDistance(getCubicBezierPoint(curve, point), center) - radius\n        ) <= tolerance\n      );\n    })\n  )\n    // @ts-ignore\n    return { center: center, radius: radius };\n}\n\n/**\n * Checks if a curve fits the given circle.\n *\n * @type {(curve: number[], circle: Circle) => boolean}\n */\n\nfunction isArc(curve, circle) {\n  var tolerance = Math.min(\n    arcThreshold * error,\n    (arcTolerance * circle.radius) / 100\n  );\n\n  return [0, 1 / 4, 1 / 2, 3 / 4, 1].every(function (point) {\n    return (\n      Math.abs(\n        getDistance(getCubicBezierPoint(curve, point), circle.center) -\n          circle.radius\n      ) <= tolerance\n    );\n  });\n}\n\n/**\n * Checks if a previous curve fits the given circle.\n *\n * @type {(curve: number[], circle: Circle) => boolean}\n */\n\nfunction isArcPrev(curve, circle) {\n  return isArc(curve, {\n    center: [circle.center[0] + curve[4], circle.center[1] + curve[5]],\n    radius: circle.radius,\n  });\n}\n\n/**\n * Finds angle of a curve fitting the given arc.\n\n * @type {(curve: number[], relCircle: Circle) => number}\n */\n\nfunction findArcAngle(curve, relCircle) {\n  var x1 = -relCircle.center[0],\n    y1 = -relCircle.center[1],\n    x2 = curve[4] - relCircle.center[0],\n    y2 = curve[5] - relCircle.center[1];\n\n  return Math.acos(\n    (x1 * x2 + y1 * y2) / Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n  );\n}\n\n/**\n * Converts given path data to string.\n *\n * @type {(params: InternalParams, pathData: PathDataItem[]) => string}\n */\n\nfunction data2Path(params, pathData) {\n  return pathData.reduce(function (pathString, item) {\n    var strData = '';\n    if (item.args) {\n      strData = cleanupOutData(roundData(item.args.slice()), params);\n    }\n    return pathString + item.command + strData;\n  }, '');\n}\n"]}}